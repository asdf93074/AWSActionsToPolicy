{"glacier:describejob": ["AmazonGlacierReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy"], "glacier:describevault": ["AWSResourceGroupsReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonGlacierReadOnlyAccess"], "glacier:getdataretrievalpolicy": ["AmazonGlacierReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glacier:getjoboutput": ["AmazonGlacierReadOnlyAccess"], "glacier:getvaultaccesspolicy": ["AmazonGlacierReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "glacier:getvaultlock": ["AmazonGlacierReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glacier:getvaultnotifications": ["AmazonGlacierReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glacier:listjobs": ["AmazonGlacierReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glacier:listmultipartuploads": ["AmazonGlacierReadOnlyAccess"], "glacier:listparts": ["AmazonGlacierReadOnlyAccess"], "glacier:listtagsforvault": ["AmazonGlacierReadOnlyAccess", "AWSResourceGroupsReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glacier:listvaults": ["AWSResourceGroupsReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonGlacierReadOnlyAccess"], "ec2:createnetworkinterface": ["AmazonRDSBetaServiceRolePolicy", "AWSDataSyncFullAccess", "KafkaServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonSageMakerFullAccess", "AWSLambdaENIManagementAccess", "AmazonElasticFileSystemServiceRolePolicy", "AWSLambdaMSKExecutionRole", "AmazonWorkSpacesServiceAccess", "WorkLinkServiceRolePolicy", "AmazonEKSServicePolicy", "APIGatewayServiceRolePolicy", "AmazonMQFullAccess", "AmazonECSServiceRolePolicy", "AWSCloudHSMRole", "AmazonDocDBConsoleFullAccess", "AmazonAppStreamServiceAccess", "NeptuneConsoleFullAccess", "AmazonEKSServiceRolePolicy", "AWSLambdaVPCAccessExecutionRole", "AmazonMQApiFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy", "DAXServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonWorkLinkServiceRolePolicy", "AmazonRoute53ResolverFullAccess", "AmazonVPCFullAccess", "AWSDataPipelineRole", "ClientVPNServiceRolePolicy", "AmazonRDSServiceRolePolicy", "AmazonElasticFileSystemFullAccess", "AWSGlobalAcceleratorSLRPolicy", "AmazonFSxServiceRolePolicy", "AmazonWorkMailFullAccess", "AWSVPCTransitGatewayServiceRolePolicy", "AmazonElasticMapReduceEditorsRole", "AWSGlueServiceRole", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonDMSVPCManagementRole", "AmazonRedshiftServiceLinkedRolePolicy", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AmazonEKS_CNI_Policy", "AmazonElasticMapReduceRole", "AmazonElasticsearchServiceRolePolicy", "AmazonDRSVPCManagement", "AmazonVPCCrossAccountNetworkInterfaceOperations", "ElastiCacheServiceRolePolicy", "SystemAdministrator"], "ec2:createnetworkinterfacepermission": ["AWSDataSyncFullAccess", "KafkaServiceRolePolicy", "AmazonSageMakerFullAccess", "AWSRoboMakerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "WorkLinkServiceRolePolicy", "AmazonEKSServicePolicy", "APIGatewayServiceRolePolicy", "AmazonMQFullAccess", "AmazonECSServiceRolePolicy", "AWSRoboMakerServicePolicy", "AmazonEKSServiceRolePolicy", "AmazonMQApiFullAccess", "NetworkAdministrator", "AmazonWorkLinkServiceRolePolicy", "AmazonRoute53ResolverFullAccess", "AmazonVPCFullAccess", "ClientVPNServiceRolePolicy", "AmazonFSxServiceRolePolicy", "AWSVPCTransitGatewayServiceRolePolicy", "AmazonElasticMapReduceEditorsRole", "AmazonSageMakerNotebooksServiceRolePolicy", "AmazonVPCCrossAccountNetworkInterfaceOperations"], "ec2:describesecuritygroups": ["AWSLambdaMSKExecutionRole", "AmazonSageMakerFullAccess", "AmazonMQFullAccess", "AmazonRDSReadOnlyAccess", "AWSRoboMakerServicePolicy", "AmazonInspectorServiceRolePolicy", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonFSxConsoleReadOnlyAccess", "AmazonRDSPreviewServiceRolePolicy", "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy", "AmazonRoute53ResolverReadOnlyAccess", "AmazonRoute53ResolverFullAccess", "AmazonVPCFullAccess", "ClientVPNServiceRolePolicy", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AmazonRDSServiceRolePolicy", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSMobileHub_FullAccess", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSResourceGroupsReadOnlyAccess", "AmazonEKSClusterPolicy", "AmazonDocDBReadOnlyAccess", "ElastiCacheServiceRolePolicy", "AWSBackupOperatorAccess", "AmazonEKSServicePolicy", "AmazonEKSWorkerNodePolicy", "AmazonRedshiftFullAccess", "AmazonAppStreamServiceAccess", "AWSImageBuilderFullAccess", "AmazonMQReadOnlyAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonVPCReadOnlyAccess", "DatabaseAdministrator", "AmazonElasticMapReduceFullAccess", "AWSBatchServiceRole", "AmazonMQApiReadOnlyAccess", "ElasticLoadBalancingFullAccess", "AutoScalingFullAccess", "AWSBatchFullAccess", "AWSDirectoryServiceFullAccess", "ElasticLoadBalancingReadOnly", "AmazonElasticMapReduceRole", "AmazonKendraFullAccess", "FMSServiceRolePolicy", "AmazonDRSVPCManagement", "AWSOpsWorksRole", "AWSGlobalAcceleratorSLRPolicy", "AWSThinkboxAWSPortalAdminPolicy", "AWSElasticLoadBalancingServiceRolePolicy", "APIGatewayServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "ViewOnlyAccess", "AutoScalingConsoleFullAccess", "AWSCodeBuildAdminAccess", "AmazonEKSServiceRolePolicy", "AmazonRedshiftReadOnlyAccess", "AmazonMQApiFullAccess", "DAXServiceRolePolicy", "AWSLambdaReadOnlyAccess", "AWSOpsWorksFullAccess", "AmazonDynamoDBReadOnlyAccess", "SecretsManagerReadWrite", "AmazonElasticFileSystemReadOnlyAccess", "AmazonMSKFullAccess", "AmazonElasticMapReduceEditorsRole", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AWSDataSyncReadOnlyAccess", "AWSEnhancedClassicNetworkingMangementPolicy", "AWSElasticBeanstalkServiceRolePolicy", "AmazonAppStreamFullAccess", "NeptuneConsoleFullAccess", "AmazonRDSBetaServiceRolePolicy", "AWSDataSyncFullAccess", "CloudWatchSyntheticsFullAccess", "AWSRoboMakerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "AWSTrustedAdvisorServiceRolePolicy", "AWSOpsWorksCMServiceRole", "NetworkAdministrator", "AmazonMSKReadOnlyAccess", "AmazonDynamoDBFullAccess", "NeptuneFullAccess", "AmazonElasticFileSystemFullAccess", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "AWSElasticBeanstalkEnhancedHealth", "ServerMigrationServiceConsoleFullAccess", "AmazonFSxServiceRolePolicy", "AWSBackupFullAccess", "AmazonManagedBlockchainConsoleFullAccess", "AWSGlueServiceRole", "AmazonDMSVPCManagementRole", "AWSCloud9ServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "AmazonFSxConsoleFullAccess", "AWSCodePipelineFullAccess", "AmazonElasticsearchServiceRolePolicy", "AmazonRDSFullAccess", "AmazonElasticFileSystemServiceRolePolicy", "AWSLambdaFullAccess"], "ec2:describevpcs": ["AWSLambdaMSKExecutionRole", "AWSCloud9Administrator", "AmazonSageMakerFullAccess", "AmazonMQFullAccess", "AmazonRDSReadOnlyAccess", "AWSCloudHSMRole", "AWSCodeStarFullAccess", "AWSRoboMakerServicePolicy", "AmazonInspectorServiceRolePolicy", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonFSxConsoleReadOnlyAccess", "AmazonRDSPreviewServiceRolePolicy", "AmazonRoute53ResolverReadOnlyAccess", "AmazonRoute53ResolverFullAccess", "AmazonVPCFullAccess", "ClientVPNServiceRolePolicy", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AmazonRDSServiceRolePolicy", "AWSMobileHub_FullAccess", "AWSCloud9User", "AmazonSageMakerNotebooksServiceRolePolicy", "AccessAnalyzerServiceRolePolicy", "AWSResourceGroupsReadOnlyAccess", "AmazonEKSClusterPolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AmazonDocDBReadOnlyAccess", "ElastiCacheServiceRolePolicy", "AmazonWorkDocsFullAccess", "AWSBackupOperatorAccess", "AmazonRoute53AutoNamingFullAccess", "AmazonEKSServicePolicy", "AmazonEKSWorkerNodePolicy", "AmazonRedshiftFullAccess", "AmazonAppStreamServiceAccess", "AWSImageBuilderFullAccess", "AmazonMQReadOnlyAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonVPCReadOnlyAccess", "DatabaseAdministrator", "AmazonZocaloFullAccess", "AmazonElasticMapReduceFullAccess", "AWSCloudMapFullAccess", "AmazonMQApiReadOnlyAccess", "AmazonWorkMailFullAccess", "ElasticLoadBalancingFullAccess", "AWSBatchFullAccess", "AWSDirectoryServiceFullAccess", "AmazonElasticMapReduceRole", "AWSDirectoryServiceReadOnlyAccess", "AmazonKendraFullAccess", "FMSServiceRolePolicy", "AmazonDRSVPCManagement", "AWSOpsWorksRole", "AWSThinkboxAWSPortalAdminPolicy", "AWSElasticLoadBalancingServiceRolePolicy", "APIGatewayServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AutoScalingConsoleFullAccess", "AWSCodeBuildAdminAccess", "AmazonEKSServiceRolePolicy", "AmazonRedshiftReadOnlyAccess", "AmazonMQApiFullAccess", "AmazonRoute53FullAccess", "DAXServiceRolePolicy", "AmazonWorkDocsReadOnlyAccess", "AWSLambdaReadOnlyAccess", "AWSOpsWorksFullAccess", "AmazonDynamoDBReadOnlyAccess", "SecretsManagerReadWrite", "AmazonElasticFileSystemReadOnlyAccess", "AmazonMSKFullAccess", "AmazonZocaloReadOnlyAccess", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonAppStreamFullAccess", "NeptuneConsoleFullAccess", "AmazonRDSBetaServiceRolePolicy", "CloudWatchSyntheticsFullAccess", "AWSRoboMakerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "AWSTrustedAdvisorServiceRolePolicy", "NetworkAdministrator", "AmazonMSKReadOnlyAccess", "AmazonDynamoDBFullAccess", "NeptuneFullAccess", "AmazonElasticFileSystemFullAccess", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "ServerMigrationServiceConsoleFullAccess", "AmazonFSxServiceRolePolicy", "AWSBackupFullAccess", "AmazonManagedBlockchainConsoleFullAccess", "AmazonDMSVPCManagementRole", "AmazonRedshiftServiceLinkedRolePolicy", "AWSCloud9ServiceRolePolicy", "AWSCodePipelineFullAccess", "AmazonFSxConsoleFullAccess", "AmazonElasticsearchServiceRolePolicy", "AmazonRDSFullAccess", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AutoScalingConsoleReadOnlyAccess", "AWSLambdaFullAccess"], "ec2:describesubnets": ["AWSLambdaMSKExecutionRole", "AWSCloud9Administrator", "AmazonSageMakerFullAccess", "EC2FleetTimeShiftableServiceRolePolicy", "AmazonMQFullAccess", "AmazonRDSReadOnlyAccess", "AWSCloudHSMRole", "AWSCodeStarFullAccess", "AWSRoboMakerServicePolicy", "AmazonInspectorServiceRolePolicy", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonFSxConsoleReadOnlyAccess", "AmazonRDSPreviewServiceRolePolicy", "AmazonRoute53ResolverReadOnlyAccess", "AmazonRoute53ResolverFullAccess", "AmazonVPCFullAccess", "ClientVPNServiceRolePolicy", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AmazonRDSServiceRolePolicy", "GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSMobileHub_FullAccess", "AWSCloud9User", "AmazonSageMakerNotebooksServiceRolePolicy", "AmazonEKSClusterPolicy", "AmazonDocDBReadOnlyAccess", "ElastiCacheServiceRolePolicy", "AmazonWorkDocsFullAccess", "AWSEC2FleetServiceRolePolicy", "AWSBackupOperatorAccess", "AmazonEKSServicePolicy", "AmazonEKSWorkerNodePolicy", "AmazonRedshiftFullAccess", "AmazonAppStreamServiceAccess", "AWSImageBuilderFullAccess", "AmazonMQReadOnlyAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonVPCReadOnlyAccess", "DatabaseAdministrator", "AmazonZocaloFullAccess", "AmazonElasticMapReduceFullAccess", "AWSBatchServiceRole", "AmazonMQApiReadOnlyAccess", "AmazonWorkMailFullAccess", "ElasticLoadBalancingFullAccess", "AutoScalingFullAccess", "AWSBatchFullAccess", "AWSDirectoryServiceFullAccess", "AmazonElasticMapReduceRole", "AWSDirectoryServiceReadOnlyAccess", "AmazonKendraFullAccess", "AmazonDRSVPCManagement", "AWSOpsWorksRole", "AWSGlobalAcceleratorSLRPolicy", "AWSThinkboxAWSPortalAdminPolicy", "AWSElasticLoadBalancingServiceRolePolicy", "APIGatewayServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "ViewOnlyAccess", "AutoScalingConsoleFullAccess", "AWSCodeBuildAdminAccess", "AmazonEKSServiceRolePolicy", "AmazonRedshiftReadOnlyAccess", "AmazonMQApiFullAccess", "DAXServiceRolePolicy", "AmazonWorkDocsReadOnlyAccess", "AWSLambdaReadOnlyAccess", "AWSOpsWorksFullAccess", "AmazonDynamoDBReadOnlyAccess", "SecretsManagerReadWrite", "AmazonElasticFileSystemReadOnlyAccess", "AmazonMSKFullAccess", "AmazonZocaloReadOnlyAccess", "AmazonElasticMapReduceEditorsRole", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AWSDataSyncReadOnlyAccess", "AmazonAppStreamFullAccess", "NeptuneConsoleFullAccess", "AmazonRDSBetaServiceRolePolicy", "AWSDataSyncFullAccess", "CloudWatchSyntheticsFullAccess", "AWSRoboMakerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "AWSEC2SpotFleetServiceRolePolicy", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "NetworkAdministrator", "AmazonMSKReadOnlyAccess", "AmazonDynamoDBFullAccess", "AmazonEC2SpotFleetTaggingRole", "NeptuneFullAccess", "AmazonElasticFileSystemFullAccess", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "ServerMigrationServiceConsoleFullAccess", "AmazonFSxServiceRolePolicy", "AWSBackupFullAccess", "AmazonManagedBlockchainConsoleFullAccess", "AWSGlueServiceRole", "AmazonDMSVPCManagementRole", "AmazonRedshiftServiceLinkedRolePolicy", "AWSCloud9ServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "AmazonFSxConsoleFullAccess", "AWSCodePipelineFullAccess", "AmazonElasticsearchServiceRolePolicy", "AmazonRDSFullAccess", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AutoScalingConsoleReadOnlyAccess", "AmazonElasticFileSystemServiceRolePolicy", "AWSLambdaFullAccess"], "ec2:describeinternetgateways": ["AmazonRDSBetaServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AmazonMQFullAccess", "AmazonRedshiftFullAccess", "AmazonRDSReadOnlyAccess", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "NeptuneReadOnlyAccess", "AmazonInspectorServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonRedshiftReadOnlyAccess", "AmazonMQApiFullAccess", "AmazonVPCReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "DatabaseAdministrator", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "AmazonVPCFullAccess", "ClientVPNServiceRolePolicy", "AmazonRDSServiceRolePolicy", "ElasticLoadBalancingFullAccess", "GlobalAcceleratorFullAccess", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonDMSVPCManagementRole", "AmazonDRSVPCManagement", "AmazonRDSFullAccess", "AWSGlobalAcceleratorSLRPolicy", "AmazonDocDBReadOnlyAccess", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:modifynetworkinterfaceattribute": ["AmazonRDSBetaServiceRolePolicy", "AWSDataSyncFullAccess", "AWSElasticLoadBalancingServiceRolePolicy", "WorkLinkServiceRolePolicy", "AmazonEKSServicePolicy", "APIGatewayServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonEKSServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "DAXServiceRolePolicy", "AmazonWorkLinkServiceRolePolicy", "AmazonRoute53ResolverFullAccess", "AmazonVPCFullAccess", "ClientVPNServiceRolePolicy", "AmazonRDSServiceRolePolicy", "AmazonElasticFileSystemFullAccess", "AWSGlobalAcceleratorSLRPolicy", "AWSVPCTransitGatewayServiceRolePolicy", "AmazonElasticMapReduceEditorsRole", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonDMSVPCManagementRole", "AmazonRedshiftServiceLinkedRolePolicy", "AmazonSageMakerNotebooksServiceRolePolicy", "AmazonEKS_CNI_Policy", "AmazonElasticsearchServiceRolePolicy", "FMSServiceRolePolicy", "AmazonDRSVPCManagement", "AmazonVPCCrossAccountNetworkInterfaceOperations", "ElastiCacheServiceRolePolicy", "AmazonElasticFileSystemServiceRolePolicy"], "ec2:deletenetworkinterface": ["AmazonRDSBetaServiceRolePolicy", "AWSDataSyncFullAccess", "KafkaServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonSageMakerFullAccess", "AWSLambdaENIManagementAccess", "AWSRoboMakerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "AmazonElasticFileSystemServiceRolePolicy", "AWSLambdaMSKExecutionRole", "WorkLinkServiceRolePolicy", "AmazonEKSServicePolicy", "APIGatewayServiceRolePolicy", "AmazonMQFullAccess", "AmazonWorkSpacesServiceAccess", "AmazonECSServiceRolePolicy", "AWSCloudHSMRole", "AmazonAppStreamServiceAccess", "AWSRoboMakerServicePolicy", "AmazonEKSServiceRolePolicy", "AWSLambdaVPCAccessExecutionRole", "AmazonMQApiFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "DAXServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonWorkLinkServiceRolePolicy", "AmazonRoute53ResolverFullAccess", "AmazonVPCFullAccess", "AWSDataPipelineRole", "ClientVPNServiceRolePolicy", "AmazonRDSServiceRolePolicy", "AmazonElasticFileSystemFullAccess", "AWSGlobalAcceleratorSLRPolicy", "AmazonFSxServiceRolePolicy", "AWSVPCTransitGatewayServiceRolePolicy", "AmazonElasticMapReduceEditorsRole", "AWSGlueServiceRole", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonDMSVPCManagementRole", "AmazonRedshiftServiceLinkedRolePolicy", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AmazonEKS_CNI_Policy", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AmazonElasticsearchServiceRolePolicy", "AmazonDRSVPCManagement", "AmazonVPCCrossAccountNetworkInterfaceOperations", "ElastiCacheServiceRolePolicy", "SystemAdministrator"], "ec2:describeaccountattributes": ["AWSElasticLoadBalancingServiceRolePolicy", "AWSBackupOperatorAccess", "AmazonRedshiftFullAccess", "AmazonRDSReadOnlyAccess", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "ViewOnlyAccess", "AutoScalingConsoleFullAccess", "AmazonDocDBFullAccess", "NeptuneReadOnlyAccess", "AmazonRedshiftReadOnlyAccess", "AmazonVPCReadOnlyAccess", "DatabaseAdministrator", "NetworkAdministrator", "AmazonElasticMapReduceFullAccess", "AWSOpsWorksFullAccess", "AmazonVPCFullAccess", "ClientVPNServiceRolePolicy", "AWSBatchServiceRole", "AWSMarketplaceFullAccess", "NeptuneFullAccess", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "AWSBackupFullAccess", "ElasticLoadBalancingFullAccess", "AutoScalingFullAccess", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonElasticMapReduceRole", "AmazonRDSFullAccess", "AWSOpsWorksRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "ds:authorizeapplication": ["AWSSSOMemberAccountAdministrator", "AmazonFSxServiceRolePolicy", "AWSSSOMasterAccountAdministrator", "AmazonWorkMailFullAccess", "AmazonConnectFullAccess", "AmazonRDSDirectoryServiceAccess", "ClientVPNServiceRolePolicy"], "ds:describedirectories": ["AmazonWorkDocsFullAccess", "SupportUser", "AWSSupportServiceRolePolicy", "AmazonAppStreamServiceAccess", "ViewOnlyAccess", "AWSSSOMasterAccountAdministrator", "AmazonFSxConsoleReadOnlyAccess", "AmazonSSMDirectoryServiceAccess", "AmazonWorkDocsReadOnlyAccess", "AmazonFSxFullAccess", "ClientVPNServiceRolePolicy", "AmazonSSMFullAccess", "AWSSSOMemberAccountAdministrator", "AWSSSOServiceRolePolicy", "AmazonZocaloReadOnlyAccess", "AmazonConnectFullAccess", "AmazonWorkMailFullAccess", "SecurityAudit", "AmazonRDSDirectoryServiceAccess", "AmazonConnectReadOnlyAccess", "AWSSSOReadOnly", "AmazonFSxConsoleFullAccess", "AmazonEC2RoleforSSM"], "ds:getdirectorylimits": ["AmazonWorkMailFullAccess", "SupportUser", "ClientVPNServiceRolePolicy", "AWSSupportServiceRolePolicy"], "ds:unauthorizeapplication": ["AWSSSOMemberAccountAdministrator", "AmazonFSxServiceRolePolicy", "AWSSSOMasterAccountAdministrator", "AWSSSOServiceRolePolicy", "AmazonWorkMailFullAccess", "AmazonConnectFullAccess", "AmazonRDSDirectoryServiceAccess", "ClientVPNServiceRolePolicy"], "logs:describelogstreams": ["AmazonRDSBetaServiceRolePolicy", "AWSDeepRacerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "DataScientist", "AWSThinkboxAWSPortalGatewayPolicy", "AWSElasticBeanstalkWebTier", "AmazonEKSServicePolicy", "AmazonECSServiceRolePolicy", "AmazonRDSReadOnlyAccess", "AWSServiceRoleForIoTSiteWise", "AWSOpsWorksCloudWatchLogs", "AmazonSageMakerGroundTruthExecution", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AmazonAPIGatewayPushToCloudWatchLogs", "AmazonRDSEnhancedMonitoringRole", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AmazonBraketServiceRolePolicy", "AmazonEKSServiceRolePolicy", "AmazonDocDBReadOnlyAccess", "AWSDeepLensLambdaFunctionAccessPolicy", "AWSThinkboxAssetServerPolicy", "DatabaseAdministrator", "NetworkAdministrator", "AmazonDMSCloudWatchLogsRole", "AmazonRDSPreviewServiceRolePolicy", "AWSThinkboxAWSPortalWorkerPolicy", "AWSLambdaReadOnlyAccess", "AWSTransferLoggingAccess", "ClientVPNServiceRolePolicy", "AmazonRDSServiceRolePolicy", "NeptuneFullAccess", "AWSElasticBeanstalkEnhancedHealth", "CloudWatchAgentServerPolicy", "AWSElasticBeanstalkCustomPlatformforEC2Role", "MediaPackageServiceRolePolicy", "AmazonManagedBlockchainServiceRolePolicy", "CloudHSMServiceRolePolicy", "CloudWatchAgentAdminPolicy", "AWSElasticBeanstalkServiceRolePolicy", "AWSChatbotServiceLinkedRolePolicy", "AmazonRDSFullAccess", "NeptuneConsoleFullAccess", "AmazonEC2RoleforSSM", "AWSThinkboxAWSPortalAdminPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "logs:createlogstream": ["AmazonRDSBetaServiceRolePolicy", "AWSLambdaBasicExecutionRole", "AWSDeepRacerServiceRolePolicy", "AWSLambdaMSKExecutionRole", "AmazonSageMakerFullAccess", "AWSDeepRacerRoboMakerAccessPolicy", "AWSThinkboxAWSPortalGatewayPolicy", "AWSElasticBeanstalkWebTier", "AmazonEKSServicePolicy", "AmazonWorkMailEventsServiceRolePolicy", "AmazonECSServiceRolePolicy", "AWSOpsWorksCloudWatchLogs", "AWSServiceRoleForIoTSiteWise", "AmazonSageMakerGroundTruthExecution", "AWSElasticBeanstalkWorkerTier", "AmazonSNSRole", "AmazonAPIGatewayPushToCloudWatchLogs", "AmazonRDSEnhancedMonitoringRole", "AmazonBraketServiceRolePolicy", "AmazonEKSServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AWSLambdaVPCAccessExecutionRole", "AmazonLaunchWizard_Fullaccess", "AWSDeepLensLambdaFunctionAccessPolicy", "AWSLambdaSQSQueueExecutionRole", "AmazonEC2ContainerServiceforEC2Role", "AWSLambdaKinesisExecutionRole", "AmazonDMSCloudWatchLogsRole", "AmazonRDSPreviewServiceRolePolicy", "AWSThinkboxAWSPortalWorkerPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSTransferLoggingAccess", "AWSBatchServiceRole", "ClientVPNServiceRolePolicy", "AWSIoTLogging", "AmazonRDSServiceRolePolicy", "AWSAppSyncPushToCloudWatchLogs", "AmazonECSTaskExecutionRolePolicy", "AWSElasticBeanstalkEnhancedHealth", "CloudWatchAgentServerPolicy", "AWSElasticBeanstalkCustomPlatformforEC2Role", "MediaPackageServiceRolePolicy", "AWSLambdaDynamoDBExecutionRole", "AWSGlueServiceRole", "AmazonManagedBlockchainServiceRolePolicy", "CloudHSMServiceRolePolicy", "AlexaForBusinessGatewayExecution", "CloudWatchAgentAdminPolicy", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSElasticBeanstalkServiceRolePolicy", "AWSChatbotServiceLinkedRolePolicy", "AWSCloudFrontLogger", "AmazonEC2RoleforSSM"], "logs:putlogevents": ["AmazonRDSBetaServiceRolePolicy", "AWSLambdaBasicExecutionRole", "AWSDeepRacerServiceRolePolicy", "AWSLambdaMSKExecutionRole", "AmazonSageMakerFullAccess", "AWSDeepRacerRoboMakerAccessPolicy", "AWSThinkboxAWSPortalGatewayPolicy", "AWSElasticBeanstalkWebTier", "AmazonEKSServicePolicy", "AmazonWorkMailEventsServiceRolePolicy", "AmazonECSServiceRolePolicy", "AWSOpsWorksCloudWatchLogs", "AWSServiceRoleForIoTSiteWise", "AmazonSageMakerGroundTruthExecution", "AWSElasticBeanstalkWorkerTier", "AmazonSNSRole", "AmazonAPIGatewayPushToCloudWatchLogs", "AmazonRDSEnhancedMonitoringRole", "AmazonBraketServiceRolePolicy", "AmazonEKSServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AWSLambdaVPCAccessExecutionRole", "AmazonLaunchWizard_Fullaccess", "AWSDeepLensLambdaFunctionAccessPolicy", "AWSLambdaSQSQueueExecutionRole", "DatabaseAdministrator", "AWSLambdaKinesisExecutionRole", "AmazonEC2ContainerServiceforEC2Role", "AmazonDMSCloudWatchLogsRole", "AmazonRDSPreviewServiceRolePolicy", "AWSThinkboxAWSPortalWorkerPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSTransferLoggingAccess", "AWSBatchServiceRole", "ClientVPNServiceRolePolicy", "AWSIoTLogging", "AmazonRDSServiceRolePolicy", "AWSAppSyncPushToCloudWatchLogs", "AmazonECSTaskExecutionRolePolicy", "AWSElasticBeanstalkEnhancedHealth", "CloudWatchAgentServerPolicy", "AWSElasticBeanstalkCustomPlatformforEC2Role", "MediaPackageServiceRolePolicy", "AWSLambdaDynamoDBExecutionRole", "AWSGlueServiceRole", "AmazonManagedBlockchainServiceRolePolicy", "CloudHSMServiceRolePolicy", "AlexaForBusinessGatewayExecution", "CloudWatchAgentAdminPolicy", "AWSDiscoveryContinuousExportFirehosePolicy", "AWSElasticBeanstalkServiceRolePolicy", "AWSChatbotServiceLinkedRolePolicy", "AWSCloudFrontLogger", "AmazonEC2RoleforSSM"], "logs:describeloggroups": ["AWSDataSyncFullAccess", "AWSThinkboxAWSPortalGatewayPolicy", "AWSElasticBeanstalkWebTier", "AWS_Config_Role", "AmazonECSServiceRolePolicy", "AmazonECS_FullAccess", "AWSServiceRoleForIoTSiteWise", "AWSSupportServiceRolePolicy", "AmazonChimeFullAccess", "AmazonAPIGatewayPushToCloudWatchLogs", "AmazonBraketServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AWSThinkboxAssetServerPolicy", "DatabaseAdministrator", "NetworkAdministrator", "AmazonDMSCloudWatchLogsRole", "AWSThinkboxAWSPortalWorkerPolicy", "AWSLambdaReadOnlyAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole", "ClientVPNServiceRolePolicy", "AWSElasticBeanstalkService", "CloudWatchAgentServerPolicy", "MediaPackageServiceRolePolicy", "AmazonMSKFullAccess", "AmazonWorkMailFullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSDataSyncReadOnlyAccess", "AlexaForBusinessGatewayExecution", "CloudWatchAgentAdminPolicy", "Route53ResolverServiceRolePolicy", "AWSElasticBeanstalkServiceRolePolicy", "AmazonWorkMailReadOnlyAccess", "AWSChatbotServiceLinkedRolePolicy", "AWSConfigRole", "AmazonEC2RoleforSSM", "AWSThinkboxAWSPortalAdminPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "acm:getcertificate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSCertificateManagerReadOnly", "SupportUser", "AWSOpsWorksCMInstanceProfileRole", "AWSSupportServiceRolePolicy", "ClientVPNServiceRolePolicy"], "acm:describecertificate": ["AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSAppMeshFullAccess", "APIGatewayServiceRolePolicy", "AWSVPCS2SVpnServiceRolePolicy", "AWS_Config_Role", "AWSCertificateManagerReadOnly", "SupportUser", "AWSSupportServiceRolePolicy", "AWSForWordPressPluginPolicy", "AWSAppMeshServiceRolePolicy", "AWSConfigRole", "AWSAppMeshReadOnly", "AWSAppMeshPreviewServiceRolePolicy", "ClientVPNServiceRolePolicy", "AWSElasticBeanstalkFullAccess"], "iam:getsamlprovider": ["AWSSSOServiceRolePolicy", "AWSSupportServiceRolePolicy", "SystemAdministrator", "ClientVPNServiceRolePolicy", "AmazonCognitoPowerUser"], "lambda:getfunctionconfiguration": ["AmazonDynamoDBReadOnlyAccess", "CloudWatchSyntheticsFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "DatabaseAdministrator", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSDeepLensServiceRolePolicy", "AWSGreengrassResourceAccessRolePolicy", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonDynamoDBFullAccess", "ClientVPNServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "organizations:enableawsserviceaccess": ["AWSSSOMemberAccountAdministrator", "AWSControlTowerServiceRolePolicy", "AWSHealthFullAccess", "AWSDirectoryServiceFullAccess", "AWSSSOMasterAccountAdministrator", "ServiceQuotasFullAccess", "AWSBackupOrganizationAdminAccess"], "organizations:disableawsserviceaccess": ["AWSHealthFullAccess", "AWSDirectoryServiceFullAccess", "AWSBackupOrganizationAdminAccess"], "health:*": ["AWSHealthFullAccess"], "organizations:listaccounts": ["AmazonMacieServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonGuardDutyServiceRolePolicy", "Health_OrganizationsServiceRolePolicy", "AWSSecurityHubServiceRolePolicy", "AWSSystemsManagerAccountDiscoveryServicePolicy", "AWSControlTowerServiceRolePolicy", "AWSSSOMasterAccountAdministrator", "AWSArtifactAccountSync", "CloudTrailServiceRolePolicy", "IAMAccessAnalyzerFullAccess", "AWSSSOMemberAccountAdministrator", "AWSConfigRoleForOrganizations", "AWSSSOServiceRolePolicy", "ComputeOptimizerServiceRolePolicy", "AmazonDetectiveFullAccess", "AWSHealthFullAccess", "AWSDirectoryServiceFullAccess", "AWSSSOReadOnly", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "ComputeOptimizerReadOnlyAccess", "FMSServiceRolePolicy", "AWSBackupOrganizationAdminAccess"], "iam:createservicelinkedrole": ["AWSDeepRacerServiceRolePolicy", "AWSCloud9Administrator", "AmazonSageMakerFullAccess", "AWSCodeStarServiceRole", "CloudWatchFullAccess", "AmazonECS_FullAccess", "AmazonEC2FullAccess", "AmazonMacieFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSApplicationDiscoveryServiceFullAccess", "AWSIoTSiteWiseConsoleFullAccess", "AWSIQFullAccess", "AWSCloud9User", "AutoScalingServiceRolePolicy", "AmazonEKSClusterPolicy", "AWSElasticBeanstalkRoleCore", "AmazonLexFullAccess", "AmazonBraketFullAccess", "AWSEC2FleetServiceRolePolicy", "AmazonEKSServicePolicy", "AmazonRedshiftFullAccess", "AWSImageBuilderFullAccess", "AmazonDocDBFullAccess", "AmazonInspectorFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonKeyspacesFullAccess", "ConfigConformsServiceRolePolicy", "AWSDataPipelineRole", "AWSBatchServiceRole", "AmazonWorkMailFullAccess", "ElasticLoadBalancingFullAccess", "GlobalAcceleratorFullAccess", "AutoScalingFullAccess", "AmazonMacieHandshakeRole", "AmazonElasticMapReduceRole", "AWSSecurityHubFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "AWSAppSyncAdministrator", "AWSOrganizationsServiceTrustPolicy", "AWSNetworkManagerFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonCodeGuruReviewerFullAccess", "AmazonDocDBConsoleFullAccess", "AWSElasticBeanstalkFullAccess", "AutoScalingConsoleFullAccess", "AmazonCognitoPowerUser", "AlexaForBusinessFullAccess", "AmazonMSKFullAccess", "AmazonConnectFullAccess", "AWSHealthFullAccess", "AmazonElastiCacheFullAccess", "DynamoDBReplicationServiceRolePolicy", "AWSAppMeshFullAccess", "AWSCodeCommitPowerUser", "AWSRoboMakerFullAccess", "AmazonAppStreamFullAccess", "NeptuneConsoleFullAccess", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy", "AmazonEC2SpotFleetAutoscaleRole", "AWSCodeCommitFullAccess", "NetworkAdministrator", "AmazonChimeServiceRolePolicy", "ServiceQuotasFullAccess", "AmazonDynamoDBFullAccess", "IAMAccessAnalyzerFullAccess", "AmazonFSxFullAccess", "AmazonSSMFullAccess", "NeptuneFullAccess", "AmazonElasticFileSystemFullAccess", "ServerMigrationServiceConsoleFullAccess", "AWSMigrationHubFullAccess", "AmazonEventBridgeSchemasFullAccess", "AmazonCodeGuruProfilerFullAccess", "AmazonMCSFullAccess", "AmazonFSxConsoleFullAccess", "AmazonGuardDutyFullAccess", "AmazonRDSFullAccess", "AWSCertificateManagerFullAccess", "AmazonElasticFileSystemServiceRolePolicy"], "aws-marketplace:*": ["AWSMarketplaceFullAccess"], "cloudformation:createstack": ["AWSDeepRacerServiceRolePolicy", "AmazonSSMAutomationRole", "AWSServiceCatalogAdminFullAccess", "DataScientist", "AmazonMQFullAccess", "AWSLicenseManagerMasterAccountRolePolicy", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonECS_FullAccess", "AWSOpsWorksCMServiceRole", "AWSServiceRoleForSMS", "AWSControlTowerServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSForWordPressPluginPolicy", "AmazonElasticMapReduceFullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "ConfigConformsServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AmazonEC2ContainerServiceFullAccess", "ServerMigration_ServiceRole", "AWSAppMeshFullAccess", "AWSCloud9ServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSThinkboxAWSPortalAdminPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cloudformation:describestackresource": ["AWSDeepRacerServiceRolePolicy", "ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "SecretsManagerReadWrite", "AWSElasticBeanstalkServiceRolePolicy", "AWSOpsWorksCMInstanceProfileRole", "AWSSupportServiceRolePolicy", "ConfigConformsServiceRolePolicy", "AWSMarketplaceFullAccess"], "cloudformation:describestackresources": ["AWSDeepRacerServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy", "AWSThinkboxAWSPortalAdminPolicy", "ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "ServerMigrationServiceConsoleFullAccess", "AWSCloud9ServiceRolePolicy", "AWSElasticBeanstalkServiceRolePolicy", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AWSForWordPressPluginPolicy", "AWSLambdaReadOnlyAccess", "ConfigConformsServiceRolePolicy", "AWSMarketplaceFullAccess", "AWSLambdaFullAccess"], "cloudformation:describestacks": ["AWSDeepRacerServiceRolePolicy", "AmazonSSMAutomationRole", "AWSServiceCatalogAdminFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSElasticBeanstalkMaintenance", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AWSLambdaFullAccess", "ResourceGroupsandTagEditorReadOnlyAccess", "AWSServiceRoleForSMS", "AWSControlTowerServiceRolePolicy", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSLambdaReadOnlyAccess", "ConfigConformsServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "ServerMigrationServiceConsoleFullAccess", "SecretsManagerReadWrite", "AWSServiceCatalogAdminReadOnlyAccess", "ServerMigration_ServiceRole", "ResourceGroupsandTagEditorFullAccess", "AWSResourceGroupsReadOnlyAccess", "AWSCloud9ServiceRolePolicy", "AWSCodePipelineFullAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSElasticBeanstalkServiceRolePolicy", "AmazonSSMServiceRolePolicy", "AWSThinkboxAWSPortalAdminPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cloudformation:list*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "SupportUser", "ViewOnlyAccess", "AWSMarketplaceFullAccess", "AWSCloudFormationReadOnlyAccess"], "ec2:authorizesecuritygroupegress": ["AWSDeepRacerCloudFormationAccessPolicy", "AWSElasticBeanstalkService", "AWSDirectoryServiceFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonElasticMapReduceRole", "AmazonElasticMapReduceFullAccess", "NetworkAdministrator", "AmazonWorkMailFullAccess", "FMSServiceRolePolicy", "AmazonZocaloFullAccess", "AWSMarketplaceFullAccess", "AmazonElasticMapReduceEditorsRole", "AmazonVPCFullAccess", "SystemAdministrator", "AWSDataPipelineRole"], "ec2:authorizesecuritygroupingress": ["AmazonRDSBetaServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonEC2ContainerServiceRole", "AmazonMQFullAccess", "AmazonECS_FullAccess", "AWSOpsWorksCMServiceRole", "AutoScalingConsoleFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonEKSServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy", "DAXServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess", "AWSDataPipelineRole", "AWSMarketplaceFullAccess", "AmazonRDSServiceRolePolicy", "AWSElasticBeanstalkService", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonWorkMailFullAccess", "AmazonElasticMapReduceEditorsRole", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AWSThinkboxAWSPortalAdminPolicy", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AWSCloud9ServiceRolePolicy", "AmazonEKSClusterPolicy", "AmazonElasticMapReduceRole", "FMSServiceRolePolicy", "AmazonDRSVPCManagement", "ElastiCacheServiceRolePolicy", "SystemAdministrator"], "ec2:createsecuritygroup": ["AmazonRDSBetaServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonMQFullAccess", "AmazonECS_FullAccess", "AWSOpsWorksCMServiceRole", "AmazonDocDBConsoleFullAccess", "AutoScalingConsoleFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonEKSServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy", "DAXServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess", "AWSDataPipelineRole", "AWSMarketplaceFullAccess", "AmazonRDSServiceRolePolicy", "AWSElasticBeanstalkService", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSGlobalAcceleratorSLRPolicy", "AmazonWorkMailFullAccess", "AmazonElasticMapReduceEditorsRole", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AWSThinkboxAWSPortalAdminPolicy", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AWSCloud9ServiceRolePolicy", "AmazonEKSClusterPolicy", "AmazonElasticMapReduceRole", "FMSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AmazonDRSVPCManagement", "NeptuneConsoleFullAccess", "ElastiCacheServiceRolePolicy", "SystemAdministrator"], "ec2:createtags": ["AWSEC2FleetServiceRolePolicy", "AmazonSSMAutomationRole", "DataScientist", "AWSEC2SpotServiceRolePolicy", "AWSEC2SpotFleetServiceRolePolicy", "AmazonEKSServicePolicy", "APIGatewayServiceRolePolicy", "EC2FleetTimeShiftableServiceRolePolicy", "AmazonECSServiceRolePolicy", "AWSServiceRoleForImageBuilder", "AWSCloudHSMRole", "AWSOpsWorksCMServiceRole", "ServerMigrationServiceLaunchRole", "AWSDeepRacerCloudFormationAccessPolicy", "AWSServiceRoleForSMS", "AmazonEKSServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSMigrationHubDiscoveryAccess", "NetworkAdministrator", "AmazonZocaloFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonEC2SpotFleetTaggingRole", "MigrationHubServiceRolePolicy", "AmazonVPCFullAccess", "AWSDataPipelineRole", "AWSBatchServiceRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AWSServiceRoleForEC2ScheduledInstances", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSDataLifecycleManagerServiceRole", "AmazonWorkMailFullAccess", "AmazonElasticMapReduceEditorsRole", "AWSGlueServiceRole", "AWSGlueServiceNotebookRole", "AWSConnector", "ServerMigration_ServiceRole", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AmazonEKS_CNI_Policy", "AWSBackupServiceRolePolicyForBackup", "AWSCloud9ServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "AutoScalingServiceRolePolicy", "AmazonEKSClusterPolicy", "AmazonElasticMapReduceRole", "AmazonLambdaRolePolicyForLaunchWizardSAP", "FMSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSGlobalAcceleratorSLRPolicy", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy"], "ec2:describeaddresses": ["AWSElasticLoadBalancingServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AmazonRedshiftFullAccess", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "ViewOnlyAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonRedshiftReadOnlyAccess", "AmazonVPCReadOnlyAccess", "DatabaseAdministrator", "NetworkAdministrator", "AmazonVPCFullAccess", "AWSMarketplaceFullAccess", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "AWSElasticBeanstalkEnhancedHealth", "ElasticLoadBalancingFullAccess", "GlobalAcceleratorFullAccess", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonRedshiftServiceLinkedRolePolicy", "AccessAnalyzerServiceRolePolicy", "AWSElasticBeanstalkServiceRolePolicy", "FMSServiceRolePolicy", "NeptuneConsoleFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:deletesecuritygroup": ["AmazonRDSBetaServiceRolePolicy", "AmazonECS_FullAccess", "AWSOpsWorksCMServiceRole", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonEKSServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy", "DAXServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess", "AWSDataPipelineRole", "AWSMarketplaceFullAccess", "AmazonRDSServiceRolePolicy", "AWSElasticBeanstalkService", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonWorkMailFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AWSCloud9ServiceRolePolicy", "AmazonEKSClusterPolicy", "AmazonElasticMapReduceRole", "FMSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AmazonDRSVPCManagement", "AWSGlobalAcceleratorSLRPolicy", "ElastiCacheServiceRolePolicy", "SystemAdministrator"], "ec2:describeimages": ["AWSEC2FleetServiceRolePolicy", "AmazonSSMAutomationRole", "AWSBackupOperatorAccess", "AWSLicenseManagerServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AWSEC2SpotFleetServiceRolePolicy", "EC2FleetTimeShiftableServiceRolePolicy", "AWSMarketplaceSellerProductsFullAccess", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AmazonGuardDutyServiceRolePolicy", "LightsailExportAccess", "AWSMarketplaceAmiIngestion", "AWSMarketplaceSellerFullAccess", "AWSImageBuilderFullAccess", "AWSMarketplaceSellerProductsReadOnly", "AutoScalingConsoleFullAccess", "AWSServiceRoleForSMS", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonEC2SpotFleetTaggingRole", "AWSBatchServiceRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSBackupFullAccess", "AWSBatchFullAccess", "AutoScalingFullAccess", "AWSConnector", "ServerMigration_ServiceRole", "AWSBackupServiceRolePolicyForBackup", "AWSMarketplaceImageBuildFullAccess", "AmazonElasticMapReduceRole", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:describeinstances": ["AWSElasticLoadBalancingServiceRolePolicy", "CloudWatchEventsServiceRolePolicy", "AWSBackupOperatorAccess", "AWSLicenseManagerServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AWSEC2SpotServiceRolePolicy", "AWSCodeDeployRole", "AmazonEKSServicePolicy", "EC2FleetTimeShiftableServiceRolePolicy", "AmazonEKSWorkerNodePolicy", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AmazonGuardDutyServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AutoScalingConsoleFullAccess", "AmazonInspectorServiceRolePolicy", "AWSServiceRoleForSMS", "AmazonEKSServiceRolePolicy", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonInspectorFullAccess", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "EC2InstanceConnect", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess", "AWSBatchServiceRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "GameLiftGameServerGroupPolicy", "CloudWatchAutomaticDashboardsAccess", "AWSElasticBeanstalkService", "AWSCloudMapFullAccess", "AWSElasticBeanstalkEnhancedHealth", "AWSDataLifecycleManagerServiceRole", "AWSMarketplaceRead-only", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSGlobalAcceleratorSLRPolicy", "AWSBackupFullAccess", "ElasticLoadBalancingFullAccess", "GlobalAcceleratorFullAccess", "AmazonElasticMapReduceEditorsRole", "AutoScalingFullAccess", "AWSOpsWorksRegisterCLI_OnPremises", "AWSConnector", "AWSElasticLoadBalancingClassicServiceRolePolicy", "AWSCloudMapRegisterInstanceAccess", "ServerMigration_ServiceRole", "AmazonEKS_CNI_Policy", "AWSBackupServiceRolePolicyForBackup", "AWSResourceGroupsReadOnlyAccess", "AmazonEMRCleanupPolicy", "AmazonEKSClusterPolicy", "AmazonElasticMapReduceRole", "AWSCloud9ServiceRolePolicy", "ElasticLoadBalancingReadOnly", "AWSEnhancedClassicNetworkingMangementPolicy", "AWSElasticBeanstalkServiceRolePolicy", "AmazonSSMServiceRolePolicy", "AmazonInspectorReadOnlyAccess", "ComputeOptimizerReadOnlyAccess", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSOpsWorksRole", "NeptuneConsoleFullAccess", "AWSOpsWorksRegisterCLI_EC2", "AWSThinkboxAWSPortalAdminPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ec2:describekeypairs": ["AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AWSCodeStarFullAccess", "AWSImageBuilderFullAccess", "AutoScalingConsoleFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess", "AWSOpsWorksFullAccess", "AWSBatchServiceRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "ServerMigrationServiceConsoleFullAccess", "AutoScalingFullAccess", "AWSBatchFullAccess", "AmazonElasticMapReduceRole", "AWSOpsWorksRole", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:describetags": ["AmazonSSMAutomationRole", "AWSServiceRoleForImageBuilder", "SupportUser", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonInspectorServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonVPCReadOnlyAccess", "AmazonEC2ContainerServiceforEC2Role", "NetworkAdministrator", "AmazonInspectorFullAccess", "AWSThinkboxAWSPortalWorkerPolicy", "AmazonVPCFullAccess", "AWSMarketplaceFullAccess", "AWSElasticBeanstalkCustomPlatformforEC2Role", "CloudWatchAgentServerPolicy", "AmazonElasticMapReduceEditorsRole", "AWSConnector", "AmazonEKS_CNI_Policy", "AWSBackupServiceRolePolicyForBackup", "CloudWatchAgentAdminPolicy", "AmazonInspectorReadOnlyAccess", "AmazonElasticMapReduceRole", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:runinstances": ["AWSEC2FleetServiceRolePolicy", "AmazonSSMAutomationRole", "DataScientist", "AWSEC2SpotServiceRolePolicy", "AWSEC2SpotFleetServiceRolePolicy", "AWSCodeStarServiceRole", "EC2FleetTimeShiftableServiceRolePolicy", "AWSServiceRoleForImageBuilder", "AmazonECS_FullAccess", "AWSOpsWorksCMServiceRole", "ServerMigrationServiceLaunchRole", "AWSServiceRoleForSMS", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonEC2SpotFleetTaggingRole", "AWSCompromisedKeyQuarantine", "AWSDataPipelineRole", "AWSBatchServiceRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AWSElasticBeanstalkService", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSConnector", "AWSCloud9ServiceRolePolicy", "AutoScalingServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "AmazonElasticMapReduceRole", "AWSBackupServiceRolePolicyForRestores", "AWSElasticBeanstalkRoleCore", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy"], "ec2:startinstances": ["AmazonSSMAutomationRole", "AWSServiceRoleForSMS", "AWSEC2SpotServiceRolePolicy", "AWSCloud9ServiceRolePolicy", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSConnector", "AmazonLaunchWizard_Fullaccess", "ServerMigrationServiceLaunchRole", "AWSCompromisedKeyQuarantine", "SystemAdministrator", "AWSDataPipelineRole", "AWSMarketplaceFullAccess"], "ec2:stopinstances": ["AmazonSSMAutomationRole", "AWSServiceRoleForSMS", "CloudWatchEventsServiceRolePolicy", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSEC2SpotServiceRolePolicy", "AWSCloud9ServiceRolePolicy", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSConnector", "AmazonLaunchWizard_Fullaccess", "AWSServiceRoleForImageBuilder", "CloudWatchActionsEC2Access", "CloudWatchEventsBuiltInTargetExecutionAccess", "AWSOpsWorksCMServiceRole", "ServerMigrationServiceLaunchRole", "SystemAdministrator", "AWSDataPipelineRole", "AWSMarketplaceFullAccess"], "ec2:terminateinstances": ["AWSEC2FleetServiceRolePolicy", "AmazonSSMAutomationRole", "CloudWatchEventsServiceRolePolicy", "DataScientist", "AWSCodeDeployRole", "AWSEC2SpotFleetServiceRolePolicy", "EC2FleetTimeShiftableServiceRolePolicy", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "ServerMigrationServiceLaunchRole", "AWSServiceRoleForSMS", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSGlueConsoleSageMakerNotebookFullAccess", "CloudWatchActionsEC2Access", "AWSThinkboxAWSPortalWorkerPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AmazonElasticMapReduceFullAccess", "AmazonEC2SpotFleetTaggingRole", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSDataPipelineRole", "AWSBatchServiceRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AWSServiceRoleForEC2ScheduledInstances", "GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkService", "AWSElasticBeanstalkCustomPlatformforEC2Role", "CloudWatchEventsBuiltInTargetExecutionAccess", "AWSConnector", "AWSCloud9ServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "AutoScalingServiceRolePolicy", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AWSBackupServiceRolePolicyForRestores", "AWSElasticBeanstalkRoleCore", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy"], "ec2:copyimage": ["ServerMigration_ServiceRole", "AmazonSSMAutomationRole", "AWSServiceRoleForSMS", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSBackupServiceRolePolicyForBackup", "AWSMarketplaceImageBuildFullAccess", "AWSServiceRoleForImageBuilder", "LightsailExportAccess", "AWSMarketplaceFullAccess"], "ec2:deregisterimage": ["ServerMigration_ServiceRole", "AmazonSSMAutomationRole", "AWSServiceRoleForSMS", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSBackupServiceRolePolicyForBackup", "AWSMarketplaceImageBuildFullAccess", "AWSBackupFullAccess", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "AWSMarketplaceFullAccess", "SystemAdministrator", "AWSConnector"], "ec2:describesnapshots": ["CloudWatchEventsServiceRolePolicy", "AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSMarketplaceSellerProductsFullAccess", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AWSMarketplaceSellerFullAccess", "LightsailExportAccess", "AWSMarketplaceSellerProductsReadOnly", "AWSServiceRoleForSMS", "AWSStorageGatewayFullAccess", "AWSMarketplaceFullAccess", "AWSElasticBeanstalkService", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSDataLifecycleManagerServiceRole", "AWSBackupFullAccess", "AWSConnector", "AWSStorageGatewayReadOnlyAccess", "ServerMigration_ServiceRole", "AWSBackupServiceRolePolicyForBackup", "AWSResourceGroupsReadOnlyAccess", "AWSMarketplaceImageBuildFullAccess", "AWSBackupServiceRolePolicyForRestores"], "ec2:deletesnapshot": ["ServerMigration_ServiceRole", "AmazonSSMAutomationRole", "AWSServiceRoleForSMS", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSDataLifecycleManagerServiceRole", "AWSBackupServiceRolePolicyForBackup", "AWSMarketplaceImageBuildFullAccess", "AWSConnector", "AmazonLaunchWizard_Fullaccess", "AWSBackupFullAccess", "AWSOpsWorksCMServiceRole", "AWSStorageGatewayFullAccess", "SystemAdministrator", "AWSMarketplaceFullAccess"], "ec2:createimage": ["AmazonSSMAutomationRole", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSBackupServiceRolePolicyForBackup", "AWSMarketplaceImageBuildFullAccess", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "AWSMarketplaceFullAccess", "SystemAdministrator", "AWSConnector"], "ec2:describeinstancestatus": ["AWSEC2FleetServiceRolePolicy", "AmazonSSMAutomationRole", "CloudWatchEventsServiceRolePolicy", "AWSCodeDeployRole", "AWSEC2SpotFleetServiceRolePolicy", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AmazonEC2SpotFleetTaggingRole", "AmazonSSMFullAccess", "AWSMarketplaceFullAccess", "AWSElasticBeanstalkEnhancedHealth", "AWSConnector", "AWSCloud9ServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "AmazonElasticMapReduceRole", "AWSElasticBeanstalkServiceRolePolicy", "AmazonSSMServiceRolePolicy", "AmazonEC2RoleforSSM"], "ssm:getautomationexecution": ["AmazonSSMAutomationApproverAccess", "AWS_ConfigRole", "AWSServiceCatalogAdminFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSMarketplaceImageBuildFullAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWS_Config_Role", "AWSServiceRoleForImageBuilder", "AmazonSSMServiceRolePolicy", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AmazonSSMMaintenanceWindowRole", "AWSServiceCatalogEndUserFullAccess", "AWSMarketplaceFullAccess", "AWSConfigServiceRolePolicy"], "ssm:updatedocumentdefaultversion": ["AWSMarketplaceImageBuildFullAccess", "AWSMarketplaceFullAccess"], "ssm:createdocument": ["AmazonLaunchWizard_Fullaccess", "AWSMarketplaceImageBuildFullAccess", "AWSMarketplaceFullAccess"], "ssm:startautomationexecution": ["AWSConfigRemediationServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSMarketplaceImageBuildFullAccess", "AWSServiceRoleForImageBuilder", "AmazonSSMServiceRolePolicy", "AmazonSSMMaintenanceWindowRole", "AWSMarketplaceFullAccess"], "ssm:listdocuments": ["AWSServiceCatalogAdminFullAccess", "AWSResourceGroupsReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSMarketplaceImageBuildFullAccess", "AWSSupportServiceRolePolicy", "SecurityAudit", "ViewOnlyAccess", "AWSMarketplaceFullAccess"], "ssm:updatedocument": ["AWSMarketplaceImageBuildFullAccess", "AWSMarketplaceFullAccess"], "ssm:describedocument": ["AmazonSSMManagedInstanceCore", "AWS_ConfigRole", "AWSServiceCatalogAdminFullAccess", "AWSConfigRemediationServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSMarketplaceImageBuildFullAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AmazonEC2RoleforSSM", "ConfigConformsServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess", "AWSMarketplaceFullAccess", "AWSConfigServiceRolePolicy"], "sns:listtopics": ["AWSCodeCommitReadOnly", "AWSDataPipeline_PowerUser", "AmazonSageMakerFullAccess", "CloudWatchSyntheticsFullAccess", "DataScientist", "AWSLicenseManagerServiceRolePolicy", "AWSCloudTrailFullAccess", "AWS_Config_Role", "AmazonECS_FullAccess", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AWSMobileHub_ReadOnly", "AWSImageBuilderFullAccess", "AutoScalingConsoleFullAccess", "AmazonDocDBFullAccess", "AWSCodeBuildAdminAccess", "AmazonAthenaFullAccess", "AWSCodeCommitFullAccess", "AmazonElasticTranscoder_JobsSubmitter", "AmazonRoute53FullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "NetworkAdministrator", "AmazonInspectorFullAccess", "AWSCodeDeployDeployerAccess", "AmazonDynamoDBFullAccess", "AWSLambdaReadOnlyAccess", "AWSDataPipelineRole", "AWSMarketplaceFullAccess", "NeptuneFullAccess", "AmazonDynamoDBReadOnlyAccess", "CloudWatchAutomaticDashboardsAccess", "AWSMarketplaceRead-only", "AmazonElasticTranscoder_ReadOnlyAccess", "SecurityAudit", "AmazonElasticTranscoder_FullAccess", "AWSMobileHub_FullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSCodeDeployFullAccess", "AWSDirectoryServiceFullAccess", "AccessAnalyzerServiceRolePolicy", "AmazonCodeGuruProfilerFullAccess", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AmazonInspectorReadOnlyAccess", "AWSDirectoryServiceReadOnlyAccess", "AWSDataPipeline_FullAccess", "AWSChatbotServiceLinkedRolePolicy", "AmazonRDSFullAccess", "AWSConfigRole", "NeptuneConsoleFullAccess", "AutoScalingConsoleReadOnlyAccess", "AWSLambdaFullAccess"], "sns:gettopicattributes": ["AWSCodeCommitReadOnly", "AWSCloudTrailFullAccess", "AWS_Config_Role", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy", "AmazonChimeFullAccess", "AWSCodeBuildAdminAccess", "AmazonAthenaFullAccess", "AWSCodeCommitFullAccess", "AWSElasticBeanstalkRoleSNS", "AWSDataPipelineRole", "AWSMarketplaceFullAccess", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "AmazonSNSReadOnlyAccess", "SecurityAudit", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSDirectoryServiceFullAccess", "AccessAnalyzerServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "AWSCodeCommitPowerUser", "AWSDirectoryServiceReadOnlyAccess", "AWSConfigRole"], "sns:createtopic": ["CloudWatchSyntheticsFullAccess", "AmazonSageMakerFullAccess", "DataScientist", "AWSCloudTrailFullAccess", "AmazonRedshiftFullAccess", "AmazonChimeFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AmazonDynamoDBFullAccesswithDataPipeline", "DatabaseAdministrator", "NetworkAdministrator", "AWSElasticBeanstalkRoleSNS", "AmazonDynamoDBFullAccess", "AWSMarketplaceFullAccess", "AWSCodeStarNotificationsServiceRolePolicy", "AWSElasticBeanstalkService", "AWSCodeDeployFullAccess", "AWSDirectoryServiceFullAccess", "AWSCodePipelineFullAccess"], "iam:getrole": ["AWSDataSyncFullAccess", "CloudWatchSyntheticsFullAccess", "AWSServiceCatalogAdminFullAccess", "AWSBackupOperatorAccess", "DataScientist", "AWSCodeStarServiceRole", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWS_Config_Role", "CloudWatchFullAccess", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AWSImageBuilderFullAccess", "AWSElasticBeanstalkFullAccess", "AmazonCognitoPowerUser", "AWSServiceRoleForSMS", "AWSControlTowerServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "DatabaseAdministrator", "NetworkAdministrator", "FSxDeleteServiceLinkedRoleAccess", "AWSImageBuilderReadOnlyAccess", "AmazonDynamoDBFullAccess", "TranslateFullAccess", "AWSLambdaReadOnlyAccess", "ConfigConformsServiceRolePolicy", "AWSDataPipelineRole", "AWSBatchServiceRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AmazonDynamoDBReadOnlyAccess", "AWSMigrationHubFullAccess", "AWSIoTDeviceDefenderAudit", "AWSServiceCatalogAdminReadOnlyAccess", "AWSBackupFullAccess", "CloudFormationStackSetsOrgMemberServiceRolePolicy", "AWSSSOServiceRolePolicy", "AWSApplicationDiscoveryServiceFullAccess", "IAMAccessAdvisorReadOnly", "AWSGlueServiceRole", "ComprehendFullAccess", "AWSConfigServiceRolePolicy", "AWSLakeFormationDataAdmin", "AWSCertificateManagerFullAccess", "ServerMigration_ServiceRole", "AWS_ConfigRole", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSDataSyncReadOnlyAccess", "AccessAnalyzerServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "AWSCodePipelineFullAccess", "AmazonElasticMapReduceRole", "AWSConfigRole", "AmazonLexFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "AmazonBraketFullAccess", "AWSLambdaFullAccess"], "iam:getinstanceprofile": ["AWSDataPipeline_PowerUser", "ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "DataScientist", "ServerMigrationServiceConsoleFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSMarketplaceImageBuildFullAccess", "AWSBatchServiceRole", "AWSDataPipeline_FullAccess", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy", "AWSSupportServiceRolePolicy", "AWSMarketplaceFullAccess", "AWSImageBuilderFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "AWSDataPipelineRole"], "iam:listroles": ["AWSDataSyncFullAccess", "AWSDataPipeline_PowerUser", "AWSStepFunctionsConsoleFullAccess", "AmazonSageMakerFullAccess", "AWSServiceCatalogAdminFullAccess", "AWSBackupOperatorAccess", "DataScientist", "CloudWatchSyntheticsFullAccess", "AmazonCognitoReadOnly", "AWSCodeStarServiceRole", "AWSCloudTrailFullAccess", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AWSImageBuilderFullAccess", "AWSElasticBeanstalkFullAccess", "AutoScalingConsoleFullAccess", "AmazonCognitoPowerUser", "AWSControlTowerServiceRolePolicy", "AmazonElasticTranscoder_JobsSubmitter", "AmazonDynamoDBFullAccesswithDataPipeline", "AmazonKinesisAnalyticsReadOnly", "DatabaseAdministrator", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonAppFlowFullAccess", "AmazonCodeGuruProfilerReadOnlyAccess", "AmazonDynamoDBFullAccess", "TranslateFullAccess", "AmazonElasticMapReduceFullAccess", "AWSOpsWorksFullAccess", "AWSLambdaReadOnlyAccess", "AmazonFraudDetectorFullAccessPolicy", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AmazonDynamoDBReadOnlyAccess", "AWSKeyManagementServicePowerUser", "AWSElasticBeanstalkService", "AWSMarketplaceRead-only", "ServerMigrationServiceConsoleFullAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AmazonElasticTranscoder_ReadOnlyAccess", "AWSBackupFullAccess", "AWSSSOServiceRolePolicy", "AmazonWorkMailFullAccess", "CloudFrontFullAccess", "IAMAccessAdvisorReadOnly", "AmazonElasticTranscoder_FullAccess", "AmazonEC2ContainerServiceFullAccess", "AWSBatchFullAccess", "AmazonKinesisAnalyticsFullAccess", "ComprehendFullAccess", "AWSLakeFormationDataAdmin", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSDirectoryServiceFullAccess", "AWSDataSyncReadOnlyAccess", "AmazonCodeGuruProfilerFullAccess", "AccessAnalyzerServiceRolePolicy", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSDataPipeline_FullAccess", "AmazonKendraFullAccess", "AmazonWorkMailReadOnlyAccess", "AmazonAppStreamFullAccess", "AWSOpsWorksRole", "NeptuneConsoleFullAccess", "SystemAdministrator", "AmazonBraketFullAccess", "AWSLambdaFullAccess"], "iam:listinstanceprofiles": ["AmazonEC2ContainerServiceFullAccess", "AWSDataPipeline_PowerUser", "AWSMarketplaceRead-only", "AWSCloud9ServiceRolePolicy", "AWSImageBuilderFullAccess", "AmazonElasticMapReduceRole", "AWSDataPipeline_FullAccess", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AWSBatchFullAccess", "AWSMarketplaceFullAccess", "AWSOpsWorksRole", "AWSOpsWorksFullAccess", "AWSDataPipelineRole", "AWSElasticBeanstalkFullAccess"], "s3:listbucket": ["AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "AmazonMacieSetupRole", "AWSElementalMediaConvertReadOnly", "AmazonAthenaFullAccess", "AmazonPersonalizeFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSOpsWorksCMInstanceProfileRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "ServerMigrationConnector", "AmazonEC2RoleforAWSCodeDeploy", "AWSDataExchangeFullAccess", "AmazonElasticTranscoder_FullAccess", "AWSGlueServiceNotebookRole", "AWSMobileHub_FullAccess", "AWSElementalMediaConvertFullAccess", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSDiscoveryContinuousExportFirehosePolicy", "AWSElasticBeanstalkRoleCore", "AWSConfigRole", "AmazonEC2RoleforSSM", "AmazonBraketFullAccess", "AmazonFreeRTOSOTAUpdate", "AWSLicenseManagerServiceRolePolicy", "AWSThinkboxAWSPortalGatewayPolicy", "AmazonAppStreamServiceAccess", "AWSImageBuilderFullAccess", "AWSDataExchangeProviderFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AWSServiceRoleForSMS", "AWSThinkboxAssetServerPolicy", "AWSQuicksightAthenaAccess", "AWSForWordPressPluginPolicy", "TranslateFullAccess", "AWSAgentlessDiscoveryService", "AmazonElasticTranscoder_ReadOnlyAccess", "AWSConnector", "AWSConfigServiceRolePolicy", "ServerMigration_ServiceRole", "AmazonRekognitionCustomLabelsFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "ComprehendDataAccessRolePolicy", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonChimeFullAccess", "AmazonBraketServiceRolePolicy", "AmazonRoute53FullAccess", "AmazonAppFlowFullAccess", "AWSThinkboxAWSPortalWorkerPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "CloudWatchAutomaticDashboardsAccess", "AmazonDMSRedshiftS3Role", "AWSDeepLensServiceRolePolicy", "AWSCodePipeline_ReadOnlyAccess", "ComprehendFullAccess", "AWSLakeFormationDataAdmin", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSDataSyncReadOnlyAccess", "AWSCodePipelineReadOnlyAccess", "AWSDataSyncFullAccess", "CloudWatchSyntheticsFullAccess", "AWSDeepRacerRoboMakerAccessPolicy", "AWSTrustedAdvisorServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSCloudTrailFullAccess", "AmazonSageMakerGroundTruthExecution", "AWSOpsWorksCMServiceRole", "AWSDataExchangeSubscriberFullAccess", "AmazonElasticMapReduceReadOnlyAccess", "AmazonElasticTranscoder_JobsSubmitter", "AWSDeepLensLambdaFunctionAccessPolicy", "NetworkAdministrator", "AWSElasticBeanstalkService", "VMImportExportRoleForAWSConnector", "AWSGlueServiceRole", "AmazonElasticTranscoderRole", "AWS_ConfigRole", "AWSMarketplaceImageBuildFullAccess", "AmazonFSxConsoleFullAccess", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSCodePipelineFullAccess"], "s3:getobject": ["AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "AWSQuickSightSageMakerPolicy", "AWSCodeStarServiceRole", "AWSCloudTrailReadOnlyAccess", "AmazonAthenaFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonPersonalizeFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSOpsWorksCMInstanceProfileRole", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "ServerMigrationConnector", "AmazonEC2RoleforAWSCodeDeploy", "AWSDataExchangeFullAccess", "AWSGreengrassResourceAccessRolePolicy", "AWSGlueServiceNotebookRole", "AWSMobileHub_FullAccess", "AmazonTranscribeFullAccess", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSDiscoveryContinuousExportFirehosePolicy", "AWSConfigRole", "AmazonEC2RoleforSSM", "AmazonBraketFullAccess", "AmazonFreeRTOSOTAUpdate", "AWSThinkboxAWSPortalGatewayPolicy", "AmazonAppStreamServiceAccess", "AWSDataExchangeProviderFullAccess", "AWSServiceRoleForSMS", "AWSThinkboxAssetServerPolicy", "AWSQuicksightAthenaAccess", "ConfigConformsServiceRolePolicy", "AWSAgentlessDiscoveryService", "AWSCodeDeployRoleForECS", "AWSConnector", "AWSCodeDeployRoleForECSLimited", "ServerMigration_ServiceRole", "AWSCodeDeployRoleForLambdaLimited", "AmazonRekognitionCustomLabelsFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "ComprehendDataAccessRolePolicy", "AmazonMacieServiceRolePolicy", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonBraketServiceRolePolicy", "AWSThinkboxAWSPortalWorkerPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonDMSRedshiftS3Role", "SecretsManagerReadWrite", "AWSDeepLensServiceRolePolicy", "AWSCodePipeline_ReadOnlyAccess", "AWSConfigRulesExecutionRole", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSRoboMakerFullAccess", "CloudWatchSyntheticsFullAccess", "AWSDeepRacerRoboMakerAccessPolicy", "ServerMigrationServiceRoleForInstanceValidation", "AWSLicenseManagerMasterAccountRolePolicy", "AWSCloudTrailFullAccess", "AmazonSageMakerGroundTruthExecution", "AWSOpsWorksCMServiceRole", "AWSDataExchangeSubscriberFullAccess", "GreengrassOTAUpdateArtifactAccess", "AWSMobileHub_ReadOnly", "AmazonElasticMapReduceReadOnlyAccess", "AWSControlTowerServiceRolePolicy", "AWSDeepLensLambdaFunctionAccessPolicy", "AWSLambdaExecute", "AWSElasticBeanstalkService", "ServerMigrationServiceConsoleFullAccess", "VMImportExportRoleForAWSConnector", "AWSCodeDeployRoleForLambda", "AWSGlueServiceRole", "AWSMarketplaceImageBuildFullAccess", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSCodePipelineFullAccess", "QuickSightAccessForS3StorageManagementAnalyticsReadOnly"], "sns:publish": ["AmazonRDSBetaServiceRolePolicy", "AmazonSSMAutomationRole", "AWSLicenseManagerServiceRolePolicy", "AWSCodeDeployRole", "AmazonSageMakerGroundTruthExecution", "AWSServiceRoleForImageBuilder", "AmazonDocDBConsoleFullAccess", "AWSImageBuilderFullAccess", "AmazonDocDBFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonRDSPreviewServiceRolePolicy", "AWSElasticBeanstalkRoleSNS", "AmazonTextractServiceRole", "AWSDataPipelineRole", "AWSMarketplaceFullAccess", "AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction", "AmazonRDSServiceRolePolicy", "NeptuneFullAccess", "AutoScalingNotificationAccessRole", "GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkEnhancedHealth", "AWSAgentlessDiscoveryService", "ServerMigrationConnector", "AWSServiceRoleForCodeGuru-Profiler", "AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForLambda", "AWSConnector", "AWSCodeDeployRoleForECSLimited", "AWSIoTRuleActions", "AmazonElasticTranscoderRole", "AWSMarketplaceImageBuildFullAccess", "AutoScalingServiceRolePolicy", "AmazonRekognitionServiceRole", "AWSElasticBeanstalkServiceRolePolicy", "AmazonRDSFullAccess", "NeptuneConsoleFullAccess", "AWSLambdaFullAccess"], "sns:settopicattributes": ["AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AWSDirectoryServiceFullAccess", "AWSElasticBeanstalkService", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSCodePipelineFullAccess", "DatabaseAdministrator", "AWSCloudTrailFullAccess", "AWSElasticBeanstalkRoleSNS", "AmazonDynamoDBFullAccess", "AWSMarketplaceFullAccess"], "iam:passrole": ["AWSStepFunctionsConsoleFullAccess", "AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "AWSCodeStarServiceRole", "EC2FleetTimeShiftableServiceRolePolicy", "AmazonECS_FullAccess", "AWSRoboMakerServicePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AmazonEC2ContainerServiceEventsRole", "AWSSSOMasterAccountAdministrator", "AmazonPersonalizeFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonFraudDetectorFullAccessPolicy", "AWSMarketplaceFullAccess", "AWSGlueConsoleFullAccess", "AmazonElasticTranscoder_FullAccess", "AmazonEC2ContainerServiceFullAccess", "AmazonKinesisAnalyticsFullAccess", "AWSIoTSiteWiseConsoleFullAccess", "AWSElementalMediaConvertFullAccess", "AutoScalingServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AmazonLexFullAccess", "AmazonBraketFullAccess", "AWSEC2FleetServiceRolePolicy", "AWSLambdaReplicator", "AmazonESCognitoAccess", "AWSServiceCatalogAdminFullAccess", "AWSBackupOperatorAccess", "AmazonForecastFullAccess", "AmazonEventBridgeFullAccess", "ServerMigrationServiceLaunchRole", "AWSImageBuilderFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AWSServiceRoleForSMS", "AmazonAugmentedAIFullAccess", "DatabaseAdministrator", "AmazonInspectorFullAccess", "AmazonElasticMapReduceFullAccess", "ConfigConformsServiceRolePolicy", "AmazonAugmentedAIIntegratedAPIAccess", "AWSDataPipelineRole", "AWSBatchServiceRole", "AmazonWorkMailFullAccess", "AWSCodeDeployRoleForECS", "AWSBatchFullAccess", "AWSCodeDeployRoleForECSLimited", "ServerMigration_ServiceRole", "AmazonElasticMapReduceRole", "AWSDataPipeline_FullAccess", "AmazonKendraFullAccess", "AWSOpsWorksRole", "AWSThinkboxAWSPortalAdminPolicy", "AWSAppSyncAdministrator", "AWSEC2SpotServiceRolePolicy", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSElasticBeanstalkFullAccess", "AWSConfigRemediationServiceRolePolicy", "AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSOpsWorksFullAccess", "AWSDeepLensServiceRolePolicy", "AWSApplicationAutoscalingRDSClusterPolicy", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AmazonSSMServiceRolePolicy", "AmazonAppStreamFullAccess", "NeptuneConsoleFullAccess", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy", "AWSDataSyncFullAccess", "AWSDataPipeline_PowerUser", "AmazonElasticFileSystemServiceRolePolicy", "CloudWatchSyntheticsFullAccess", "AWSRoboMakerServiceRolePolicy", "DataScientist", "AWSEC2SpotFleetServiceRolePolicy", "CloudWatchEventsFullAccess", "AWSLicenseManagerMasterAccountRolePolicy", "AWSCloudTrailFullAccess", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "AWSControlTowerServiceRolePolicy", "NetworkAdministrator", "AmazonDynamoDBFullAccess", "AmazonEC2SpotFleetTaggingRole", "NeptuneFullAccess", "AWSElasticBeanstalkService", "AWSBackupFullAccess", "AWSCloud9ServiceRolePolicy", "AWSMarketplaceImageBuildFullAccess", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSCodePipelineFullAccess", "SystemAdministrator", "AWSLambdaFullAccess"], "directconnect:describe*": ["ReadOnlyAccess", "AWSDirectConnectReadOnlyAccess", "SupportUser", "SecurityAudit", "ViewOnlyAccess"], "directconnect:list*": ["AWSDirectConnectReadOnlyAccess"], "ec2:describevpngateways": ["AmazonInspectorServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AmazonVPCReadOnlyAccess", "AWSDirectConnectFullAccess", "NetworkAdministrator", "AWSDirectConnectReadOnlyAccess", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonVPCFullAccess"], "ec2:describetransitgateways": ["AmazonInspectorServiceRolePolicy", "AWSNetworkManagerServiceRolePolicy", "AWSDirectConnectFullAccess", "NetworkAdministrator", "AWSDirectConnectReadOnlyAccess", "AWSSupportServiceRolePolicy"], "s3:createbucket": ["AmazonSageMakerFullAccess", "CloudWatchSyntheticsFullAccess", "DataScientist", "AmazonMacieServiceRolePolicy", "AWSCloudTrailFullAccess", "AWSOpsWorksCMServiceRole", "AmazonAppStreamServiceAccess", "AmazonMacieSetupRole", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonAthenaFullAccess", "AWSServiceRoleForSMS", "AmazonLaunchWizard_Fullaccess", "AWSQuicksightAthenaAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "DatabaseAdministrator", "AWSForWordPressPluginPolicy", "AWSDataPipelineRole", "AWSGlueConsoleFullAccess", "AmazonDMSRedshiftS3Role", "ServerMigrationConnector", "AWSDeepLensServiceRolePolicy", "AmazonConnectFullAccess", "AWSGlueServiceRole", "AWSConnector", "ServerMigration_ServiceRole", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSCodePipelineFullAccess", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AmazonElasticMapReduceRole", "AWSThinkboxAWSPortalAdminPolicy"], "s3:deletebucket": ["ServerMigration_ServiceRole", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonDMSRedshiftS3Role", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSServiceRoleForSMS", "AmazonLaunchWizard_Fullaccess", "ServerMigrationConnector", "AmazonMacieServiceRolePolicy", "AWSCloudTrailFullAccess", "AWSDeepLensServiceRolePolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSOpsWorksCMServiceRole", "AWSThinkboxAWSPortalAdminPolicy", "AWSConnector", "AmazonMacieSetupRole"], "s3:getbucketlocation": ["AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "AmazonFreeRTOSOTAUpdate", "AWSDeepRacerRoboMakerAccessPolicy", "CloudWatchSyntheticsFullAccess", "AWSLicenseManagerServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AmazonMacieServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSCloudTrailFullAccess", "AWS_Config_Role", "AmazonSageMakerGroundTruthExecution", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy", "AWSDataExchangeSubscriberFullAccess", "AmazonChimeFullAccess", "AWSCloudTrailReadOnlyAccess", "AWSImageBuilderFullAccess", "AWSDataExchangeProviderFullAccess", "AWSCodeBuildAdminAccess", "AmazonAthenaFullAccess", "AWSServiceRoleForSMS", "AmazonRoute53FullAccess", "AWSQuicksightAthenaAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonAppFlowFullAccess", "NetworkAdministrator", "TranslateFullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonFraudDetectorFullAccessPolicy", "AWSGlueConsoleFullAccess", "AmazonDMSRedshiftS3Role", "VMImportExportRoleForAWSConnector", "ServerMigrationConnector", "AWSDataExchangeFullAccess", "AWSGreengrassResourceAccessRolePolicy", "AmazonConnectFullAccess", "AWSGlueServiceRole", "AWSGlueServiceNotebookRole", "ComprehendFullAccess", "AWSConnector", "AWSConfigServiceRolePolicy", "AWSLakeFormationDataAdmin", "AWS_ConfigRole", "ServerMigration_ServiceRole", "AccessAnalyzerServiceRolePolicy", "AmazonRekognitionCustomLabelsFullAccess", "AWSDiscoveryContinuousExportFirehosePolicy", "AmazonKendraFullAccess", "QuickSightAccessForS3StorageManagementAnalyticsReadOnly", "AWSConfigRole", "AmazonEC2RoleforSSM", "AWSThinkboxAWSPortalAdminPolicy"], "s3:putobject": ["AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "AmazonFreeRTOSOTAUpdate", "AWSDeepRacerRoboMakerAccessPolicy", "DataScientist", "AWSLicenseManagerServiceRolePolicy", "AWSElasticBeanstalkWebTier", "AWSThinkboxAWSPortalGatewayPolicy", "ComprehendDataAccessRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonSageMakerGroundTruthExecution", "AWSOpsWorksCMServiceRole", "AmazonAppStreamServiceAccess", "AWSElasticBeanstalkWorkerTier", "AWSDataExchangeProviderFullAccess", "AmazonBraketServiceRolePolicy", "AWSServiceRoleForSMS", "AmazonAthenaFullAccess", "AWSThinkboxAssetServerPolicy", "AWSQuicksightAthenaAccess", "AmazonPersonalizeFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSOpsWorksCMInstanceProfileRole", "AWSThinkboxAWSPortalWorkerPolicy", "AWSForWordPressPluginPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "ConfigConformsServiceRolePolicy", "AWSLambdaExecute", "AWSGlueConsoleFullAccess", "AmazonDMSRedshiftS3Role", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSAgentlessDiscoveryService", "ServerMigrationConnector", "AWSDataExchangeFullAccess", "AWSGlueServiceRole", "AWSGlueServiceNotebookRole", "AWSConnector", "AWSMobileHub_FullAccess", "AWSIoTRuleActions", "AmazonElasticTranscoderRole", "ServerMigration_ServiceRole", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AmazonRekognitionCustomLabelsFullAccess", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSDiscoveryContinuousExportFirehosePolicy", "AmazonEC2RoleforSSM", "AWSThinkboxAWSPortalAdminPolicy", "AmazonBraketFullAccess"], "s3:deleteobject": ["AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "DataScientist", "AmazonMacieServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSOpsWorksCMServiceRole", "AmazonAppStreamServiceAccess", "AmazonMacieSetupRole", "AWSServiceRoleForSMS", "AmazonDynamoDBFullAccesswithDataPipeline", "AmazonPersonalizeFullAccess", "AWSOpsWorksCMInstanceProfileRole", "AWSForWordPressPluginPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSDataPipelineRole", "AmazonDMSRedshiftS3Role", "ServerMigrationConnector", "AWSGlueServiceRole", "AWSGlueServiceNotebookRole", "AWSConnector", "ServerMigration_ServiceRole", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSThinkboxAWSPortalAdminPolicy"], "s3:getobjectversion": ["CloudWatchSyntheticsFullAccess", "AmazonFreeRTOSOTAUpdate", "AmazonDMSRedshiftS3Role", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSCodeDeployRoleForLambdaLimited", "AWSCodeDeployRoleForLambda", "AWSCodePipelineFullAccess", "AmazonEC2RoleforAWSCodeDeploy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AmazonRekognitionCustomLabelsFullAccess", "AWSCodeDeployRoleForECS", "AmazonAppStreamServiceAccess", "AWSCodeDeployRoleForECSLimited"], "s3:getbucketpolicy": ["AWSTrustedAdvisorServiceRolePolicy", "AmazonMacieServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSCloudTrailFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AmazonGuardDutyServiceRolePolicy", "AmazonAppStreamServiceAccess", "AmazonAppFlowFullAccess", "AWSForWordPressPluginPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonDMSRedshiftS3Role", "AmazonMSKFullAccess", "AWSCodePipeline_ReadOnlyAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "Route53ResolverServiceRolePolicy", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSConfigRole"], "s3:putbucketpolicy": ["AWSDeepRacerServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonDMSRedshiftS3Role", "AWSCodePipelineFullAccess", "AmazonMacieServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSCloudTrailFullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonAppFlowFullAccess", "AWSOpsWorksCMServiceRole", "AWSElasticBeanstalkRoleCore", "AmazonAppStreamServiceAccess", "AmazonMacieSetupRole"], "s3:getbucketacl": ["AWSDeepRacerServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AmazonGuardDutyServiceRolePolicy", "AmazonChimeFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AWSServiceRoleForSMS", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSForWordPressPluginPolicy", "ConfigConformsServiceRolePolicy", "AWSGlueConsoleFullAccess", "AmazonDMSRedshiftS3Role", "AWSGlueServiceRole", "AWSGlueServiceNotebookRole", "AWSConfigServiceRolePolicy", "AWSLakeFormationDataAdmin", "AWS_ConfigRole", "ServerMigration_ServiceRole", "AccessAnalyzerServiceRolePolicy", "AmazonRekognitionCustomLabelsFullAccess", "AWSConfigRole", "AWSThinkboxAWSPortalAdminPolicy"], "s3:putbucketversioning": ["AmazonDMSRedshiftS3Role", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AmazonLaunchWizard_Fullaccess", "DatabaseAdministrator", "AWSThinkboxAWSPortalAdminPolicy"], "s3:getbucketversioning": ["AWS_ConfigRole", "AWSThinkboxAWSPortalAdminPolicy", "AmazonDMSRedshiftS3Role", "AWSTrustedAdvisorServiceRolePolicy", "AWSCodePipelineFullAccess", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AmazonChimeFullAccess", "AWSConfigServiceRolePolicy"], "s3:putlifecycleconfiguration": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AmazonDMSRedshiftS3Role", "ServerMigrationConnector", "AWSLicenseManagerMasterAccountRolePolicy", "DatabaseAdministrator", "AWSThinkboxAWSPortalAdminPolicy"], "s3:getlifecycleconfiguration": ["AWS_ConfigRole", "AmazonDMSRedshiftS3Role", "AmazonMacieServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:deletebucketpolicy": ["AWSThinkboxAWSPortalAdminPolicy", "AmazonMacieServiceRolePolicy", "AmazonDMSRedshiftS3Role", "AmazonMacieSetupRole"], "iam:list*": ["ReadOnlyAccess", "AWSQuickSightListIAM", "AmazonLaunchWizard_Fullaccess", "SupportUser", "AWSElasticBeanstalkRoleCore", "SecurityAudit", "ViewOnlyAccess", "IAMReadOnlyAccess"], "iot1click:describe*": ["AWSIoT1ClickReadOnlyAccess"], "iot1click:get*": ["AWSIoT1ClickReadOnlyAccess"], "iot1click:list*": ["AWSIoT1ClickReadOnlyAccess"], "elastictranscoder:read*": ["ReadOnlyAccess", "AmazonElasticTranscoder_JobsSubmitter", "AmazonElasticTranscoder_ReadOnlyAccess"], "elastictranscoder:list*": ["ReadOnlyAccess", "AmazonElasticTranscoder_JobsSubmitter", "AmazonElasticTranscoder_ReadOnlyAccess", "SupportUser", "ViewOnlyAccess"], "s3:listallmybuckets": ["AWSDataSyncFullAccess", "AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "AmazonFreeRTOSOTAUpdate", "AWSDeepRacerRoboMakerAccessPolicy", "CloudWatchSyntheticsFullAccess", "AWSLicenseManagerServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AmazonMacieServiceRolePolicy", "AWSCloudTrailFullAccess", "AWS_Config_Role", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy", "AmazonGuardDutyServiceRolePolicy", "AWSDataExchangeSubscriberFullAccess", "ViewOnlyAccess", "AmazonAppStreamServiceAccess", "AmazonChimeFullAccess", "AWSCloudTrailReadOnlyAccess", "AWSImageBuilderFullAccess", "AmazonMacieSetupRole", "AmazonElasticMapReduceReadOnlyAccess", "AWSDataExchangeProviderFullAccess", "AWSElementalMediaConvertReadOnly", "AWSCodeBuildAdminAccess", "AmazonAthenaFullAccess", "AWSServiceRoleForSMS", "AmazonElasticTranscoder_JobsSubmitter", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonAppFlowFullAccess", "AWSOpsWorksCMInstanceProfileRole", "TranslateFullAccess", "AmazonFraudDetectorFullAccessPolicy", "AWSGlueConsoleFullAccess", "CloudWatchAutomaticDashboardsAccess", "ServerMigrationServiceConsoleFullAccess", "AmazonElasticTranscoder_ReadOnlyAccess", "AWSDataExchangeFullAccess", "AWSCodePipeline_ReadOnlyAccess", "CloudFrontFullAccess", "AmazonConnectFullAccess", "SecurityAudit", "AmazonElasticTranscoder_FullAccess", "AWSGlueServiceRole", "AWSGlueServiceNotebookRole", "ComprehendFullAccess", "AWSConnector", "AWSConfigServiceRolePolicy", "AWSLakeFormationDataAdmin", "AWSElementalMediaConvertFullAccess", "AWS_ConfigRole", "ServerMigration_ServiceRole", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSDataSyncReadOnlyAccess", "AWSResourceGroupsReadOnlyAccess", "AccessAnalyzerServiceRolePolicy", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AmazonRekognitionCustomLabelsFullAccess", "AmazonKendraFullAccess", "QuickSightAccessForS3StorageManagementAnalyticsReadOnly", "AWSConfigRole", "AWSThinkboxAWSPortalAdminPolicy", "LakeFormationDataAccessServiceRolePolicy"], "rds:*": ["DataScientist", "DatabaseAdministrator", "AmazonRDSFullAccess", "AWSOpsWorksRole", "AWSElasticBeanstalkFullAccess"], "application-autoscaling:deletescalingpolicy": ["AmazonSageMakerFullAccess", "AmazonMCSFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonElasticMapReduceRole", "AmazonECS_FullAccess", "AmazonAppStreamFullAccess", "AmazonDynamoDBFullAccess", "AmazonRDSFullAccess", "AmazonKeyspacesFullAccess"], "application-autoscaling:deregisterscalabletarget": ["AmazonSageMakerFullAccess", "AmazonMCSFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonElasticMapReduceRole", "AmazonECS_FullAccess", "AmazonDynamoDBFullAccess", "AmazonRDSFullAccess", "AmazonKeyspacesFullAccess"], "application-autoscaling:describescalabletargets": ["AmazonSageMakerFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWS_Config_Role", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AmazonSageMakerReadOnly", "AmazonMCSReadOnlyAccess", "AmazonDynamoDBFullAccess", "AmazonKeyspacesFullAccess", "AmazonDynamoDBReadOnlyAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AmazonKeyspacesReadOnlyAccess", "DynamoDBReplicationServiceRolePolicy", "AmazonMCSFullAccess", "AmazonAppStreamFullAccess", "AmazonRDSFullAccess", "AWSConfigRole", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "application-autoscaling:describescalingactivities": ["AmazonMCSReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess", "AmazonSageMakerFullAccess", "AmazonKeyspacesReadOnlyAccess", "AmazonMCSFullAccess", "AmazonECS_FullAccess", "AmazonDynamoDBFullAccess", "AWSSupportServiceRolePolicy", "AmazonRDSFullAccess", "AmazonKeyspacesFullAccess", "AmazonSageMakerReadOnly"], "application-autoscaling:describescalingpolicies": ["AWS_ConfigRole", "AmazonMCSReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess", "AmazonSageMakerFullAccess", "AmazonKeyspacesReadOnlyAccess", "DynamoDBReplicationServiceRolePolicy", "AmazonMCSFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWS_Config_Role", "AmazonECS_FullAccess", "AmazonKeyspacesFullAccess", "AmazonDynamoDBFullAccess", "AWSSupportServiceRolePolicy", "AmazonRDSFullAccess", "AWSConfigRole", "AmazonAppStreamFullAccess", "AmazonSageMakerReadOnly", "AWSConfigServiceRolePolicy"], "application-autoscaling:putscalingpolicy": ["AmazonSageMakerFullAccess", "DynamoDBReplicationServiceRolePolicy", "AmazonMCSFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonElasticMapReduceRole", "AmazonECS_FullAccess", "AmazonDynamoDBFullAccess", "AmazonAppStreamFullAccess", "AmazonRDSFullAccess", "AmazonKeyspacesFullAccess"], "application-autoscaling:registerscalabletarget": ["AmazonSageMakerFullAccess", "DynamoDBReplicationServiceRolePolicy", "AmazonMCSFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonElasticMapReduceRole", "AmazonECS_FullAccess", "AmazonDynamoDBFullAccess", "AmazonAppStreamFullAccess", "AmazonRDSFullAccess", "AmazonKeyspacesFullAccess"], "cloudwatch:describealarms": ["AmazonSageMakerFullAccess", "CloudWatchSyntheticsFullAccess", "CloudWatchEventsServiceRolePolicy", "AWSApplicationAutoscalingEMRInstanceGroupPolicy", "AmazonEC2SpotFleetAutoscaleRole", "AWSCodeDeployRole", "AmazonElasticMapReduceforAutoScalingRole", "AWS_Config_Role", "AmazonECSServiceRolePolicy", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AmazonSageMakerReadOnly", "AWSSecurityHubServiceRolePolicy", "AWSApplicationAutoscalingComprehendEndpointPolicy", "AmazonMCSReadOnlyAccess", "AmazonAthenaFullAccess", "AmazonRoute53FullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AmazonFSxConsoleReadOnlyAccess", "NetworkAdministrator", "AWSApplicationAutoscalingEC2SpotFleetRequestPolicy", "ApplicationAutoScalingForAmazonAppStreamAccess", "AmazonDynamoDBFullAccess", "AmazonKeyspacesFullAccess", "AWSApplicationAutoscalingKafkaClusterPolicy", "AWSApplicationAutoScalingCustomResourcePolicy", "AmazonDynamoDBReadOnlyAccess", "AmazonEC2ContainerServiceAutoscaleRole", "AWSApplicationAutoscalingLambdaConcurrencyPolicy", "AWSApplicationAutoscalingRDSClusterPolicy", "AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForLambda", "AWSCodeDeployRoleForECSLimited", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSApplicationAutoscalingECSServicePolicy", "AmazonKeyspacesReadOnlyAccess", "AWSCodeDeployRoleForLambdaLimited", "AmazonMCSFullAccess", "AutoScalingServiceRolePolicy", "AmazonFSxConsoleFullAccess", "AmazonElasticMapReduceRole", "AWSApplicationAutoscalingSageMakerEndpointPolicy", "AWSApplicationAutoscalingCassandraTablePolicy", "AWSApplicationAutoscalingDynamoDBTablePolicy", "AmazonAppStreamFullAccess", "AmazonRDSFullAccess", "AWSConfigRole", "AmazonLexFullAccess", "AWSApplicationAutoscalingAppStreamFleetPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cloudwatch:getmetricstatistics": ["AmazonSageMakerFullAccess", "CloudWatchSyntheticsFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AmazonRDSReadOnlyAccess", "AWSWAFConsoleFullAccess", "AmazonECS_FullAccess", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AmazonElasticMapReduceReadOnlyAccess", "AmazonEC2ReadOnlyAccess", "AmazonDocDBFullAccess", "AutoScalingConsoleFullAccess", "NeptuneReadOnlyAccess", "AWSCodeBuildAdminAccess", "AmazonRoute53FullAccess", "TranslateReadOnly", "AmazonDynamoDBFullAccesswithDataPipeline", "AmazonKinesisAnalyticsReadOnly", "ServiceQuotasReadOnlyAccess", "NetworkAdministrator", "ServiceQuotasFullAccess", "AmazonDynamoDBFullAccess", "TranslateFullAccess", "NeptuneFullAccess", "AmazonDynamoDBReadOnlyAccess", "AWSWAFConsoleReadOnlyAccess", "AmazonLexFullAccess", "AmazonEC2ContainerServiceFullAccess", "AWSBatchFullAccess", "AmazonKinesisAnalyticsFullAccess", "AWSCodeBuildReadOnlyAccess", "AmazonAppStreamFullAccess", "AmazonRDSFullAccess", "AWSOpsWorksRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "AutoScalingConsoleReadOnlyAccess"], "cloudwatch:putmetricalarm": ["AmazonSageMakerFullAccess", "CloudWatchSyntheticsFullAccess", "AWSApplicationAutoscalingEMRInstanceGroupPolicy", "AmazonEC2SpotFleetAutoscaleRole", "AWSCodeDeployRole", "AmazonRedshiftFullAccess", "AmazonECSServiceRolePolicy", "AmazonECS_FullAccess", "AutoScalingConsoleFullAccess", "AWSApplicationAutoscalingComprehendEndpointPolicy", "AmazonAthenaFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "DatabaseAdministrator", "NetworkAdministrator", "ServiceQuotasFullAccess", "AWSApplicationAutoscalingEC2SpotFleetRequestPolicy", "AmazonDynamoDBFullAccess", "AmazonKeyspacesFullAccess", "AWSApplicationAutoscalingKafkaClusterPolicy", "AWSApplicationAutoScalingCustomResourcePolicy", "AmazonEC2ContainerServiceAutoscaleRole", "AWSElasticBeanstalkService", "AWSApplicationAutoscalingLambdaConcurrencyPolicy", "AWSApplicationAutoscalingRDSClusterPolicy", "AutoScalingFullAccess", "AWSApplicationAutoscalingECSServicePolicy", "AmazonMCSFullAccess", "AutoScalingServiceRolePolicy", "AWSApplicationAutoscalingCassandraTablePolicy", "AWSApplicationAutoscalingSageMakerEndpointPolicy", "AmazonElasticMapReduceRole", "AWSApplicationAutoscalingDynamoDBTablePolicy", "AmazonAppStreamFullAccess", "AWSElasticBeanstalkRoleCore", "AmazonRDSFullAccess", "AWSApplicationAutoscalingAppStreamFleetPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cloudwatch:deletealarms": ["AmazonSageMakerFullAccess", "CloudWatchSyntheticsFullAccess", "AWSApplicationAutoscalingEMRInstanceGroupPolicy", "AmazonEC2SpotFleetAutoscaleRole", "AmazonECSServiceRolePolicy", "AmazonECS_FullAccess", "AWSApplicationAutoscalingComprehendEndpointPolicy", "AmazonAthenaFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "DatabaseAdministrator", "NetworkAdministrator", "ServiceQuotasFullAccess", "AWSApplicationAutoscalingEC2SpotFleetRequestPolicy", "AmazonDynamoDBFullAccess", "AmazonKeyspacesFullAccess", "AWSApplicationAutoscalingKafkaClusterPolicy", "AWSApplicationAutoScalingCustomResourcePolicy", "AWSApplicationAutoscalingLambdaConcurrencyPolicy", "AWSApplicationAutoscalingRDSClusterPolicy", "AWSApplicationAutoscalingECSServicePolicy", "AmazonMCSFullAccess", "AutoScalingServiceRolePolicy", "AWSApplicationAutoscalingCassandraTablePolicy", "AmazonElasticMapReduceRole", "AWSApplicationAutoscalingSageMakerEndpointPolicy", "AWSApplicationAutoscalingDynamoDBTablePolicy", "AmazonAppStreamFullAccess", "AWSElasticBeanstalkRoleCore", "AmazonRDSFullAccess", "AWSApplicationAutoscalingAppStreamFleetPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ec2:describeavailabilityzones": ["AmazonRDSBetaServiceRolePolicy", "AWSBackupOperatorAccess", "APIGatewayServiceRolePolicy", "AmazonRedshiftFullAccess", "AmazonRDSReadOnlyAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AmazonAppStreamServiceAccess", "ViewOnlyAccess", "NeptuneConsoleFullAccess", "AutoScalingConsoleFullAccess", "AmazonDocDBFullAccess", "AmazonInspectorServiceRolePolicy", "NeptuneReadOnlyAccess", "AutoScalingConsoleReadOnlyAccess", "AWSControlTowerServiceRolePolicy", "AmazonRedshiftReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "DatabaseAdministrator", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "DAXServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonRoute53ResolverFullAccess", "AWSOpsWorksFullAccess", "AmazonVPCFullAccess", "AmazonRDSServiceRolePolicy", "NeptuneFullAccess", "AmazonElasticFileSystemFullAccess", "AmazonElasticFileSystemReadOnlyAccess", "AWSBackupFullAccess", "AmazonManagedBlockchainConsoleFullAccess", "AmazonWorkMailFullAccess", "AutoScalingFullAccess", "AmazonDMSVPCManagementRole", "AWSThinkboxAWSPortalAdminPolicy", "AmazonElasticMapReduceRole", "AmazonDRSVPCManagement", "AmazonRDSFullAccess", "AWSOpsWorksRole", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonDocDBReadOnlyAccess", "ElastiCacheServiceRolePolicy"], "ec2:describevpcattribute": ["AmazonRDSBetaServiceRolePolicy", "AmazonRDSReadOnlyAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AmazonVPCReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess", "AWSGlueConsoleFullAccess", "AmazonRDSServiceRolePolicy", "NeptuneFullAccess", "AmazonElasticFileSystemFullAccess", "AmazonElasticFileSystemReadOnlyAccess", "AWSGlueServiceRole", "AmazonElasticMapReduceRole", "AmazonDRSVPCManagement", "AmazonRDSFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "sns:listsubscriptions": ["DataScientist", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AutoScalingConsoleFullAccess", "AmazonDocDBFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSLambdaReadOnlyAccess", "AmazonDynamoDBFullAccess", "NeptuneFullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSDirectoryServiceFullAccess", "AWSDirectoryServiceReadOnlyAccess", "AWSChatbotServiceLinkedRolePolicy", "AmazonRDSFullAccess", "AWSConfigRole", "NeptuneConsoleFullAccess", "AutoScalingConsoleReadOnlyAccess", "AWSLambdaFullAccess"], "logs:getlogevents": ["AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "DataScientist", "AmazonRDSReadOnlyAccess", "AWSCodeBuildDeveloperAccess", "AmazonDocDBConsoleFullAccess", "AmazonRDSEnhancedMonitoringRole", "AmazonAPIGatewayPushToCloudWatchLogs", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AWSCodeBuildAdminAccess", "AmazonLaunchWizard_Fullaccess", "AWSThinkboxAssetServerPolicy", "AmazonKinesisAnalyticsReadOnly", "DatabaseAdministrator", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AWSLambdaReadOnlyAccess", "AWSGlueConsoleFullAccess", "AWSIoTLogging", "NeptuneFullAccess", "AmazonKinesisAnalyticsFullAccess", "AWSCodeBuildReadOnlyAccess", "AmazonRDSFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "AWSThinkboxAWSPortalAdminPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "outposts:getoutpostinstancetypes": ["AmazonRDSFullAccess", "AWSElasticLoadBalancingServiceRolePolicy", "ElastiCacheServiceRolePolicy"], "pi:*": ["AmazonRDSFullAccess"], "a4b:send*": ["AlexaForBusinessGatewayExecution"], "a4b:get*": ["ReadOnlyAccess", "AlexaForBusinessGatewayExecution", "AlexaForBusinessReadOnlyAccess"], "sqs:receivemessage": ["AlexaForBusinessGatewayExecution", "AWSLambdaSQSQueueExecutionRole", "AmazonElasticMapReduceRole", "AmazonSageMakerGroundTruthExecution", "SupportUser", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSElasticBeanstalkWorkerTier", "AWSDataPipelineRole"], "sqs:deletemessage": ["AlexaForBusinessGatewayExecution", "AWSLambdaSQSQueueExecutionRole", "AmazonSageMakerGroundTruthExecution", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSElasticBeanstalkWorkerTier"], "a4b:list*": ["ReadOnlyAccess", "AlexaForBusinessGatewayExecution", "AlexaForBusinessReadOnlyAccess"], "logs:createloggroup": ["AmazonRDSBetaServiceRolePolicy", "AWSDataSyncFullAccess", "AWSLambdaBasicExecutionRole", "AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "AWSLambdaMSKExecutionRole", "AWSDeepRacerRoboMakerAccessPolicy", "AWSThinkboxAWSPortalGatewayPolicy", "AmazonEKSServicePolicy", "AWSElasticBeanstalkRoleCWL", "AmazonMQFullAccess", "AmazonWorkMailEventsServiceRolePolicy", "AWSCloudTrailFullAccess", "AmazonECSServiceRolePolicy", "AWSOpsWorksCloudWatchLogs", "AmazonECS_FullAccess", "AWSServiceRoleForIoTSiteWise", "AmazonSageMakerGroundTruthExecution", "AmazonSNSRole", "AmazonChimeFullAccess", "AmazonAPIGatewayPushToCloudWatchLogs", "AmazonRDSEnhancedMonitoringRole", "AmazonBraketServiceRolePolicy", "AmazonEKSServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AWSLambdaVPCAccessExecutionRole", "AmazonMQApiFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSDeepLensLambdaFunctionAccessPolicy", "AWSLambdaSQSQueueExecutionRole", "AWSLambdaKinesisExecutionRole", "AmazonDMSCloudWatchLogsRole", "AmazonRDSPreviewServiceRolePolicy", "AWSThinkboxAWSPortalWorkerPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSTransferLoggingAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole", "AWSIoTLogging", "AmazonRDSServiceRolePolicy", "AWSAppSyncPushToCloudWatchLogs", "AWSElasticBeanstalkService", "AWSElasticBeanstalkCustomPlatformforEC2Role", "CloudWatchAgentServerPolicy", "MediaPackageServiceRolePolicy", "AWSLambdaDynamoDBExecutionRole", "AmazonWorkMailFullAccess", "AmazonConnectFullAccess", "AWSGlueServiceRole", "AmazonManagedBlockchainServiceRolePolicy", "CloudHSMServiceRolePolicy", "AlexaForBusinessGatewayExecution", "CloudWatchAgentAdminPolicy", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSChatbotServiceLinkedRolePolicy", "AWSCloudFrontLogger", "AmazonEC2RoleforSSM", "AWSThinkboxAWSPortalAdminPolicy"], "mq:*": ["AmazonMQApiFullAccess", "AmazonMQFullAccess"], "ec2:deletenetworkinterfacepermission": ["AmazonSageMakerFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy", "AmazonMQApiFullAccess", "WorkLinkServiceRolePolicy", "APIGatewayServiceRolePolicy", "AmazonMQFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonECSServiceRolePolicy", "NetworkAdministrator", "AmazonWorkLinkServiceRolePolicy", "AmazonElasticMapReduceEditorsRole", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonVPCFullAccess"], "ec2:detachnetworkinterface": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "KafkaServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonEKSServiceRolePolicy", "AmazonEKS_CNI_Policy", "AmazonMQApiFullAccess", "AmazonEKSServicePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonMQFullAccess", "AmazonElasticMapReduceRole", "AmazonECSServiceRolePolicy", "NetworkAdministrator", "AWSCloudHSMRole", "AmazonVPCFullAccess", "SystemAdministrator", "AWSDataPipelineRole"], "ec2:describenetworkinterfaces": ["AWSDataSyncFullAccess", "AWSLambdaMSKExecutionRole", "KafkaServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonSageMakerFullAccess", "AWSLambdaENIManagementAccess", "AWSRoboMakerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "AmazonWorkSpacesServiceAccess", "AmazonEKSServicePolicy", "APIGatewayServiceRolePolicy", "AmazonMQFullAccess", "AWSCloudHSMRole", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AmazonAppStreamServiceAccess", "NeptuneConsoleFullAccess", "AmazonMQReadOnlyAccess", "AWSRoboMakerServicePolicy", "AmazonInspectorServiceRolePolicy", "AmazonEKSServiceRolePolicy", "AWSLambdaVPCAccessExecutionRole", "AmazonMQApiFullAccess", "AmazonVPCReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonMSKReadOnlyAccess", "DAXServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonRoute53ResolverReadOnlyAccess", "AmazonRoute53ResolverFullAccess", "AmazonVPCFullAccess", "AWSDataPipelineRole", "AmazonElasticFileSystemFullAccess", "AWSGlobalAcceleratorSLRPolicy", "AmazonElasticFileSystemReadOnlyAccess", "AmazonFSxServiceRolePolicy", "AmazonMQApiReadOnlyAccess", "ElasticLoadBalancingFullAccess", "AWSVPCTransitGatewayServiceRolePolicy", "AmazonElasticMapReduceEditorsRole", "AWSGlueServiceRole", "AmazonRedshiftServiceLinkedRolePolicy", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AmazonEKS_CNI_Policy", "AWSBackupServiceRolePolicyForBackup", "AmazonEKSClusterPolicy", "AmazonElasticMapReduceRole", "AWSDirectoryServiceReadOnlyAccess", "AmazonElasticsearchServiceRolePolicy", "FMSServiceRolePolicy", "AmazonVPCCrossAccountNetworkInterfaceOperations", "ElastiCacheServiceRolePolicy"], "ec2:describenetworkinterfacepermissions": ["AmazonVPCReadOnlyAccess", "AmazonMQApiFullAccess", "APIGatewayServiceRolePolicy", "AmazonMQFullAccess", "NetworkAdministrator", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonVPCFullAccess"], "ec2:describeroutetables": ["AmazonSageMakerFullAccess", "APIGatewayServiceRolePolicy", "AmazonMQFullAccess", "AmazonEKSWorkerNodePolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AmazonAppStreamServiceAccess", "ViewOnlyAccess", "NeptuneConsoleFullAccess", "AmazonInspectorServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonMQApiFullAccess", "AmazonVPCReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess", "AWSGlueConsoleFullAccess", "AmazonWorkMailFullAccess", "ElasticLoadBalancingFullAccess", "AWSGlueServiceRole", "AmazonEKSClusterPolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AmazonElasticMapReduceRole", "AmazonAppStreamFullAccess", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AWSThinkboxAWSPortalAdminPolicy"], "sso-directory:*": ["AWSSSODirectoryAdministrator"], "sso:listdirectoryassociations": ["AWSSSODirectoryAdministrator"], "elasticbeanstalk:check*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess", "SupportUser"], "elasticbeanstalk:describe*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess", "NetworkAdministrator", "SupportUser", "SecurityAudit"], "elasticbeanstalk:list*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess", "SupportUser", "NetworkAdministrator"], "elasticbeanstalk:requestenvironmentinfo": ["AWSElasticBeanstalkReadOnlyAccess", "SupportUser", "NetworkAdministrator"], "elasticbeanstalk:retrieveenvironmentinfo": ["AWSElasticBeanstalkReadOnlyAccess", "SupportUser", "NetworkAdministrator"], "ec2:describe*": ["AWSElasticBeanstalkReadOnlyAccess", "DataScientist", "AmazonEC2ContainerServiceRole", "AWS_Config_Role", "AmazonECSServiceRolePolicy", "AmazonECS_FullAccess", "SupportUser", "ServerMigrationServiceLaunchRole", "AmazonEC2ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "CloudWatchActionsEC2Access", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSDataPipelineRole", "VMImportExportRoleForAWSConnector", "AmazonEC2RoleforDataPipelineRole", "CloudWatchEventsBuiltInTargetExecutionAccess", "SecurityAudit", "AmazonEC2ContainerServiceFullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "ReadOnlyAccess", "AutoScalingServiceRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSElasticBeanstalkRoleCore", "AWSConfigRole", "SystemAdministrator"], "elasticloadbalancing:describe*": ["AWSElasticBeanstalkReadOnlyAccess", "AmazonEC2ReadOnlyAccess", "AutoScalingConsoleFullAccess", "AmazonEC2ContainerServiceRole", "ReadOnlyAccess", "ElasticLoadBalancingReadOnly", "AutoScalingServiceRolePolicy", "AmazonECSServiceRolePolicy", "SupportUser", "AWSElasticBeanstalkRoleCore", "SecurityAudit", "AWSShieldDRTAccessPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AutoScalingConsoleReadOnlyAccess"], "autoscaling:describe*": ["AWSElasticBeanstalkReadOnlyAccess", "AmazonEC2ReadOnlyAccess", "AutoScalingReadOnlyAccess", "ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonECSServiceRolePolicy", "CloudWatchReadOnlyAccess", "CloudWatchFullAccess", "SupportUser", "AmazonECS_FullAccess", "NetworkAdministrator", "AWSElasticBeanstalkRoleCore", "SecurityAudit", "AmazonEC2ContainerServiceFullAccess", "ViewOnlyAccess", "AutoScalingConsoleReadOnlyAccess"], "cloudwatch:describe*": ["AWSElasticBeanstalkReadOnlyAccess", "AmazonEC2ReadOnlyAccess", "AutoScalingConsoleFullAccess", "AmazonRedshiftReadOnlyAccess", "ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "DatabaseAdministrator", "AmazonRedshiftFullAccess", "CloudWatchReadOnlyAccess", "SupportUser", "CloudWatchActionsEC2Access", "SecurityAudit", "AWSLambdaReadOnlyAccess", "AWSShieldDRTAccessPolicy", "AutoScalingConsoleReadOnlyAccess"], "cloudwatch:list*": ["AWSElasticBeanstalkReadOnlyAccess", "AmazonRedshiftReadOnlyAccess", "ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "DatabaseAdministrator", "AmazonRedshiftFullAccess", "CloudWatchReadOnlyAccess", "SupportUser", "AWSLambdaReadOnlyAccess", "AWSShieldDRTAccessPolicy", "ViewOnlyAccess"], "cloudwatch:get*": ["AWSElasticBeanstalkReadOnlyAccess", "AmazonRedshiftReadOnlyAccess", "ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "DatabaseAdministrator", "AmazonRedshiftFullAccess", "CloudWatchReadOnlyAccess", "SupportUser", "AWSLambdaReadOnlyAccess", "AWSShieldDRTAccessPolicy", "ViewOnlyAccess"], "s3:get*": ["AWSElasticBeanstalkReadOnlyAccess", "AmazonElasticTranscoderRole", "AmazonS3ReadOnlyAccess", "DataScientist", "ReadOnlyAccess", "AWSElasticBeanstalkWebTier", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonDynamoDBFullAccesswithDataPipeline", "DatabaseAdministrator", "AmazonElasticMapReduceRole", "AmazonMacieServiceRole", "AWSElasticBeanstalkRoleCore", "AWSLambdaReadOnlyAccess", "AWSElasticBeanstalkWorkerTier", "AWSDataPipelineRole"], "s3:list*": ["AWSElasticBeanstalkReadOnlyAccess", "AWSDataPipeline_PowerUser", "AmazonS3ReadOnlyAccess", "DataScientist", "ReadOnlyAccess", "AWSElasticBeanstalkWebTier", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonDynamoDBFullAccesswithDataPipeline", "DatabaseAdministrator", "AmazonElasticMapReduceRole", "AWSDataPipeline_FullAccess", "SupportUser", "AmazonMacieServiceRole", "AWSLambdaReadOnlyAccess", "AWSElasticBeanstalkWorkerTier", "AWSDataPipelineRole"], "sns:get*": ["AWSElasticBeanstalkReadOnlyAccess", "DataScientist", "AmazonRedshiftReadOnlyAccess", "ReadOnlyAccess", "DatabaseAdministrator", "AmazonRedshiftFullAccess", "CloudWatchReadOnlyAccess", "SupportUser"], "sns:list*": ["AWSElasticBeanstalkReadOnlyAccess", "DataScientist", "AmazonRedshiftReadOnlyAccess", "ReadOnlyAccess", "DatabaseAdministrator", "AmazonRedshiftFullAccess", "CloudWatchReadOnlyAccess", "SupportUser", "AmazonSNSReadOnlyAccess", "AWSElasticBeanstalkRoleCore", "ViewOnlyAccess"], "cloudformation:describe*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "SupportUser", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSCloudFormationReadOnlyAccess"], "cloudformation:get*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "SupportUser", "AWSCloudFormationReadOnlyAccess"], "cloudformation:validate*": ["AWSElasticBeanstalkReadOnlyAccess"], "cloudformation:estimate*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess"], "rds:describe*": ["AWSElasticBeanstalkReadOnlyAccess", "AWSQuickSightDescribeRDS", "ReadOnlyAccess", "AmazonRDSReadOnlyAccess", "AmazonEC2RoleforDataPipelineRole", "SupportUser", "AmazonElasticMapReduceforEC2Role", "SecurityAudit", "AWSElasticBeanstalkRoleCore", "ViewOnlyAccess", "SystemAdministrator"], "sqs:get*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess"], "sqs:list*": ["AWSElasticBeanstalkReadOnlyAccess", "ReadOnlyAccess"], "secretsmanager:*": ["SecretsManagerReadWrite"], "cloudformation:createchangeset": ["ServerMigration_ServiceRole", "AWSServiceCatalogAdminFullAccess", "AWSServiceRoleForSMS", "SecretsManagerReadWrite", "AWSCodeStarServiceRole", "AWSElasticBeanstalkMaintenance", "AWSThinkboxAWSPortalAdminPolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:describechangeset": ["ServerMigration_ServiceRole", "AWSServiceCatalogAdminFullAccess", "AWSServiceRoleForSMS", "SecretsManagerReadWrite", "AWSCodeStarServiceRole", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSElasticBeanstalkMaintenance", "AWSSupportServiceRolePolicy", "AWSLambdaReadOnlyAccess", "AWSThinkboxAWSPortalAdminPolicy", "AWSServiceCatalogEndUserFullAccess", "AWSLambdaFullAccess"], "cloudformation:executechangeset": ["ServerMigration_ServiceRole", "AWSServiceCatalogAdminFullAccess", "AWSServiceRoleForSMS", "SecretsManagerReadWrite", "AWSCodeStarServiceRole", "AWSElasticBeanstalkMaintenance", "AWSThinkboxAWSPortalAdminPolicy", "AWSServiceCatalogEndUserFullAccess"], "kms:describekey": ["AmazonSageMakerFullAccess", "AWS_Config_Role", "AWSServiceRoleForImageBuilder", "AWSSupportServiceRolePolicy", "AWSDataExchangeSubscriberFullAccess", "AmazonDocDBConsoleFullAccess", "AmazonWorkSpacesAdmin", "AWSDataExchangeProviderFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonFSxConsoleReadOnlyAccess", "AmazonAppFlowFullAccess", "AlexaForBusinessFullAccess", "AmazonMSKReadOnlyAccess", "AmazonDynamoDBFullAccess", "AWSGlueConsoleFullAccess", "AmazonDynamoDBReadOnlyAccess", "AmazonElasticFileSystemFullAccess", "SecretsManagerReadWrite", "AWSBackupFullAccess", "AmazonMSKFullAccess", "AmazonManagedBlockchainConsoleFullAccess", "AmazonWorkMailFullAccess", "AWSDataExchangeFullAccess", "AmazonConnectFullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "AWSBackupServiceRolePolicyForBackup", "AmazonEKSClusterPolicy", "AmazonKendraFullAccess", "AlexaForBusinessLifesizeDelegatedAccessPolicy", "AWSBackupServiceRolePolicyForRestores", "AWSConfigRole", "AmazonLexFullAccess", "AmazonElasticFileSystemServiceRolePolicy"], "kms:listaliases": ["AmazonSageMakerFullAccess", "AWSCloudTrailFullAccess", "AWSSupportServiceRolePolicy", "AWSDataExchangeSubscriberFullAccess", "AmazonDocDBConsoleFullAccess", "AWSCloudTrailReadOnlyAccess", "AmazonWorkSpacesAdmin", "AWSDataExchangeProviderFullAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonAppFlowFullAccess", "AWSLambdaReadOnlyAccess", "AmazonDynamoDBFullAccess", "AWSGlueConsoleFullAccess", "NeptuneFullAccess", "AmazonDynamoDBReadOnlyAccess", "AmazonElasticFileSystemFullAccess", "SecretsManagerReadWrite", "AmazonElasticFileSystemReadOnlyAccess", "AWSBackupFullAccess", "AmazonManagedBlockchainConsoleFullAccess", "AmazonWorkMailFullAccess", "AWSDataExchangeFullAccess", "AmazonConnectFullAccess", "AmazonLexFullAccess", "AmazonFSxConsoleFullAccess", "AmazonKendraFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "AWSLambdaFullAccess"], "kms:listkeys": ["AWSCloudTrailFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSDataExchangeSubscriberFullAccess", "AmazonDocDBConsoleFullAccess", "ViewOnlyAccess", "AmazonWorkSpacesAdmin", "AWSDataExchangeProviderFullAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AmazonAppFlowFullAccess", "DatabaseAdministrator", "NeptuneFullAccess", "SecretsManagerReadWrite", "AWSBackupFullAccess", "AWSDataExchangeFullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "AmazonKendraFullAccess", "AWSConfigRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "lambda:listfunctions": ["AWSCodeCommitReadOnly", "AWSStepFunctionsConsoleFullAccess", "AmazonSageMakerFullAccess", "AWSCloudTrailFullAccess", "AWS_Config_Role", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AWSCloudTrailReadOnlyAccess", "AWSMobileHub_ReadOnly", "AmazonCognitoPowerUser", "AWSCodeCommitFullAccess", "DatabaseAdministrator", "AmazonDynamoDBFullAccess", "AmazonDynamoDBReadOnlyAccess", "CloudWatchAutomaticDashboardsAccess", "SecretsManagerReadWrite", "AWSDeepLensServiceRolePolicy", "AmazonWorkMailFullAccess", "AWSMobileHub_FullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSCodePipelineReadOnlyAccess", "AmazonWorkMailReadOnlyAccess", "AWSConfigRole", "AmazonLexFullAccess"], "rds:describedbclusters": ["AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AWSGlueConsoleFullAccess", "NeptuneFullAccess", "CloudWatchAutomaticDashboardsAccess", "SecretsManagerReadWrite", "AWSBackupFullAccess", "AWSApplicationAutoscalingRDSClusterPolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSBackupServiceRolePolicyForBackup", "AWSBackupServiceRolePolicyForRestores", "AWSConfigRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "rds:describedbinstances": ["AWSDataPipeline_PowerUser", "AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSDataPipelineRole", "AWSGlueConsoleFullAccess", "NeptuneFullAccess", "CloudWatchAutomaticDashboardsAccess", "AWSElasticBeanstalkService", "SecretsManagerReadWrite", "AWSBackupFullAccess", "AWSApplicationAutoscalingRDSClusterPolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSBackupServiceRolePolicyForBackup", "AWSResourceGroupsReadOnlyAccess", "AWSDataPipeline_FullAccess", "AWSBackupServiceRolePolicyForRestores", "AWSConfigRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "redshift:describeclusters": ["AWSDataPipeline_PowerUser", "AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "SecretsManagerReadWrite", "AWSResourceGroupsReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSGlueConsoleFullAccess", "AWS_Config_Role", "AWSDataPipeline_FullAccess", "AmazonEC2RoleforDataPipelineRole", "AmazonRedshiftQueryEditor", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSDataPipelineRole", "AWSConfigServiceRolePolicy"], "tag:getresources": ["AWSBackupOperatorAccess", "AWSCodeDeployRole", "AmazonRedshiftFullAccess", "AWSLambdaFullAccess", "ResourceGroupsandTagEditorReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSLambdaReadOnlyAccess", "AmazonDynamoDBFullAccess", "AmazonRDSDataFullAccess", "AmazonSSMMaintenanceWindowRole", "AWSGlueConsoleFullAccess", "AmazonDynamoDBReadOnlyAccess", "CloudWatchAutomaticDashboardsAccess", "AmazonSSMPatchAssociation", "SecretsManagerReadWrite", "AWSBackupFullAccess", "SecurityAudit", "AWSBackupServiceLinkedRolePolicyForBackup", "AWSIoTSiteWiseConsoleFullAccess", "ResourceGroupsandTagEditorFullAccess", "AWSBackupServiceRolePolicyForBackup", "AWSConfigUserAccess", "AmazonSSMServiceRolePolicy", "AWSBackupServiceLinkedRolePolicyForBackupTest", "AmazonElasticFileSystemServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "lambda:addpermission": ["SecretsManagerReadWrite", "AmazonLexFullAccess", "CloudWatchSyntheticsFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "lambda:createfunction": ["AWSDeepRacerServiceRolePolicy", "AWSLambdaReplicator", "AWSDeepRacerCloudFormationAccessPolicy", "AWSRoboMakerServiceRolePolicy", "CloudWatchSyntheticsFullAccess", "SecretsManagerReadWrite", "AmazonLaunchWizard_Fullaccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "DatabaseAdministrator", "AWSDeepLensServiceRolePolicy", "AmazonDynamoDBFullAccess", "AWSCompromisedKeyQuarantine", "AWSRoboMakerServicePolicy"], "lambda:getfunction": ["AWSDeepRacerServiceRolePolicy", "AWS_ConfigRole", "CloudWatchAutomaticDashboardsAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AWSRoboMakerServiceRolePolicy", "SecretsManagerReadWrite", "AmazonLaunchWizard_Fullaccess", "AWSRoboMakerServicePolicy", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWS_Config_Role", "AWSDeepLensServiceRolePolicy", "AWSElasticBeanstalkServiceRolePolicy", "AWSGreengrassResourceAccessRolePolicy", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "lambda:invokefunction": ["AWSDeepRacerServiceRolePolicy", "AmazonSSMAutomationRole", "AmazonSageMakerFullAccess", "DataScientist", "AWSLambdaRole", "AmazonSageMakerGroundTruthExecution", "ClientVPNServiceConnectionsRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AmazonSSMMaintenanceWindowRole", "SecretsManagerReadWrite", "AWSLambdaInvocation-DynamoDB", "AWSCodeDeployRoleForLambda", "AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForECSLimited", "AWSCodeDeployRoleForCloudFormation", "AWSCodeDeployRoleForLambdaLimited", "AmazonSSMServiceRolePolicy", "SystemAdministrator"], "lambda:updatefunctionconfiguration": ["CloudWatchSyntheticsFullAccess", "AWSRoboMakerServiceRolePolicy", "SecretsManagerReadWrite", "AWSDeepLensServiceRolePolicy", "AWSRoboMakerServicePolicy"], "serverlessrepo:createcloudformationchangeset": ["SecretsManagerReadWrite"], "serverlessrepo:getapplication": ["SecretsManagerReadWrite"], "rds:describeaccountattributes": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "ServiceQuotasReadOnlyAccess", "ServiceQuotasFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describecertificates": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describedbclusterparametergroups": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupOperatorAccess", "AWSBackupFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describedbclusterparameters": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describedbclustersnapshotattributes": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWS_ConfigRole", "AmazonDocDBConsoleFullAccess", "AWS_Config_Role", "AWSConfigRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "AWSConfigServiceRolePolicy"], "rds:describedbclustersnapshots": ["NeptuneReadOnlyAccess", "NeptuneFullAccess", "AmazonDocDBFullAccess", "AWS_ConfigRole", "AmazonDocDBConsoleFullAccess", "AWSBackupOperatorAccess", "AWSBackupServiceRolePolicyForBackup", "AWSBackupFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "AWSConfigServiceRolePolicy"], "rds:describedbengineversions": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupOperatorAccess", "AWSElasticBeanstalkService", "AWSTrustedAdvisorServiceRolePolicy", "AWSBackupFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describedblogfiles": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describedbparametergroups": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSBackupFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describedbparameters": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describedbsubnetgroups": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWS_ConfigRole", "AmazonDocDBConsoleFullAccess", "AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSGlueConsoleFullAccess", "AWSBackupFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "AWSConfigServiceRolePolicy"], "rds:describeeventcategories": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describeeventsubscriptions": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWS_ConfigRole", "AmazonDocDBConsoleFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "AWSConfigServiceRolePolicy"], "rds:describeevents": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describeorderabledbinstanceoptions": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupOperatorAccess", "AWSElasticBeanstalkService", "AWSTrustedAdvisorServiceRolePolicy", "AWSBackupFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:describependingmaintenanceactions": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:downloaddblogfileportion": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "SecurityAudit", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "rds:listtagsforresource": ["AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWS_Config_Role", "AmazonRDSReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupFullAccess", "SecurityAudit", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSBackupServiceRolePolicyForBackup", "AWSResourceGroupsReadOnlyAccess", "AWSBackupServiceRolePolicyForRestores", "AWSConfigRole", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "SystemAdministrator"], "cloudwatch:listmetrics": ["AmazonSageMakerFullAccess", "AWSWAFConsoleFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AutoScalingConsoleFullAccess", "AmazonEC2ReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneReadOnlyAccess", "TranslateReadOnly", "AmazonDynamoDBFullAccesswithDataPipeline", "AmazonKinesisAnalyticsReadOnly", "AmazonPersonalizeFullAccess", "AmazonDynamoDBFullAccess", "TranslateFullAccess", "NeptuneFullAccess", "AmazonDynamoDBReadOnlyAccess", "AWSWAFConsoleReadOnlyAccess", "AmazonKinesisAnalyticsFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess", "AutoScalingConsoleReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "kms:listretirablegrants": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "kms:listkeypolicies": ["NeptuneReadOnlyAccess", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AccessAnalyzerServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonDocDBReadOnlyAccess"], "support:*": ["AWSSupportAccess", "SupportUser", "ServiceQuotasServiceRolePolicy"], "acm:list*": ["ReadOnlyAccess", "SupportUser", "AWSElasticBeanstalkRoleCore", "SecurityAudit", "SystemAdministrator"], "apigateway:get": ["CloudWatchAutomaticDashboardsAccess", "AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "AmazonRoute53FullAccess", "AWSWAFConsoleFullAccess", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSMobileHub_FullAccess"], "appstream:get*": ["ReadOnlyAccess", "SupportUser", "AmazonAppStreamReadOnlyAccess"], "aws-marketplace:viewsubscriptions": ["AmazonSageMakerFullAccess", "AWSMarketplaceRead-only", "AWSDataExchangeReadOnly", "AWSMarketplaceManageSubscriptions", "AWSDataExchangeFullAccess", "SupportUser", "AWSDataExchangeSubscriberFullAccess", "ViewOnlyAccess", "AmazonSageMakerReadOnly"], "cloudformation:estimatetemplatecost": ["SupportUser", "AWSThinkboxAWSPortalAdminPolicy", "AWSSupportServiceRolePolicy", "AWSCloudFormationReadOnlyAccess"], "cloudfront:get*": ["CloudFrontReadOnlyAccess", "ReadOnlyAccess", "SupportUser", "SecurityAudit"], "cloudfront:list*": ["CloudFrontReadOnlyAccess", "ReadOnlyAccess", "SupportUser", "SecurityAudit", "AWSShieldDRTAccessPolicy", "ViewOnlyAccess"], "cloudsearch:describe*": ["ReadOnlyAccess", "CloudSearchReadOnlyAccess", "SupportUser"], "cloudsearch:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser", "CloudSearchReadOnlyAccess"], "cloudtrail:describetrails": ["AWSLakeFormationDataAdmin", "AWSCloudTrailReadOnlyAccess", "AWSSecurityHubServiceRolePolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSControlTowerServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AWSConfigUserAccess", "AWSCodePipelineFullAccess", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "ViewOnlyAccess", "SystemAdministrator", "AmazonMacieSetupRole"], "cloudtrail:gettrailstatus": ["AWSCloudTrailReadOnlyAccess", "AWSSecurityHubServiceRolePolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSControlTowerServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AWSConfigUserAccess", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "SystemAdministrator", "AmazonMacieSetupRole"], "cloudtrail:lookupevents": ["AWSLakeFormationDataAdmin", "AmazonEC2ContainerRegistryFullAccess", "AWSCloudTrailReadOnlyAccess", "ReadOnlyAccess", "AWSConfigUserAccess", "AmazonMacieServiceRolePolicy", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "ViewOnlyAccess", "SystemAdministrator", "AmazonMacieSetupRole"], "cloudtrail:listtags": ["AWSCloudTrailReadOnlyAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "SystemAdministrator", "AmazonMacieSetupRole"], "cloudtrail:listpublickeys": ["AWSCloudTrailReadOnlyAccess", "SupportUser", "SystemAdministrator", "AWSSupportServiceRolePolicy"], "codecommit:batchgetrepositories": ["AmazonSageMakerFullAccess", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "SystemAdministrator"], "codecommit:get*": ["AWSCodeCommitReadOnly", "ReadOnlyAccess", "AWSCodeCommitPowerUser", "SupportUser", "SystemAdministrator"], "codecommit:list*": ["AWSCodeCommitReadOnly", "AmazonSageMakerFullAccess", "ReadOnlyAccess", "AWSCodeCommitPowerUser", "SupportUser", "SecurityAudit", "ViewOnlyAccess", "SystemAdministrator"], "codedeploy:batch*": ["AWSCodeDeployDeployerAccess", "AWSCodeDeployReadOnlyAccess", "SupportUser", "SecurityAudit"], "codedeploy:get*": ["ReadOnlyAccess", "AWSCodeDeployReadOnlyAccess", "AWSCodeDeployDeployerAccess", "SupportUser", "SecurityAudit", "ViewOnlyAccess"], "codedeploy:list*": ["ReadOnlyAccess", "AWSCodeDeployReadOnlyAccess", "AWSCodeDeployDeployerAccess", "SupportUser", "SecurityAudit", "ViewOnlyAccess"], "codepipeline:acknowledgejob": ["AWSCodePipelineCustomActionAccess", "SupportUser"], "codepipeline:acknowledgethirdpartyjob": ["SupportUser"], "codepipeline:listactiontypes": ["AWSCodePipeline_ReadOnlyAccess", "SupportUser", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy"], "codepipeline:listpipelines": ["AWS_ConfigRole", "AWSCodePipelineReadOnlyAccess", "AWS_Config_Role", "AWSCodePipeline_ReadOnlyAccess", "SupportUser", "SecurityAudit", "AWSSupportServiceRolePolicy", "AWSCodePipelineApproverAccess", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "codepipeline:pollforjobs": ["AWSCodePipelineCustomActionAccess", "SupportUser"], "codepipeline:pollforthirdpartyjobs": ["SupportUser"], "codepipeline:getpipelinestate": ["AWS_ConfigRole", "AWSCodePipelineReadOnlyAccess", "AWS_Config_Role", "AWSCodePipeline_ReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy", "AWSCodePipelineApproverAccess", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "codepipeline:getpipeline": ["AWS_ConfigRole", "AWSCodePipelineReadOnlyAccess", "AWS_Config_Role", "AWSCodePipeline_ReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy", "AWSCodePipelineApproverAccess", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "cognito-identity:list*": ["ReadOnlyAccess", "AmazonCognitoReadOnly", "SupportUser"], "cognito-identity:lookupdeveloperidentity": ["SupportUser", "AmazonCognitoDeveloperAuthenticatedIdentities"], "cognito-identity:describe*": ["ReadOnlyAccess", "AmazonCognitoReadOnly", "SupportUser"], "cognito-idp:describe*": ["ReadOnlyAccess", "AmazonCognitoReadOnly", "SupportUser", "AmazonCognitoIdpServiceRolePolicy"], "cognito-idp:list*": ["AmazonSageMakerFullAccess", "ReadOnlyAccess", "AmazonCognitoReadOnly", "SupportUser", "ViewOnlyAccess"], "cognito-sync:describe*": ["ReadOnlyAccess", "AmazonCognitoReadOnly", "SupportUser", "SecurityAudit"], "cognito-sync:getbulkpublishdetails": ["SupportUser"], "cognito-sync:getcognitoevents": ["AWSLambdaReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy", "AWSLambdaFullAccess"], "cognito-sync:getidentitypoolconfiguration": ["SupportUser", "AWSSupportServiceRolePolicy"], "cognito-sync:list*": ["ReadOnlyAccess", "AmazonCognitoReadOnly", "SupportUser", "SecurityAudit"], "config:describeconfigurationrecorders": ["AWSSecurityHubServiceRolePolicy", "AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "SupportUser", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "config:describeconfigurationrecorderstatus": ["AWSSecurityHubServiceRolePolicy", "AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "SupportUser", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "config:describeconfigruleevaluationstatus": ["AWSSecurityHubServiceRolePolicy", "SupportUser", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy"], "config:describeconfigrules": ["AWSSecurityHubServiceRolePolicy", "AWSCodeStarServiceRole", "SupportUser", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "ConfigConformsServiceRolePolicy"], "config:describedeliverychannels": ["SupportUser", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy"], "config:describedeliverychannelstatus": ["SupportUser", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy"], "config:getresourceconfighistory": ["SupportUser", "AWSSupportServiceRolePolicy"], "config:listdiscoveredresources": ["SupportUser", "AWSSupportServiceRolePolicy"], "datapipeline:describeobjects": ["AmazonDynamoDBReadOnlyAccess", "DatabaseAdministrator", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonDynamoDBFullAccess", "AWSDataPipelineRole"], "datapipeline:describepipelines": ["AmazonDynamoDBReadOnlyAccess", "DatabaseAdministrator", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonDynamoDBFullAccess", "ViewOnlyAccess"], "datapipeline:getpipelinedefinition": ["AmazonDynamoDBReadOnlyAccess", "DataScientist", "DatabaseAdministrator", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonDynamoDBFullAccess"], "datapipeline:listpipelines": ["AmazonDynamoDBReadOnlyAccess", "DataScientist", "DatabaseAdministrator", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonDynamoDBFullAccess", "ViewOnlyAccess"], "datapipeline:queryobjects": ["AmazonDynamoDBReadOnlyAccess", "DataScientist", "ReadOnlyAccess", "DatabaseAdministrator", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonDynamoDBFullAccess"], "datapipeline:reporttaskprogress": ["SupportUser"], "datapipeline:reporttaskrunnerheartbeat": ["SupportUser"], "devicefarm:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser"], "devicefarm:get*": ["ReadOnlyAccess", "SupportUser"], "discovery:describe*": ["ReadOnlyAccess", "SupportUser"], "discovery:listconfigurations": ["SupportUser", "MigrationHubServiceRolePolicy", "AWSMigrationHubDiscoveryAccess"], "dms:describe*": ["ReadOnlyAccess", "SupportUser", "SecurityAudit"], "dms:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser"], "ds:describesnapshots": ["SupportUser", "AWSSupportServiceRolePolicy"], "ds:getsnapshotlimits": ["SupportUser", "AWSSupportServiceRolePolicy"], "ds:listauthorizedapplications": ["AmazonWorkMailFullAccess", "SupportUser", "AmazonLaunchWizard_Fullaccess"], "dynamodb:describelimits": ["AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "DynamoDBReplicationServiceRolePolicy", "ServiceQuotasReadOnlyAccess", "AWS_Config_Role", "SupportUser", "ServiceQuotasFullAccess", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "dynamodb:describetable": ["AWSDataPipeline_PowerUser", "AWSTrustedAdvisorServiceRolePolicy", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWS_Config_Role", "SupportUser", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AWSMobileHub_ReadOnly", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSLambdaReadOnlyAccess", "AWSDataPipelineRole", "CloudWatchAutomaticDashboardsAccess", "SecurityAudit", "AWSMobileHub_FullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "DynamoDBReplicationServiceRolePolicy", "AWSBackupServiceRolePolicyForBackup", "AWSDataPipeline_FullAccess", "AWSApplicationAutoscalingDynamoDBTablePolicy", "AWSBackupServiceRolePolicyForRestores", "AWSConfigRole", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "dynamodb:listtables": ["AWS_ConfigRole", "CloudWatchAutomaticDashboardsAccess", "AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSGlueConsoleFullAccess", "AWS_Config_Role", "AWSBackupFullAccess", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSLambdaReadOnlyAccess", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "ec2:describehosts": ["AWSLicenseManagerServiceRolePolicy", "SupportUser", "AWSSupportServiceRolePolicy"], "ec2:describeidentityidformat": ["ViewOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy"], "ec2:describeidformat": ["ViewOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy"], "ec2:describeinstanceattribute": ["AutoScalingConsoleFullAccess", "AWSElasticBeanstalkService", "AWSBackupServiceRolePolicyForBackup", "AmazonEMRCleanupPolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSMigrationHubDiscoveryAccess", "AWSServiceRoleForImageBuilder", "AmazonSSMServiceRolePolicy", "SupportUser", "AWSSupportServiceRolePolicy", "AutoScalingFullAccess", "MigrationHubServiceRolePolicy", "AWSConnector", "AWSBatchServiceRole"], "ec2:describenatgateways": ["AmazonInspectorServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonVPCReadOnlyAccess", "NetworkAdministrator", "SupportUser", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "ViewOnlyAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "NeptuneConsoleFullAccess"], "ec2:describereservedinstancesmodifications": ["SupportUser", "AWSSupportServiceRolePolicy"], "ecr:getrepositorypolicy": ["AmazonEC2ContainerRegistryReadOnly", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonEC2ContainerRegistryPowerUser"], "ecr:batchchecklayeravailability": ["AmazonECSTaskExecutionRolePolicy", "AmazonSageMakerFullAccess", "AmazonEC2ContainerRegistryReadOnly", "AmazonEC2ContainerServiceforEC2Role", "SupportUser", "AWSSupportServiceRolePolicy", "AmazonEC2ContainerRegistryPowerUser", "AmazonEKSFargatePodExecutionRolePolicy"], "ecr:describerepositories": ["AWSCodeBuildAdminAccess", "AmazonEC2ContainerRegistryReadOnly", "AWSCodePipelineFullAccess", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonEC2ContainerRegistryPowerUser", "ViewOnlyAccess"], "ecr:listimages": ["AWSCodeBuildAdminAccess", "AmazonEC2ContainerRegistryReadOnly", "AWSCodePipelineFullAccess", "SupportUser", "AWSSupportServiceRolePolicy", "AmazonEC2ContainerRegistryPowerUser", "ViewOnlyAccess"], "ecs:describe*": ["ReadOnlyAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "SupportUser", "AWSElasticBeanstalkRoleCore", "SecurityAudit", "ViewOnlyAccess", "AWSBatchFullAccess"], "ecs:list*": ["ReadOnlyAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "SupportUser", "AWSElasticBeanstalkRoleCore", "SecurityAudit", "ViewOnlyAccess", "AWSBatchFullAccess"], "elasticache:describe*": ["AmazonElastiCacheReadOnlyAccess", "ReadOnlyAccess", "SupportUser", "SecurityAudit", "ViewOnlyAccess"], "elasticache:list*": ["ReadOnlyAccess", "SupportUser"], "elasticbeanstalk:validateconfigurationsettings": ["SupportUser", "AWSSupportServiceRolePolicy"], "elasticfilesystem:describe*": ["ReadOnlyAccess", "SupportUser"], "elasticmapreduce:describe*": ["AmazonElasticMapReduceReadOnlyAccess", "ReadOnlyAccess", "AmazonEC2RoleforDataPipelineRole", "SupportUser", "AmazonElasticMapReduceforEC2Role", "SecurityAudit"], "elasticmapreduce:list*": ["AmazonElasticMapReduceReadOnlyAccess", "ReadOnlyAccess", "ViewOnlyAccess", "SupportUser"], "elastictranscoder:readjob": ["SupportUser"], "elasticfilesystem:describefilesystems": ["AWSDataSyncFullAccess", "AmazonSageMakerFullAccess", "AWSBackupOperatorAccess", "AWS_Config_Role", "AmazonECS_FullAccess", "SupportUser", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AWSCodeBuildAdminAccess", "AmazonLaunchWizard_Fullaccess", "AmazonElasticFileSystemFullAccess", "CloudWatchAutomaticDashboardsAccess", "AmazonElasticFileSystemReadOnlyAccess", "AWSBackupFullAccess", "SecurityAudit", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDataSyncReadOnlyAccess", "AWSBackupServiceRolePolicyForRestores", "AWSConfigRole"], "es:describe*": ["ReadOnlyAccess", "SupportUser", "AmazonESReadOnlyAccess", "SecurityAudit"], "es:list*": ["ReadOnlyAccess", "SupportUser", "AmazonESReadOnlyAccess"], "es:eshttpget": ["ReadOnlyAccess", "SupportUser"], "es:eshttphead": ["ReadOnlyAccess", "SupportUser"], "events:describerule": ["AWSCodeCommitReadOnly", "AWSCodeStarServiceRole", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonECS_FullAccess", "SupportUser", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AmazonInspectorFullAccess", "AWSCodeStarNotificationsServiceRolePolicy", "AmazonEventBridgeReadOnlyAccess", "AmazonEC2ContainerServiceFullAccess", "CloudWatchEventsReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AmazonInspectorReadOnlyAccess", "AWSCodeBuildReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "events:list*": ["AWSLambdaReadOnlyAccess", "ReadOnlyAccess", "SupportUser", "SecurityAudit"], "events:testeventpattern": ["SupportUser", "CloudWatchEventsReadOnlyAccess", "AWSSupportServiceRolePolicy", "AmazonEventBridgeReadOnlyAccess"], "firehose:describe*": ["ReadOnlyAccess", "AmazonKinesisFirehoseReadOnlyAccess", "SupportUser", "SecurityAudit"], "firehose:list*": ["ReadOnlyAccess", "SupportUser", "AmazonKinesisFirehoseReadOnlyAccess", "SecurityAudit", "ViewOnlyAccess"], "gamelift:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser"], "gamelift:describe*": ["ReadOnlyAccess", "SupportUser"], "glacier:get*": ["ReadOnlyAccess", "SupportUser"], "glacier:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser"], "iam:generatecredentialreport": ["AWSSecurityHubServiceRolePolicy", "AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "AWS_Config_Role", "SupportUser", "IAMAccessAdvisorReadOnly", "SecurityAudit", "AWSConfigRole", "IAMReadOnlyAccess", "AWSConfigServiceRolePolicy"], "iam:generateservicelastaccesseddetails": ["AWSIoTDeviceDefenderAudit", "SupportUser", "IAMAccessAdvisorReadOnly", "SecurityAudit", "IAMReadOnlyAccess"], "iam:get*": ["ReadOnlyAccess", "SupportUser", "IAMReadOnlyAccess", "SecurityAudit"], "importexport:getstatus": ["AWSImportExportReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy"], "importexport:listjobs": ["AWSImportExportReadOnlyAccess", "ViewOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy"], "inspector:describe*": ["ReadOnlyAccess", "SupportUser", "AmazonInspectorReadOnlyAccess", "SecurityAudit"], "inspector:list*": ["ReadOnlyAccess", "AmazonInspectorReadOnlyAccess", "SupportUser", "SecurityAudit", "ViewOnlyAccess"], "iot:describe*": ["ReadOnlyAccess", "SupportUser", "SecurityAudit"], "iot:get*": ["ReadOnlyAccess", "SupportUser"], "iot:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser", "SecurityAudit"], "kinesisanalytics:describeapplication": ["SupportUser", "AWSSupportServiceRolePolicy"], "kinesisanalytics:discoverinputschema": ["SupportUser"], "kinesisanalytics:getapplicationstate": ["SupportUser"], "kinesisanalytics:listapplications": ["ViewOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit"], "kinesis:describe*": ["AmazonKinesisReadOnlyAccess", "ReadOnlyAccess", "SupportUser"], "kinesis:get*": ["AmazonKinesisReadOnlyAccess", "ReadOnlyAccess", "SupportUser"], "kinesis:list*": ["AmazonKinesisReadOnlyAccess", "ReadOnlyAccess", "SupportUser"], "kms:describe*": ["AWSKeyManagementServicePowerUser", "ReadOnlyAccess", "SupportUser", "SecurityAudit", "SystemAdministrator"], "kms:get*": ["AWSKeyManagementServicePowerUser", "ReadOnlyAccess", "SupportUser", "SecurityAudit", "SystemAdministrator"], "kms:list*": ["AWSKeyManagementServicePowerUser", "DataScientist", "ReadOnlyAccess", "SupportUser", "SecurityAudit", "AmazonElasticMapReduceFullAccess", "SystemAdministrator"], "lambda:list*": ["DataScientist", "ReadOnlyAccess", "SupportUser", "SecurityAudit", "AWSLambdaReadOnlyAccess", "ViewOnlyAccess", "SystemAdministrator"], "lambda:get*": ["DataScientist", "ReadOnlyAccess", "SupportUser", "AWSLambdaReadOnlyAccess", "SystemAdministrator"], "logs:describe*": ["AmazonSageMakerFullAccess", "ReadOnlyAccess", "CloudWatchReadOnlyAccess", "SupportUser", "CloudWatchLogsReadOnlyAccess", "AWSElasticBeanstalkRoleCore", "SecurityAudit", "ViewOnlyAccess", "AWSBatchFullAccess", "AmazonBraketFullAccess"], "logs:testmetricfilter": ["ReadOnlyAccess", "CloudWatchReadOnlyAccess", "SupportUser", "CloudWatchLogsReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSBatchFullAccess", "AmazonBraketFullAccess"], "machinelearning:describe*": ["ReadOnlyAccess", "AmazonMachineLearningCreateOnlyAccess", "SupportUser", "AmazonMachineLearningReadOnlyAccess", "ViewOnlyAccess"], "machinelearning:get*": ["ReadOnlyAccess", "SupportUser", "AmazonMachineLearningReadOnlyAccess", "AmazonMachineLearningCreateOnlyAccess"], "mobilehub:getproject": ["SupportUser", "AWSMobileHub_ReadOnly"], "mobilehub:list*": ["ReadOnlyAccess", "SupportUser"], "mobilehub:validateproject": ["SupportUser", "AWSMobileHub_ReadOnly"], "mobilehub:verifyservicerole": ["SupportUser", "AWSMobileHub_ReadOnly"], "opsworks:describe*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser"], "redshift:describe*": ["AmazonRedshiftReadOnlyAccess", "ReadOnlyAccess", "AWSQuickSightDescribeRedshift", "SupportUser", "SecurityAudit"], "route53:get*": ["ReadOnlyAccess", "AmazonECSServiceRolePolicy", "SupportUser", "AmazonRoute53ReadOnlyAccess", "SecurityAudit", "ViewOnlyAccess"], "route53:list*": ["CloudFrontReadOnlyAccess", "ReadOnlyAccess", "AmazonECSServiceRolePolicy", "SupportUser", "AmazonRoute53ReadOnlyAccess", "SecurityAudit", "AWSShieldDRTAccessPolicy", "ViewOnlyAccess"], "route53domains:checkdomainavailability": ["AmazonWorkMailFullAccess", "SupportUser", "AWSSupportServiceRolePolicy"], "route53domains:getdomaindetail": ["SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit"], "route53domains:getoperationdetail": ["SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit"], "route53domains:list*": ["AmazonRoute53DomainsReadOnlyAccess", "ViewOnlyAccess", "SupportUser", "ReadOnlyAccess"], "sdb:getattributes": ["SupportUser"], "sdb:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser"], "sdb:select*": ["ReadOnlyAccess", "SupportUser", "AWSDataPipelineRole"], "servicecatalog:searchproducts": ["SupportUser", "AWSServiceCatalogEndUserFullAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess"], "servicecatalog:describeproduct": ["SupportUser", "AWSServiceCatalogEndUserFullAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess"], "servicecatalog:describeproductview": ["SupportUser", "AWSServiceCatalogEndUserFullAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess"], "servicecatalog:listlaunchpaths": ["SupportUser", "AWSServiceCatalogEndUserFullAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess"], "servicecatalog:describeprovisioningparameters": ["SupportUser", "AWSServiceCatalogEndUserFullAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess"], "servicecatalog:listrecordhistory": ["SupportUser", "AWSServiceCatalogEndUserFullAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess"], "servicecatalog:describerecord": ["SupportUser", "AWSServiceCatalogEndUserFullAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess"], "servicecatalog:scanprovisionedproducts": ["AWSServiceCatalogAdminReadOnlyAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "SupportUser", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "ses:get*": ["ReadOnlyAccess", "AmazonWorkMailReadOnlyAccess", "SupportUser", "AmazonSESReadOnlyAccess"], "ses:list*": ["ReadOnlyAccess", "SupportUser", "AmazonSESReadOnlyAccess", "ViewOnlyAccess", "AmazonCognitoIdpEmailServiceRolePolicy"], "sqs:getqueueattributes": ["AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWS_Config_Role", "AmazonSageMakerGroundTruthExecution", "SupportUser", "AWSSupportServiceRolePolicy", "AmazonSQSReadOnlyAccess", "AmazonChimeFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSLambdaSQSQueueExecutionRole", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "CloudWatchAutomaticDashboardsAccess", "AWSElasticBeanstalkService", "AWSElasticBeanstalkEnhancedHealth", "SecurityAudit", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "AWSElasticBeanstalkServiceRolePolicy", "AWSConfigRole"], "sqs:getqueueurl": ["AutoScalingNotificationAccessRole", "CloudWatchAutomaticDashboardsAccess", "AWSElasticBeanstalkService", "AWSElasticBeanstalkEnhancedHealth", "AmazonLaunchWizard_Fullaccess", "AWSElasticBeanstalkServiceRolePolicy", "AmazonSageMakerGroundTruthExecution", "SupportUser", "AWSThinkboxAWSPortalWorkerPolicy", "AWSSupportServiceRolePolicy", "AmazonSQSReadOnlyAccess"], "sqs:listqueues": ["AWSLambdaReadOnlyAccess", "AWSConfigServiceRolePolicy", "CloudWatchAutomaticDashboardsAccess", "AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "AccessAnalyzerServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWS_Config_Role", "SupportUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonSQSReadOnlyAccess", "AWSConfigRole", "ViewOnlyAccess", "AWSLambdaFullAccess"], "ssm:list*": ["ReadOnlyAccess", "SupportUser", "AmazonSSMReadOnlyAccess"], "ssm:describe*": ["ReadOnlyAccess", "SupportUser", "AmazonSSMReadOnlyAccess", "SecurityAudit"], "storagegateway:describe*": ["AWSStorageGatewayReadOnlyAccess", "ReadOnlyAccess", "SupportUser"], "storagegateway:list*": ["AWSStorageGatewayReadOnlyAccess", "ReadOnlyAccess", "SupportUser", "SecurityAudit"], "swf:count*": ["ReadOnlyAccess", "SupportUser"], "swf:describe*": ["ReadOnlyAccess", "SupportUser"], "swf:get*": ["ReadOnlyAccess", "SupportUser"], "swf:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser"], "waf:get*": ["AWSWAFReadOnlyAccess", "AWSFMMemberReadOnlyAccess", "AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "SupportUser", "AWSFMAdminReadOnlyAccess"], "waf:list*": ["AWSWAFReadOnlyAccess", "AWSFMMemberReadOnlyAccess", "AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "SupportUser", "AWSFMAdminReadOnlyAccess", "ViewOnlyAccess"], "workspaces:describe*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser", "SecurityAudit"], "workdocs:describe*": ["ReadOnlyAccess", "SupportUser", "AmazonWorkDocsReadOnlyAccess"], "workmail:describe*": ["ReadOnlyAccess", "ViewOnlyAccess", "SupportUser", "AmazonWorkMailReadOnlyAccess"], "workmail:get*": ["ReadOnlyAccess", "AmazonWorkMailReadOnlyAccess", "SupportUser"], "acm:listcertificates": ["AWSConfigServiceRolePolicy", "CloudFrontReadOnlyAccess", "AWS_ConfigRole", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSAppMeshReadOnly", "AWSAppMeshFullAccess", "AWSVPCS2SVpnServiceRolePolicy", "AWS_Config_Role", "AWSCertificateManagerReadOnly", "CloudFrontFullAccess", "AmazonCognitoPowerUser", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSElasticBeanstalkFullAccess"], "acm:listtagsforcertificate": ["AWS_ConfigRole", "AWS_Config_Role", "AWSCertificateManagerReadOnly", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "ec2:describevpcclassiclink": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "AutoScalingConsoleFullAccess", "AWSElasticLoadBalancingServiceRolePolicy", "AWSElasticBeanstalkService", "AmazonVPCFullAccess", "AmazonVPCReadOnlyAccess", "NetworkAdministrator", "ElasticLoadBalancingFullAccess", "AWSSupportServiceRolePolicy", "AutoScalingFullAccess", "AutoScalingConsoleReadOnlyAccess", "AWSBatchServiceRole"], "cloud9:getusersettings": ["AWSCloud9User", "AWSCloud9EnvironmentMember"], "cloud9:updateusersettings": ["AWSCloud9User", "AWSCloud9EnvironmentMember"], "iam:getuser": ["AWSCloud9Administrator", "AWSServiceCatalogAdminFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSCloudTrailFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSAgentlessDiscoveryService", "ServerMigrationConnector", "AWSConnector", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSCloud9User", "AWSCloud9EnvironmentMember", "AWSConfigRole", "AWSThinkboxAWSPortalAdminPolicy", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy"], "iam:listusers": ["AWSCodeCommitReadOnly", "AWSLakeFormationDataAdmin", "AWSCloud9Administrator", "AWSCloud9User", "AWSCloud9EnvironmentMember", "AWSCodeCommitFullAccess", "AWSKeyManagementServicePowerUser", "AWSServiceCatalogAdminFullAccess", "AmazonCodeGuruProfilerFullAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSCodeCommitPowerUser", "IAMAccessAdvisorReadOnly", "AmazonCodeGuruProfilerReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSOpsWorksRole", "AWSOpsWorksFullAccess", "AWSGlueConsoleFullAccess"], "cloud9:describeenvironmentmemberships": ["AWSCloud9User", "AWSCloud9EnvironmentMember", "AWSSupportServiceRolePolicy"], "ssm:startsession": ["AWSCloud9User", "AWSCloud9Administrator", "AWSCloud9EnvironmentMember", "AWSCodeBuildAdminAccess", "AWSCloud9ServiceRolePolicy", "AWSCodeBuildDeveloperAccess"], "mediastore:get*": ["AWSElementalMediaStoreReadOnly"], "mediastore:list*": ["AWSElementalMediaStoreReadOnly"], "mediastore:describe*": ["AWSElementalMediaStoreReadOnly"], "athena:batchgetqueryexecution": ["AWSQuicksightAthenaAccess", "AWSSupportServiceRolePolicy"], "athena:cancelqueryexecution": ["AWSQuicksightAthenaAccess"], "athena:getcatalogs": ["AWSQuicksightAthenaAccess"], "athena:getexecutionengine": ["AWSQuicksightAthenaAccess"], "athena:getexecutionengines": ["AWSQuicksightAthenaAccess"], "athena:getnamespace": ["AWSQuicksightAthenaAccess"], "athena:getnamespaces": ["AWSQuicksightAthenaAccess"], "athena:getqueryexecution": ["AWSQuicksightAthenaAccess", "AWSLicenseManagerMasterAccountRolePolicy", "AWSSupportServiceRolePolicy"], "athena:getqueryexecutions": ["AWSQuicksightAthenaAccess"], "athena:getqueryresults": ["AWSQuicksightAthenaAccess", "AWSLicenseManagerMasterAccountRolePolicy"], "athena:getqueryresultsstream": ["AWSQuicksightAthenaAccess"], "athena:gettable": ["AWSQuicksightAthenaAccess"], "athena:gettables": ["AWSQuicksightAthenaAccess"], "athena:listqueryexecutions": ["AWSQuicksightAthenaAccess", "AWSSupportServiceRolePolicy"], "athena:runquery": ["AWSQuicksightAthenaAccess"], "athena:startqueryexecution": ["AWSQuicksightAthenaAccess", "AWSLicenseManagerMasterAccountRolePolicy"], "athena:stopqueryexecution": ["AWSQuicksightAthenaAccess"], "athena:listworkgroups": ["AWSQuicksightAthenaAccess", "AWSSupportServiceRolePolicy"], "athena:getworkgroup": ["AWSQuicksightAthenaAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "athena:getdatacatalog": ["AWSQuicksightAthenaAccess"], "athena:getdatabase": ["AWSQuicksightAthenaAccess"], "athena:gettablemetadata": ["AWSQuicksightAthenaAccess"], "glue:createdatabase": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:deletedatabase": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:getdatabase": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "ReadOnlyAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy", "AWSGlueServiceNotebookRole"], "glue:getdatabases": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "ReadOnlyAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy", "AWSGlueServiceNotebookRole"], "glue:updatedatabase": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:createtable": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:deletetable": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:batchdeletetable": ["AWSQuicksightAthenaAccess", "AmazonAthenaFullAccess", "AWSGlueServiceNotebookRole"], "glue:updatetable": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:gettable": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "ReadOnlyAccess", "AWSQuicksightAthenaAccess", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy", "AWSGlueServiceNotebookRole"], "glue:gettables": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "ReadOnlyAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy", "AWSGlueServiceNotebookRole"], "glue:batchcreatepartition": ["AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:createpartition": ["AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:deletepartition": ["AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:batchdeletepartition": ["AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:updatepartition": ["AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSGlueServiceNotebookRole"], "glue:getpartition": ["AmazonAthenaFullAccess", "ReadOnlyAccess", "AWSQuicksightAthenaAccess", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy", "AWSGlueServiceNotebookRole"], "glue:getpartitions": ["AWSLakeFormationDataAdmin", "AmazonAthenaFullAccess", "ReadOnlyAccess", "AWSQuicksightAthenaAccess", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy", "AWSGlueServiceNotebookRole"], "glue:batchgetpartition": ["AmazonAthenaFullAccess", "ReadOnlyAccess", "AWSQuicksightAthenaAccess", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy", "AWSGlueServiceNotebookRole"], "s3:listbucketmultipartuploads": ["AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "ServerMigrationConnector", "AWSLicenseManagerMasterAccountRolePolicy", "AWSDiscoveryContinuousExportFirehosePolicy", "AWSSupportServiceRolePolicy", "AmazonEC2RoleforSSM", "AWSConnector"], "s3:listmultipartuploadparts": ["AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "ServerMigrationConnector", "AWSLicenseManagerMasterAccountRolePolicy", "AWSOpsWorksCMInstanceProfileRole", "AmazonEC2RoleforSSM", "AWSConnector"], "s3:abortmultipartupload": ["AmazonSageMakerFullAccess", "AmazonAthenaFullAccess", "AWSQuicksightAthenaAccess", "ServerMigrationConnector", "DatabaseAdministrator", "AWSLicenseManagerMasterAccountRolePolicy", "AWSDiscoveryContinuousExportFirehosePolicy", "AmazonSageMakerGroundTruthExecution", "AWSOpsWorksCMInstanceProfileRole", "AmazonEC2RoleforSSM", "AWSConnector"], "lakeformation:getdataaccess": ["AWSQuicksightAthenaAccess", "AmazonAthenaFullAccess"], "ec2:describelaunchtemplates": ["AWSElasticBeanstalkService", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AWSSupportServiceRolePolicy", "AWSBatchFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:describespotinstancerequests": ["AutoScalingConsoleFullAccess", "AWSElasticBeanstalkService", "AWSBackupServiceRolePolicyForBackup", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AWSSupportServiceRolePolicy", "AmazonElasticMapReduceFullAccess", "AutoScalingFullAccess", "AWSBatchServiceRole"], "ec2:deletelaunchtemplate": ["AWSElasticBeanstalkService", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AmazonECS_FullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "AWSBatchServiceRole"], "ec2:modifyinstanceattribute": ["AWSServiceRoleForSMS", "DataScientist", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonLaunchWizard_Fullaccess", "AutoScalingServiceRolePolicy", "AmazonEKSClusterPolicy", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AmazonElasticMapReduceFullAccess", "AmazonLambdaRolePolicyForLaunchWizardSAP", "ServerMigrationServiceLaunchRole", "AWSThinkboxAWSPortalAdminPolicy", "AWSConnector", "AWSDataPipelineRole"], "ec2:cancelspotinstancerequests": ["DataScientist", "AutoScalingServiceRolePolicy", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AmazonElasticMapReduceFullAccess", "AWSDataPipelineRole"], "ec2:describevolumestatus": ["CloudWatchEventsServiceRolePolicy", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AWSSupportServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ec2:describevolumes": ["CloudWatchAutomaticDashboardsAccess", "CloudWatchEventsServiceRolePolicy", "AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSElasticBeanstalkCustomPlatformforEC2Role", "CloudWatchAgentServerPolicy", "AWSBackupServiceRolePolicyForBackup", "AmazonEKSClusterPolicy", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "AmazonEKSWorkerNodePolicy", "AWSResourceGroupsReadOnlyAccess", "AWSDataLifecycleManagerServiceRole", "AWSBackupFullAccess", "AWSBackupServiceRolePolicyForRestores", "AWSSupportServiceRolePolicy", "AWSImageBuilderFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ec2:detachvolume": ["AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonLaunchWizard_Fullaccess", "AmazonEKSClusterPolicy", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "SystemAdministrator", "AWSConnector"], "ec2:deletevolume": ["AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonLaunchWizard_Fullaccess", "AmazonEKSClusterPolicy", "AmazonEMRCleanupPolicy", "AmazonElasticMapReduceRole", "NetworkAdministrator", "AWSBackupServiceRolePolicyForRestores", "SystemAdministrator", "AWSConnector"], "iam:createservicespecificcredential": ["IAMSelfManageServiceSpecificCredentials", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "iam:listservicespecificcredentials": ["AWSCodeCommitReadOnly", "IAMSelfManageServiceSpecificCredentials", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "iam:updateservicespecificcredential": ["IAMSelfManageServiceSpecificCredentials", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "iam:deleteservicespecificcredential": ["IAMSelfManageServiceSpecificCredentials", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "iam:resetservicespecificcredential": ["IAMSelfManageServiceSpecificCredentials", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "ec2:*": ["AmazonEC2FullAccess", "AWSCodeStarServiceRole", "AWSElasticBeanstalkFullAccess"], "elasticloadbalancing:*": ["AWSCodeStarServiceRole", "NetworkAdministrator", "ElasticLoadBalancingFullAccess", "AmazonEC2ContainerServiceFullAccess", "AmazonEC2FullAccess", "SystemAdministrator", "AWSElasticBeanstalkFullAccess"], "cloudwatch:*": ["DataScientist", "CloudWatchFullAccess", "AmazonEC2RoleforDataPipelineRole", "AWSElasticBeanstalkFullAccess", "AmazonElasticMapReduceforEC2Role", "AmazonElasticMapReduceFullAccess", "AmazonEC2FullAccess", "SystemAdministrator", "AWSDataPipelineRole", "AWSLambdaFullAccess"], "autoscaling:*": ["AutoScalingConsoleFullAccess", "DataScientist", "AWSCodeStarServiceRole", "AmazonEC2FullAccess", "AutoScalingFullAccess", "SystemAdministrator", "AWSElasticBeanstalkFullAccess"], "route53:gethostedzone": ["AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AWSCloudMapFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSResourceGroupsReadOnlyAccess", "AmazonRoute53AutoNamingFullAccess", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "route53:listhostedzonesbyname": ["AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AWSCloudMapFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AmazonRoute53AutoNamingFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "route53:changeresourcerecordsets": ["AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AWSCloudMapFullAccess", "AmazonRoute53AutoNamingFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonECSServiceRolePolicy", "AmazonWorkMailFullAccess"], "route53:createhealthcheck": ["AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AWSCloudMapFullAccess", "AmazonRoute53AutoNamingFullAccess", "AmazonECSServiceRolePolicy"], "route53:gethealthcheck": ["AWSCloudMapRegisterInstanceAccess", "CloudWatchAutomaticDashboardsAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AWSCloudMapFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSResourceGroupsReadOnlyAccess", "AmazonRoute53AutoNamingFullAccess", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "route53:deletehealthcheck": ["AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AWSCloudMapFullAccess", "AmazonRoute53AutoNamingFullAccess", "AmazonECSServiceRolePolicy"], "route53:updatehealthcheck": ["AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AWSCloudMapFullAccess", "AmazonRoute53AutoNamingFullAccess", "AmazonECSServiceRolePolicy"], "servicediscovery:get*": ["AWSCloudMapReadOnlyAccess", "AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AmazonRoute53AutoNamingReadOnlyAccess", "ReadOnlyAccess", "AmazonECSServiceRolePolicy"], "servicediscovery:list*": ["AWSCloudMapReadOnlyAccess", "AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess", "AmazonRoute53AutoNamingReadOnlyAccess", "ReadOnlyAccess", "AmazonECSServiceRolePolicy"], "servicediscovery:registerinstance": ["AmazonECSServiceRolePolicy", "AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess"], "servicediscovery:deregisterinstance": ["AmazonECSServiceRolePolicy", "AWSCloudMapRegisterInstanceAccess", "AmazonRoute53AutoNamingRegistrantAccess"], "servicediscovery:discoverinstances": ["AWSCloudMapReadOnlyAccess", "AWSCloudMapRegisterInstanceAccess", "AWSCloudMapDiscoverInstanceAccess", "APIGatewayServiceRolePolicy", "AWSAppMeshServiceRolePolicy", "AWSAppMeshPreviewServiceRolePolicy"], "iot:addthingtothinggroup": ["AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:attachprincipalpolicy": ["AWSDeepLensServiceRolePolicy", "AWSIoTConfigAccess", "AWSIoTThingsRegistration", "AWSLambdaFullAccess"], "iot:attachthingprincipal": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess", "AWSDeepLensServiceRolePolicy", "AWSIoTThingsRegistration", "AWSLambdaFullAccess"], "iot:createcertificatefromcsr": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:createpolicy": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess", "AWSDeepLensServiceRolePolicy", "AWSIoTThingsRegistration", "AWSLambdaFullAccess"], "iot:creatething": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess", "AWSDeepLensServiceRolePolicy", "AWSIoTThingsRegistration", "AWSLambdaFullAccess"], "iot:describecertificate": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigAccess", "AWSGreengrassResourceAccessRolePolicy", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTThingsRegistration"], "iot:describething": ["AWSIoTConfigAccess", "AWSDeepLensServiceRolePolicy", "AWSGreengrassResourceAccessRolePolicy", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTThingsRegistration"], "iot:describethinggroup": ["AWSSupportServiceRolePolicy", "AWSIoTConfigReadOnlyAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:describethingtype": ["AWSIoTConfigReadOnlyAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:detachthingprincipal": ["AWSDeepLensServiceRolePolicy", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:getpolicy": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigAccess", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSIoTThingsRegistration"], "iot:listpolicyprincipals": ["AWSSupportServiceRolePolicy", "AWSIoTConfigReadOnlyAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:listprincipalpolicies": ["AWSSupportServiceRolePolicy", "AWSIoTConfigReadOnlyAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:listprincipalthings": ["AWSIoTConfigAccess", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTThingsRegistration", "AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction"], "iot:listthinggroupsforthing": ["AWSSupportServiceRolePolicy", "AWSIoTConfigReadOnlyAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:listthingprincipals": ["AWSSupportServiceRolePolicy", "AWSIoTConfigReadOnlyAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:registercertificate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:registerthing": ["AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:removethingfromthinggroup": ["AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:updatecertificate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess", "AWSDeepLensServiceRolePolicy", "AWSIoTDeviceDefenderUpdateDeviceCertMitigationAction", "AWSIoTThingsRegistration"], "iot:updatething": ["AWSDeepLensServiceRolePolicy", "AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:updatethinggroupsforthing": ["AWSIoTThingsRegistration", "AWSIoTConfigAccess"], "iot:addthingtobillinggroup": ["AWSIoTThingsRegistration"], "iot:describebillinggroup": ["AWSIoTThingsRegistration"], "iot:removethingfrombillinggroup": ["AWSIoTThingsRegistration"], "codecommit:associateapprovalruletemplatewithrepository": ["AWSCodeCommitPowerUser"], "codecommit:batchassociateapprovalruletemplatewithrepositories": ["AWSCodeCommitPowerUser"], "codecommit:batchdisassociateapprovalruletemplatefromrepositories": ["AWSCodeCommitPowerUser"], "codecommit:batchget*": ["AWSCodeCommitReadOnly", "ReadOnlyAccess", "AWSCodeCommitPowerUser"], "codecommit:batchdescribe*": ["AWSCodeCommitReadOnly", "AWSCodeCommitPowerUser"], "codecommit:create*": ["AWSCodeCommitPowerUser"], "codecommit:deletebranch": ["AWSCodeCommitPowerUser"], "codecommit:deletefile": ["AWSCodeCommitPowerUser"], "codecommit:describe*": ["AWSCodeCommitReadOnly", "ReadOnlyAccess", "AWSCodeCommitPowerUser"], "codecommit:disassociateapprovalruletemplatefromrepository": ["AWSCodeCommitPowerUser"], "codecommit:evaluatepullrequestapprovalrules": ["AWSCodeCommitReadOnly", "AWSCodeCommitPowerUser"], "codecommit:merge*": ["AWSCodeCommitPowerUser"], "codecommit:overridepullrequestapprovalrules": ["AWSCodeCommitPowerUser"], "codecommit:put*": ["SystemAdministrator", "AWSCodeCommitPowerUser"], "codecommit:post*": ["AWSCodeCommitPowerUser"], "codecommit:tagresource": ["AWSCodeCommitPowerUser", "AmazonCodeGuruReviewerFullAccess"], "codecommit:test*": ["SystemAdministrator", "AWSCodeCommitPowerUser"], "codecommit:untagresource": ["AmazonCodeGuruReviewerServiceRolePolicy", "AWSCodeCommitPowerUser", "AmazonCodeGuruReviewerFullAccess"], "codecommit:update*": ["SystemAdministrator", "AWSCodeCommitPowerUser"], "codecommit:gitpull": ["AWSCodeCommitReadOnly", "AmazonSageMakerFullAccess", "ReadOnlyAccess", "AWSCodeCommitPowerUser", "AmazonCodeGuruReviewerServiceRolePolicy", "SystemAdministrator"], "codecommit:gitpush": ["SystemAdministrator", "AmazonSageMakerFullAccess", "AWSCodeCommitPowerUser"], "events:deleterule": ["AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AmazonEventBridgeSchemasServiceRolePolicy", "AWSCodeStarServiceRole", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonCodeGuruReviewerServiceRolePolicy", "AmazonECS_FullAccess", "AmazonCodeGuruReviewerFullAccess", "AmazonEC2ContainerServiceFullAccess", "AmazonEventBridgeSchemasFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "events:disablerule": ["AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AmazonEventBridgeSchemasServiceRolePolicy", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AmazonEventBridgeSchemasFullAccess"], "events:enablerule": ["AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AmazonEventBridgeSchemasServiceRolePolicy", "AWSCodeCommitPowerUser", "AmazonEventBridgeSchemasFullAccess"], "events:putrule": ["AWSCodeBuildAdminAccess", "AWSCodeStarNotificationsServiceRolePolicy", "AWSCodeCommitFullAccess", "AmazonEventBridgeSchemasServiceRolePolicy", "AWSCodeStarServiceRole", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonECS_FullAccess", "AmazonCodeGuruReviewerFullAccess", "AmazonEC2ContainerServiceFullAccess", "AmazonEventBridgeSchemasFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "events:puttargets": ["AWSCodeBuildAdminAccess", "AWSCodeStarNotificationsServiceRolePolicy", "AWSCodeCommitFullAccess", "AmazonEventBridgeSchemasServiceRolePolicy", "AWSCodeStarServiceRole", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonECS_FullAccess", "AmazonCodeGuruReviewerFullAccess", "AmazonEC2ContainerServiceFullAccess", "AmazonEventBridgeSchemasFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "events:removetargets": ["AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AmazonEventBridgeSchemasServiceRolePolicy", "AWSCodeStarServiceRole", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonCodeGuruReviewerServiceRolePolicy", "AmazonECS_FullAccess", "AmazonCodeGuruReviewerFullAccess", "AmazonEC2ContainerServiceFullAccess", "AmazonEventBridgeSchemasFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "events:listtargetsbyrule": ["AWSCodeCommitReadOnly", "AmazonEventBridgeSchemasFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AmazonEventBridgeSchemasServiceRolePolicy", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AmazonECS_FullAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy", "AmazonEventBridgeReadOnlyAccess", "AmazonEC2ContainerServiceFullAccess", "ViewOnlyAccess", "CloudWatchEventsReadOnlyAccess"], "sns:subscribe": ["AmazonSageMakerFullAccess", "CloudWatchSyntheticsFullAccess", "AWSCodeCommitFullAccess", "AWSDirectoryServiceFullAccess", "AWSElasticBeanstalkService", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSCodeCommitPowerUser", "DatabaseAdministrator", "AWSDataPipeline_FullAccess", "AmazonSageMakerGroundTruthExecution", "AWSChatbotServiceLinkedRolePolicy", "AWSElasticBeanstalkRoleSNS", "AmazonDynamoDBFullAccess", "AWSDataPipelineRole", "AWSLambdaFullAccess"], "sns:unsubscribe": ["AWSCodeCommitFullAccess", "AWSDirectoryServiceFullAccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSCodeCommitPowerUser", "DatabaseAdministrator", "AmazonSageMakerGroundTruthExecution", "AWSChatbotServiceLinkedRolePolicy", "AWSElasticBeanstalkRoleSNS", "AmazonDynamoDBFullAccess", "AWSDataPipelineRole", "AWSLambdaFullAccess"], "sns:listsubscriptionsbytopic": ["AWSCodeCommitReadOnly", "CloudWatchSyntheticsFullAccess", "AWSSupportServiceRolePolicy", "AWSSecurityHubServiceRolePolicy", "AWSCodeCommitFullAccess", "AmazonRoute53FullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "NetworkAdministrator", "AWSLambdaReadOnlyAccess", "AmazonDynamoDBFullAccess", "AmazonDynamoDBReadOnlyAccess", "AWSElasticBeanstalkService", "SecurityAudit", "AWSDirectoryServiceFullAccess", "AWSCodeCommitPowerUser", "AWSDirectoryServiceReadOnlyAccess", "AWSChatbotServiceLinkedRolePolicy", "AWSLambdaFullAccess"], "iam:listaccesskeys": ["AWSCodeCommitReadOnly", "AWSCodeCommitFullAccess", "AWSCodeCommitPowerUser", "AWSSupportServiceRolePolicy", "SystemAdministrator"], "iam:listsshpublickeys": ["AWSCodeCommitReadOnly", "AWSCodeCommitFullAccess", "AWSCodeCommitPowerUser", "IAMUserSSHKeys", "AWSSupportServiceRolePolicy", "SystemAdministrator"], "iam:deletesshpublickey": ["IAMUserSSHKeys", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "iam:getsshpublickey": ["AWSCodeCommitReadOnly", "AWSCodeCommitFullAccess", "AWSCodeCommitPowerUser", "IAMUserSSHKeys", "AWSSupportServiceRolePolicy", "SystemAdministrator"], "iam:updatesshpublickey": ["IAMUserSSHKeys", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "iam:uploadsshpublickey": ["IAMUserSSHKeys", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "codestar-notifications:createnotificationrule": ["AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildDeveloperAccess"], "codestar-notifications:describenotificationrule": ["AWSCodeCommitReadOnly", "AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "ReadOnlyAccess", "AWSCodeDeployReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodePipeline_ReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codestar-notifications:updatenotificationrule": ["AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildDeveloperAccess"], "codestar-notifications:subscribe": ["AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildDeveloperAccess"], "codestar-notifications:unsubscribe": ["AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildDeveloperAccess"], "codestar-notifications:listnotificationrules": ["AWSCodeCommitReadOnly", "AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "ReadOnlyAccess", "AWSCodeDeployReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodePipeline_ReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codestar-notifications:listtargets": ["AWSCodeCommitReadOnly", "AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "ReadOnlyAccess", "AWSCodeDeployReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodePipeline_ReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codestar-notifications:listtagsforresource": ["AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "ReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildDeveloperAccess"], "codestar-notifications:listeventtypes": ["AWSCodeCommitReadOnly", "AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "ReadOnlyAccess", "AWSCodeDeployReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodePipeline_ReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codeguru-reviewer:associaterepository": ["AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "codeguru-reviewer:describerepositoryassociation": ["AWSCodeCommitReadOnly", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "codeguru-reviewer:listrepositoryassociations": ["AWSCodeCommitReadOnly", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "codeguru-reviewer:disassociaterepository": ["AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "codeguru-reviewer:describecodereview": ["AWSCodeCommitReadOnly", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "codeguru-reviewer:listcodereviews": ["AWSCodeCommitReadOnly", "AWSCodeCommitPowerUser", "AWSCodeCommitFullAccess"], "chatbot:describeslackchannelconfigurations": ["AWSCodeDeployFullAccess", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AWSCodeStarNotificationsServiceRolePolicy", "AWSCodePipelineFullAccess", "AWSCodeCommitPowerUser", "AWSCodeDeployDeployerAccess", "AWSCodeBuildDeveloperAccess"], "codestar-connections:listconnections": ["AWSCodeCommitReadOnly", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AWSCodeCommitPowerUser", "AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess", "AmazonCodeGuruReviewerFullAccess"], "codestar-connections:getconnection": ["AWSCodeCommitReadOnly", "AWSCodeBuildAdminAccess", "AWSCodeCommitFullAccess", "AWSCodeCommitPowerUser", "AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "sqs:*": ["AmazonEC2RoleforDataPipelineRole", "AmazonSQSFullAccess", "AmazonElasticMapReduceforEC2Role", "SystemAdministrator", "AWSElasticBeanstalkFullAccess"], "waf:updatewebacl": ["FMSServiceRolePolicy"], "waf:deletewebacl": ["FMSServiceRolePolicy"], "waf:getwebacl": ["AWS_ConfigRole", "CloudFrontReadOnlyAccess", "AWS_Config_Role", "CloudFrontFullAccess", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "waf:getrulegroup": ["FMSServiceRolePolicy"], "waf:listsubscribedrulegroups": ["FMSServiceRolePolicy"], "waf-regional:updatewebacl": ["FMSServiceRolePolicy"], "waf-regional:deletewebacl": ["FMSServiceRolePolicy"], "waf-regional:getwebacl": ["AWS_ConfigRole", "AWS_Config_Role", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "waf-regional:getrulegroup": ["FMSServiceRolePolicy"], "waf-regional:listsubscribedrulegroups": ["FMSServiceRolePolicy"], "waf-regional:listresourcesforwebacl": ["FMSServiceRolePolicy", "AWSSupportServiceRolePolicy"], "waf-regional:associatewebacl": ["FMSServiceRolePolicy"], "waf-regional:disassociatewebacl": ["FMSServiceRolePolicy"], "elasticloadbalancing:setwebacl": ["AWSWAFConsoleFullAccess", "AWSWAFFullAccess", "FMSServiceRolePolicy", "AWSShieldDRTAccessPolicy", "AWSFMAdminFullAccess"], "apigateway:setwebacl": ["AWSShieldDRTAccessPolicy", "AWSWAFConsoleFullAccess", "AWSWAFFullAccess", "FMSServiceRolePolicy"], "elasticloadbalancing:setsecuritygroups": ["FMSServiceRolePolicy"], "wafv2:putloggingconfiguration": ["FMSServiceRolePolicy"], "wafv2:getloggingconfiguration": ["AWS_ConfigRole", "AWS_Config_Role", "FMSServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "wafv2:listloggingconfigurations": ["FMSServiceRolePolicy"], "wafv2:deleteloggingconfiguration": ["FMSServiceRolePolicy"], "waf:createwebacl": ["FMSServiceRolePolicy"], "waf-regional:createwebacl": ["FMSServiceRolePolicy"], "waf:getchangetoken": ["FMSServiceRolePolicy"], "waf-regional:getchangetoken": ["FMSServiceRolePolicy"], "elasticloadbalancing:applysecuritygroupstoloadbalancer": ["AmazonEKSClusterPolicy", "FMSServiceRolePolicy", "AWSElasticBeanstalkService"], "waf:putpermissionpolicy": ["FMSServiceRolePolicy"], "waf:getpermissionpolicy": ["FMSServiceRolePolicy"], "waf:deletepermissionpolicy": ["FMSServiceRolePolicy"], "waf-regional:putpermissionpolicy": ["FMSServiceRolePolicy"], "waf-regional:getpermissionpolicy": ["FMSServiceRolePolicy"], "waf-regional:deletepermissionpolicy": ["FMSServiceRolePolicy"], "cloudfront:getdistribution": ["CloudWatchAutomaticDashboardsAccess", "FMSServiceRolePolicy", "AWSForWordPressPluginPolicy", "AWSSupportServiceRolePolicy", "AWSMobileHub_FullAccess"], "cloudfront:updatedistribution": ["AWSShieldDRTAccessPolicy", "AWSWAFConsoleFullAccess", "FMSServiceRolePolicy", "AWSForWordPressPluginPolicy"], "cloudfront:listdistributionsbywebaclid": ["AWSWAFConsoleReadOnlyAccess", "AWSWAFConsoleFullAccess", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy"], "cloudfront:listdistributions": ["CloudWatchAutomaticDashboardsAccess", "AWSTrustedAdvisorServiceRolePolicy", "AmazonRoute53FullAccess", "AWSWAFConsoleReadOnlyAccess", "NetworkAdministrator", "AWSWAFConsoleFullAccess", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSForWordPressPluginPolicy"], "config:deleteconfigrule": ["AWSSecurityHubServiceRolePolicy", "ConfigConformsServiceRolePolicy", "FMSServiceRolePolicy"], "config:describecompliancebyconfigrule": ["FMSServiceRolePolicy"], "config:getcompliancedetailsbyconfigrule": ["AWSSecurityHubServiceRolePolicy", "FMSServiceRolePolicy"], "config:putconfigrule": ["AWSSecurityHubServiceRolePolicy", "ConfigConformsServiceRolePolicy", "FMSServiceRolePolicy"], "config:startconfigrulesevaluation": ["FMSServiceRolePolicy"], "config:putconfigurationrecorder": ["FMSServiceRolePolicy"], "config:startconfigurationrecorder": ["FMSServiceRolePolicy"], "config:putdeliverychannel": ["FMSServiceRolePolicy"], "config:getcompliancesummarybyconfigrule": ["FMSServiceRolePolicy"], "config:getdiscoveredresourcecounts": ["FMSServiceRolePolicy"], "config:putevaluations": ["FMSServiceRolePolicy"], "config:selectresourceconfig": ["AWSSecurityHubServiceRolePolicy", "ReadOnlyAccess", "AmazonSSMServiceRolePolicy", "FMSServiceRolePolicy"], "iam:deleteservicelinkedrole": ["AWSCertificateManagerFullAccess", "AWSMigrationHubFullAccess", "AmazonCodeGuruReviewerFullAccess", "AlexaForBusinessFullAccess", "AWSSSOServiceRolePolicy", "FSxDeleteServiceLinkedRoleAccess", "AmazonConnectFullAccess", "AWSApplicationDiscoveryServiceFullAccess", "FMSServiceRolePolicy", "AmazonCognitoPowerUser", "AmazonWorkMailFullAccess", "LightsailExportAccess", "AmazonLexFullAccess", "AmazonSSMFullAccess", "AWSAppSyncAdministrator"], "iam:getservicelinkedroledeletionstatus": ["AWSCertificateManagerFullAccess", "AWSMigrationHubFullAccess", "AlexaForBusinessFullAccess", "AWSSSOServiceRolePolicy", "FSxDeleteServiceLinkedRoleAccess", "AWSApplicationDiscoveryServiceFullAccess", "AmazonCognitoPowerUser", "FMSServiceRolePolicy", "AmazonWorkMailFullAccess", "AmazonCodeGuruReviewerFullAccess", "LightsailExportAccess", "AmazonLexFullAccess", "AmazonSSMFullAccess", "AWSAppSyncAdministrator"], "organizations:describeaccount": ["IAMFullAccess", "AmazonMacieServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonGuardDutyServiceRolePolicy", "AWSSecurityHubServiceRolePolicy", "AWSSystemsManagerAccountDiscoveryServicePolicy", "AWSControlTowerServiceRolePolicy", "AWSSSOMasterAccountAdministrator", "ServiceQuotasReadOnlyAccess", "ServiceQuotasFullAccess", "CloudTrailServiceRolePolicy", "IAMAccessAnalyzerFullAccess", "AWSSSOMemberAccountAdministrator", "AWSSSOServiceRolePolicy", "IAMAccessAdvisorReadOnly", "AWSDirectoryServiceFullAccess", "AWSSSOReadOnly", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "ComputeOptimizerReadOnlyAccess", "AWSDirectoryServiceReadOnlyAccess", "FMSServiceRolePolicy", "AWSBackupOrganizationAdminAccess"], "organizations:describeorganization": ["IAMFullAccess", "AWSBackupOperatorAccess", "AWSLicenseManagerServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWS_Config_Role", "AWSFMAdminFullAccess", "AWSSecurityHubServiceRolePolicy", "AWSSystemsManagerAccountDiscoveryServicePolicy", "AWSControlTowerServiceRolePolicy", "AWSSSOMasterAccountAdministrator", "AWSArtifactAccountSync", "ServiceQuotasReadOnlyAccess", "ServiceQuotasFullAccess", "CloudTrailServiceRolePolicy", "IAMAccessAnalyzerFullAccess", "AWSSSOMemberAccountAdministrator", "WAFV2LoggingServiceRolePolicy", "AWSFMMemberReadOnlyAccess", "AWSConfigRoleForOrganizations", "AWSBackupFullAccess", "AWSSSOServiceRolePolicy", "IAMAccessAdvisorReadOnly", "ComputeOptimizerServiceRolePolicy", "AmazonDetectiveFullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSDirectoryServiceFullAccess", "AWSSSOReadOnly", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "ComputeOptimizerReadOnlyAccess", "AWSDirectoryServiceReadOnlyAccess", "FMSServiceRolePolicy", "AWSFMAdminReadOnlyAccess", "AWSBackupOrganizationAdminAccess", "AWSConfigRole"], "organizations:describeorganizationalunit": ["IAMFullAccess", "AWSControlTowerServiceRolePolicy", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "IAMAccessAdvisorReadOnly", "FMSServiceRolePolicy", "AWSBackupOrganizationAdminAccess", "IAMAccessAnalyzerFullAccess"], "organizations:listchildren": ["IAMFullAccess", "AWSSSOMemberAccountAdministrator", "AWSSystemsManagerAccountDiscoveryServicePolicy", "AWSControlTowerServiceRolePolicy", "AWSSSOReadOnly", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSSSOMasterAccountAdministrator", "IAMAccessAdvisorReadOnly", "FMSServiceRolePolicy", "AWSBackupOrganizationAdminAccess", "IAMAccessAnalyzerFullAccess"], "organizations:listroots": ["IAMFullAccess", "AWSSSOMemberAccountAdministrator", "AWSControlTowerServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AWSSSOReadOnly", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSSSOMasterAccountAdministrator", "IAMAccessAdvisorReadOnly", "FMSServiceRolePolicy", "AWSBackupOrganizationAdminAccess", "IAMAccessAnalyzerFullAccess"], "organizations:listparents": ["IAMFullAccess", "AWSSSOMemberAccountAdministrator", "AWSSystemsManagerAccountDiscoveryServicePolicy", "AWSControlTowerServiceRolePolicy", "AWSSSOReadOnly", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSSSOMasterAccountAdministrator", "IAMAccessAdvisorReadOnly", "FMSServiceRolePolicy", "AWSBackupOrganizationAdminAccess", "IAMAccessAnalyzerFullAccess"], "organizations:listorganizationalunitsforparent": ["AWSSSOMemberAccountAdministrator", "AWSControlTowerServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AWSSSOReadOnly", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "AWSSSOMasterAccountAdministrator", "FMSServiceRolePolicy", "AWSBackupOrganizationAdminAccess", "IAMAccessAnalyzerFullAccess"], "organizations:listawsserviceaccessfororganization": ["AWSSystemsManagerAccountDiscoveryServicePolicy", "AWSControlTowerServiceRolePolicy", "AWSLicenseManagerServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AccessAnalyzerServiceRolePolicy", "AWSConfigRoleForOrganizations", "AWSLicenseManagerMasterAccountRolePolicy", "ServiceQuotasReadOnlyAccess", "AWSDirectoryServiceReadOnlyAccess", "ServiceQuotasFullAccess", "FMSServiceRolePolicy", "CloudTrailServiceRolePolicy", "ComputeOptimizerServiceRolePolicy", "AWSBackupOrganizationAdminAccess", "IAMAccessAnalyzerFullAccess", "Health_OrganizationsServiceRolePolicy"], "shield:createprotection": ["FMSServiceRolePolicy"], "shield:deleteprotection": ["FMSServiceRolePolicy"], "shield:describeprotection": ["AWS_ConfigRole", "AWS_Config_Role", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "shield:listprotections": ["FMSServiceRolePolicy", "AWSSupportServiceRolePolicy"], "shield:listattacks": ["FMSServiceRolePolicy", "AWSSupportServiceRolePolicy"], "shield:createsubscription": ["FMSServiceRolePolicy"], "shield:describesubscription": ["AWS_ConfigRole", "AWS_Config_Role", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "shield:getsubscriptionstate": ["FMSServiceRolePolicy"], "shield:describedrtaccess": ["AWS_ConfigRole", "AWS_Config_Role", "FMSServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "shield:describeemergencycontactsettings": ["FMSServiceRolePolicy"], "shield:updateemergencycontactsettings": ["FMSServiceRolePolicy"], "elasticloadbalancing:describeloadbalancers": ["AWSTrustedAdvisorServiceRolePolicy", "AWSCodeDeployRole", "APIGatewayServiceRolePolicy", "AWSElasticBeanstalkMaintenance", "AWS_Config_Role", "AWSWAFConsoleFullAccess", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonInspectorServiceRolePolicy", "AmazonRoute53FullAccess", "AWSOpsWorksFullAccess", "CloudWatchAutomaticDashboardsAccess", "AWSElasticBeanstalkService", "AWSWAFConsoleReadOnlyAccess", "AWSElasticBeanstalkEnhancedHealth", "GlobalAcceleratorFullAccess", "AutoScalingFullAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSResourceGroupsReadOnlyAccess", "AmazonEKSClusterPolicy", "AWSElasticBeanstalkServiceRolePolicy", "FMSServiceRolePolicy", "AWSOpsWorksRole", "AWSConfigRole", "AWSGlobalAcceleratorSLRPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ec2:revokesecuritygroupegress": ["AWSDeepRacerCloudFormationAccessPolicy", "AWSElasticBeanstalkService", "AWSDirectoryServiceFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonElasticMapReduceRole", "NetworkAdministrator", "AmazonWorkMailFullAccess", "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy", "FMSServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonElasticMapReduceEditorsRole", "AmazonVPCFullAccess", "SystemAdministrator", "AWSDataPipelineRole"], "ec2:revokesecuritygroupingress": ["AmazonRDSBetaServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonEKSServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonRDSPreviewServiceRolePolicy", "DAXServiceRolePolicy", "AmazonZocaloFullAccess", "AmazonVPCFullAccess", "AmazonRDSServiceRolePolicy", "AWSElasticBeanstalkService", "AmazonWorkMailFullAccess", "ElastiCacheServiceRolePolicy", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AmazonEKSClusterPolicy", "FMSServiceRolePolicy", "AmazonDRSVPCManagement", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:updatesecuritygroupruledescriptionsegress": ["NetworkAdministrator", "SystemAdministrator", "AmazonVPCFullAccess", "FMSServiceRolePolicy"], "ec2:updatesecuritygroupruledescriptionsingress": ["NetworkAdministrator", "SystemAdministrator", "AmazonVPCFullAccess", "FMSServiceRolePolicy"], "ec2:describenetworkinterfaceattribute": ["AmazonElasticFileSystemFullAccess", "AmazonVPCReadOnlyAccess", "AmazonElasticFileSystemReadOnlyAccess", "APIGatewayServiceRolePolicy", "AmazonFSxConsoleFullAccess", "AmazonFSxConsoleReadOnlyAccess", "NetworkAdministrator", "AWSCloudHSMRole", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonVPCFullAccess", "AmazonElasticFileSystemServiceRolePolicy"], "ec2:describesecuritygroupreferences": ["AmazonVPCReadOnlyAccess", "NetworkAdministrator", "FMSServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess"], "ec2:describestalesecuritygroups": ["NetworkAdministrator", "AmazonVPCReadOnlyAccess", "AmazonVPCFullAccess", "FMSServiceRolePolicy"], "ec2:describevpcpeeringconnections": ["AmazonInspectorServiceRolePolicy", "AmazonVPCReadOnlyAccess", "NetworkAdministrator", "FMSServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonVPCFullAccess"], "wafv2:tagresource": ["FMSServiceRolePolicy"], "wafv2:listresourcesforwebacl": ["FMSServiceRolePolicy"], "wafv2:associatewebacl": ["FMSServiceRolePolicy"], "wafv2:listtagsforresource": ["FMSServiceRolePolicy"], "wafv2:untagresource": ["FMSServiceRolePolicy"], "wafv2:getwebacl": ["CloudFrontReadOnlyAccess", "CloudFrontFullAccess", "FMSServiceRolePolicy"], "wafv2:disassociatefirewallmanager": ["FMSServiceRolePolicy"], "wafv2:deletewebacl": ["FMSServiceRolePolicy"], "wafv2:disassociatewebacl": ["FMSServiceRolePolicy"], "wafv2:updatewebacl": ["FMSServiceRolePolicy"], "wafv2:createwebacl": ["FMSServiceRolePolicy"], "wafv2:deletefirewallmanagerrulegroups": ["FMSServiceRolePolicy"], "wafv2:putfirewallmanagerrulegroups": ["FMSServiceRolePolicy"], "wafv2:putpermissionpolicy": ["FMSServiceRolePolicy"], "wafv2:getpermissionpolicy": ["FMSServiceRolePolicy"], "wafv2:deletepermissionpolicy": ["FMSServiceRolePolicy"], "cloudfront:listtagsforresource": ["AWS_ConfigRole", "AWS_Config_Role", "FMSServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "wafv2:getwebaclforresource": ["FMSServiceRolePolicy"], "sagemaker:describeendpoint": ["AmazonFraudDetectorFullAccessPolicy", "AWSApplicationAutoscalingSageMakerEndpointPolicy", "AWSSupportServiceRolePolicy"], "sagemaker:describeendpointconfig": ["AWS_ConfigRole", "AWSApplicationAutoscalingSageMakerEndpointPolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "sagemaker:updateendpointweightsandcapacities": ["AWSApplicationAutoscalingSageMakerEndpointPolicy"], "acm-pca:getcertificate": ["AWSCertificateManagerPrivateCAReadOnly", "AlexaForBusinessNetworkProfileServicePolicy", "AWSCertificateManagerPrivateCAAuditor", "AWSSupportServiceRolePolicy", "AWSCertificateManagerPrivateCAUser", "CertificateManagerServiceRolePolicy", "AWSCertificateManagerPrivateCAPrivilegedUser"], "acm-pca:issuecertificate": ["AWSCertificateManagerPrivateCAPrivilegedUser", "CertificateManagerServiceRolePolicy", "AWSCertificateManagerPrivateCAUser", "AlexaForBusinessNetworkProfileServicePolicy"], "acm-pca:revokecertificate": ["AWSCertificateManagerPrivateCAPrivilegedUser", "AWSCertificateManagerPrivateCAUser", "AlexaForBusinessNetworkProfileServicePolicy"], "secretsmanager:getsecretvalue": ["AmazonSageMakerFullAccess", "AWSThinkboxAWSPortalGatewayPolicy", "AlexaForBusinessDeviceSetup", "AlexaForBusinessNetworkProfileServicePolicy", "AlexaForBusinessFullAccess", "AmazonRedshiftFullAccess", "AWSGreengrassResourceAccessRolePolicy", "AmazonRDSDataFullAccess"], "a4b:search*": ["ReadOnlyAccess", "AlexaForBusinessReadOnlyAccess"], "aws-marketplace:listbuilds": ["AWSMarketplaceImageBuildFullAccess", "AWSMarketplaceRead-only"], "aws-marketplace:startbuild": ["AWSMarketplaceImageBuildFullAccess"], "aws-marketplace:describebuilds": ["AWSMarketplaceImageBuildFullAccess", "AWSMarketplaceRead-only"], "logs:putmetricfilter": ["AWSIoTLogging", "AmazonSNSRole", "DatabaseAdministrator"], "logs:putretentionpolicy": ["AWSIoTLogging", "AWSControlTowerServiceRolePolicy", "AWSElasticBeanstalkService", "AWSElasticBeanstalkRoleCWL", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AmazonECSServiceRolePolicy", "AmazonWorkMailFullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonSNSRole", "AWSThinkboxAWSPortalAdminPolicy", "AmazonRDSEnhancedMonitoringRole"], "logs:deletelogstream": ["AWSIoTLogging", "AmazonLaunchWizard_Fullaccess"], "worklink:describe*": ["AmazonWorkLinkReadOnly", "ReadOnlyAccess"], "worklink:list*": ["AmazonWorkLinkReadOnly", "ReadOnlyAccess"], "worklink:search*": ["AmazonWorkLinkReadOnly"], "elasticache:*": ["AmazonElastiCacheFullAccess", "DatabaseAdministrator"], "inspector:*": ["AmazonInspectorFullAccess"], "events:listrulenamesbytarget": ["AWSCodeBuildAdminAccess", "AmazonInspectorReadOnlyAccess", "AmazonInspectorFullAccess", "AmazonECS_FullAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy", "AmazonEventBridgeReadOnlyAccess", "AmazonEC2ContainerServiceFullAccess", "ViewOnlyAccess", "CloudWatchEventsReadOnlyAccess"], "codecommit:*": ["AWSCodeStarServiceRole", "AWSCodeCommitFullAccess"], "sns:deletetopic": ["AWSCodeCommitFullAccess", "AWSDirectoryServiceFullAccess", "AmazonDynamoDBFullAccesswithDataPipeline", "DatabaseAdministrator", "AWSCloudTrailFullAccess", "AWSElasticBeanstalkRoleSNS", "AmazonDynamoDBFullAccess"], "codestar-notifications:deletenotificationrule": ["AWSCodeBuildAdminAccess", "AWSCodePipelineFullAccess", "AWSCodeDeployFullAccess", "AWSCodeCommitFullAccess"], "iam:*": ["IAMFullAccess"], "organizations:describepolicy": ["IAMFullAccess", "IAMAccessAdvisorReadOnly", "AWSBackupOrganizationAdminAccess", "AWSControlTowerServiceRolePolicy"], "organizations:listpoliciesfortarget": ["IAMFullAccess", "IAMAccessAdvisorReadOnly", "AWSBackupOrganizationAdminAccess", "AWSControlTowerServiceRolePolicy"], "organizations:listpolicies": ["IAMFullAccess", "IAMAccessAdvisorReadOnly", "AWSBackupOrganizationAdminAccess"], "organizations:listtargetsforpolicy": ["IAMFullAccess", "IAMAccessAdvisorReadOnly", "AWSBackupOrganizationAdminAccess", "AWSControlTowerServiceRolePolicy"], "forecast:*": ["AmazonForecastFullAccess"], "awsconnector:registerconnector": ["AWSAgentlessDiscoveryService"], "awsconnector:getconnectorhealth": ["AWSAgentlessDiscoveryService"], "s3:putobjectacl": ["AmazonElasticTranscoderRole", "ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSAgentlessDiscoveryService", "ServerMigrationConnector", "AWSDataExchangeFullAccess", "AWSForWordPressPluginPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "ConfigConformsServiceRolePolicy", "AWSConnector", "AWSDataExchangeProviderFullAccess"], "discovery:*": ["AWSMigrationHubFullAccess", "AWSApplicationDiscoveryServiceFullAccess", "AWSAgentlessDiscoveryService"], "arsenal:registeronpremisesagent": ["AWSApplicationDiscoveryAgentAccess", "AWSAgentlessDiscoveryService"], "mgh:gethomeregion": ["AWSMigrationHubDMSAccess", "ReadOnlyAccess", "AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "AWSAgentlessDiscoveryService", "AWSApplicationDiscoveryAgentAccess", "MigrationHubDMSAccessServiceRolePolicy"], "cloudformation:gettemplate": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSControlTowerServiceRolePolicy", "AWSCodeStarServiceRole", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSLambdaReadOnlyAccess", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSLambdaFullAccess"], "cloudformation:liststackresources": ["AWSLambdaReadOnlyAccess", "AWSDeepRacerServiceRolePolicy", "AWSThinkboxAWSPortalAdminPolicy", "AWSServiceCatalogAdminFullAccess", "ResourceGroupsandTagEditorFullAccess", "AWSResourceGroupsReadOnlyAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AmazonSSMServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "ResourceGroupsandTagEditorReadOnlyAccess", "AWSLambdaFullAccess", "ConfigConformsServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cognito-identity:listidentitypools": ["AWSSupportServiceRolePolicy", "SecurityAudit", "AWSLambdaReadOnlyAccess", "ViewOnlyAccess", "AWSLambdaFullAccess"], "cognito-sync:setcognitoevents": ["AWSLambdaFullAccess"], "dynamodb:*": ["DataScientist", "AmazonDynamoDBFullAccesswithDataPipeline", "DatabaseAdministrator", "AmazonEC2RoleforDataPipelineRole", "AWSElasticBeanstalkFullAccess", "AmazonElasticMapReduceforEC2Role", "AmazonDynamoDBFullAccess", "AWSLambdaFullAccess"], "events:*": ["AmazonEventBridgeFullAccess", "CloudWatchEventsFullAccess", "SystemAdministrator", "AWSLambdaFullAccess"], "iam:getpolicy": ["AWSLambdaReadOnlyAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "DataScientist", "AWSCodeStarServiceRole", "AWSIoTDeviceDefenderAudit", "AmazonLaunchWizard_Fullaccess", "AWS_Config_Role", "CloudWatchFullAccess", "IAMAccessAdvisorReadOnly", "AWSSupportServiceRolePolicy", "AmazonElasticMapReduceFullAccess", "AWSConfigRole", "AWSThinkboxAWSPortalAdminPolicy", "AWSLambdaFullAccess"], "iam:getpolicyversion": ["AWSLambdaReadOnlyAccess", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "DataScientist", "AWSCodeStarServiceRole", "AWSIoTDeviceDefenderAudit", "AmazonLaunchWizard_Fullaccess", "AWS_Config_Role", "CloudWatchFullAccess", "AWSElasticBeanstalkFullAccess", "AWSSupportServiceRolePolicy", "AmazonElasticMapReduceFullAccess", "AWSConfigRole", "AWSLambdaFullAccess"], "iam:getrolepolicy": ["AWSDataPipeline_PowerUser", "AWSCodeStarServiceRole", "AWSCloudTrailFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSLambdaReadOnlyAccess", "AWSOpsWorksFullAccess", "AWSDataPipelineRole", "AWSGlueConsoleFullAccess", "AWSIoTDeviceDefenderAudit", "AWSGlueServiceRole", "AWSConfigServiceRolePolicy", "AWSLakeFormationDataAdmin", "AWS_ConfigRole", "AmazonElasticMapReduceRole", "AWSDataPipeline_FullAccess", "AWSOpsWorksRole", "AWSConfigRole", "AWSThinkboxAWSPortalAdminPolicy", "AmazonBraketFullAccess", "AWSLambdaFullAccess"], "iam:listattachedrolepolicies": ["AWSIQPermissionServiceRolePolicy", "AmazonEKSServicePolicy", "AWSCodeStarServiceRole", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWS_Config_Role", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AWSElasticBeanstalkFullAccess", "AmazonEKSServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSLambdaReadOnlyAccess", "AWSDataPipelineRole", "AWSGlueConsoleFullAccess", "AWSIoTDeviceDefenderAudit", "AWSSSOServiceRolePolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSConfigRole", "AmazonBraketFullAccess", "AWSLambdaFullAccess"], "iam:listrolepolicies": ["AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AmazonBraketFullAccess", "AWSIoTDeviceDefenderAudit", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonElasticMapReduceRole", "AWSGlueConsoleFullAccess", "AWS_Config_Role", "AWSSSOServiceRolePolicy", "AWSElasticBeanstalkFullAccess", "AWSSupportServiceRolePolicy", "AWSLambdaReadOnlyAccess", "AWSConfigRole", "AWSGlueServiceRole", "SystemAdministrator", "AWSDataPipelineRole", "AWSLambdaFullAccess"], "iot:createkeysandcertificate": ["AWSDeepLensServiceRolePolicy", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess", "AWSLambdaFullAccess"], "iot:createtopicrule": ["AWSIoTConfigAccess", "AWSLambdaFullAccess"], "iot:describeendpoint": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess", "AWSDeepLensServiceRolePolicy", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSLambdaReadOnlyAccess", "AWSIoTSiteWiseConsoleFullAccess", "AWSLambdaFullAccess"], "iot:gettopicrule": ["AWSIoTConfigAccess", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSLambdaReadOnlyAccess", "AWSLambdaFullAccess"], "iot:listpolicies": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigAccess", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSLambdaReadOnlyAccess", "AWSLambdaFullAccess"], "iot:listthings": ["AWSIoTConfigAccess", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSLambdaReadOnlyAccess", "AWSLambdaFullAccess"], "iot:listtopicrules": ["AWSIoTConfigAccess", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSLambdaReadOnlyAccess", "AWSLambdaFullAccess"], "iot:replacetopicrule": ["AWSIoTConfigAccess", "AWSLambdaFullAccess"], "kinesis:describestream": ["AmazonRDSServiceRolePolicy", "AWSLambdaReadOnlyAccess", "CloudWatchAutomaticDashboardsAccess", "AWSResourceGroupsReadOnlyAccess", "AmazonKinesisAnalyticsReadOnly", "AWSLambdaKinesisExecutionRole", "CloudFrontFullAccess", "AmazonConnectFullAccess", "AmazonElasticMapReduceforEC2Role", "SecurityAudit", "AWSSupportServiceRolePolicy", "AmazonKinesisAnalyticsFullAccess", "AWSLambdaFullAccess"], "kinesis:liststreams": ["CloudWatchAutomaticDashboardsAccess", "AWSResourceGroupsReadOnlyAccess", "AmazonKinesisAnalyticsReadOnly", "AWSLambdaKinesisExecutionRole", "CloudFrontFullAccess", "AmazonConnectFullAccess", "AmazonCognitoPowerUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSLambdaReadOnlyAccess", "ViewOnlyAccess", "AmazonKinesisAnalyticsFullAccess", "SystemAdministrator", "AWSLambdaFullAccess"], "kinesis:putrecord": ["AmazonRDSServiceRolePolicy", "WorkLinkServiceRolePolicy", "AmazonRekognitionServiceRole", "AmazonElasticMapReduceforEC2Role", "AmazonWorkLinkServiceRolePolicy", "CloudWatchEventsInvocationAccess", "AmazonKinesisAnalyticsFullAccess", "SystemAdministrator", "AWSIoTRuleActions", "AWSLambdaFullAccess"], "lambda:*": ["AmazonDynamoDBFullAccesswithDataPipeline", "AWSLambdaFullAccess"], "logs:*": ["AWSLambdaExecute", "AWSCodeStarServiceRole", "CloudWatchFullAccess", "AWSElasticBeanstalkFullAccess", "CloudWatchLogsFullAccess", "AmazonSSMFullAccess", "SystemAdministrator", "AWSLambdaFullAccess"], "s3:*": ["AmazonS3FullAccess", "AWSElasticBeanstalkService", "AWSCodeStarServiceRole", "AmazonEC2RoleforDataPipelineRole", "AWSElasticBeanstalkFullAccess", "AmazonElasticMapReduceforEC2Role", "AmazonElasticMapReduceFullAccess", "SystemAdministrator", "AWSLambdaFullAccess"], "sqs:sendmessage": ["AutoScalingNotificationAccessRole", "AmazonSageMakerGroundTruthExecution", "AWSThinkboxAWSPortalWorkerPolicy", "AWSElasticBeanstalkWorkerTier", "AWSLambdaFullAccess"], "xray:puttelemetryrecords": ["AWSAppSyncServiceRolePolicy", "AWSXRayDaemonWriteAccess", "AWSElasticBeanstalkWebTier", "APIGatewayServiceRolePolicy", "AWSElasticBeanstalkWorkerTier", "AWSXrayWriteOnlyAccess", "AWSLambdaFullAccess"], "xray:puttracesegments": ["AWSAppSyncServiceRolePolicy", "AWSXRayDaemonWriteAccess", "AWSElasticBeanstalkWebTier", "APIGatewayServiceRolePolicy", "AWSElasticBeanstalkWorkerTier", "AWSXrayWriteOnlyAccess", "AWSLambdaFullAccess"], "pricing:*": ["AWSPriceListServiceFullAccess"], "ec2:attachclassiclinkvpc": ["NetworkAdministrator", "AmazonVPCFullAccess", "AutoScalingServiceRolePolicy", "SystemAdministrator"], "ec2:createfleet": ["AWSThinkboxAWSPortalAdminPolicy", "EC2FleetTimeShiftableServiceRolePolicy", "AutoScalingServiceRolePolicy", "AmazonElasticMapReduceRole"], "ec2:deletetags": ["AmazonSSMAutomationRole", "DataScientist", "AmazonEKSServicePolicy", "AWSOpsWorksCMServiceRole", "AWSDeepRacerCloudFormationAccessPolicy", "AWSServiceRoleForSMS", "AmazonEKSServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess", "AWSDataPipelineRole", "AWSGlueConsoleFullAccess", "AWSGlueServiceRole", "AWSGlueServiceNotebookRole", "AWSConnector", "AWSDirectoryServiceFullAccess", "AutoScalingServiceRolePolicy", "AmazonElasticMapReduceRole", "AWSElasticBeanstalkRoleCore", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:detachclassiclinkvpc": ["NetworkAdministrator", "AmazonVPCFullAccess", "AutoScalingServiceRolePolicy", "SystemAdministrator"], "ec2:requestspotinstances": ["AWSEC2FleetServiceRolePolicy", "DataScientist", "AWSEC2SpotFleetServiceRolePolicy", "AutoScalingServiceRolePolicy", "AmazonElasticMapReduceRole", "AmazonElasticMapReduceFullAccess", "AmazonEC2SpotFleetTaggingRole", "AWSCompromisedKeyQuarantine", "AWSDataPipelineRole"], "elasticloadbalancing:register*": ["AutoScalingServiceRolePolicy"], "elasticloadbalancing:deregister*": ["AutoScalingServiceRolePolicy"], "ssm:describeassociation": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM", "AWSSupportServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:getdeployablepatchsnapshotforinstance": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM", "AWSSupportServiceRolePolicy"], "ssm:getdocument": ["AmazonSSMManagedInstanceCore", "AWS_ConfigRole", "AWSConfigRemediationServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWS_Config_Role", "AWSConfigRole", "AmazonEC2RoleforSSM", "ConfigConformsServiceRolePolicy", "AWSConfigServiceRolePolicy"], "ssm:getmanifest": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ssm:getparameters": ["AmazonSSMManagedInstanceCore", "AmazonSSMMaintenanceWindowRole", "AmazonSSMServiceRolePolicy", "AmazonECS_FullAccess", "AmazonEC2RoleforSSM", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:listassociations": ["AmazonSSMManagedInstanceCore", "AWSLicenseManagerMemberAccountRolePolicy", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonEC2RoleforSSM"], "ssm:listinstanceassociations": ["AmazonSSMManagedInstanceCore", "AmazonLaunchWizard_Fullaccess", "AmazonEC2RoleforSSM"], "ssm:putinventory": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ssm:putcomplianceitems": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ssm:putconfigurepackageresult": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ssm:updateassociationstatus": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ssm:updateinstanceassociationstatus": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ssm:updateinstanceinformation": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ssmmessages:createcontrolchannel": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM", "AmazonSSMFullAccess"], "ssmmessages:createdatachannel": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM", "AmazonSSMFullAccess"], "ssmmessages:opencontrolchannel": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM", "AmazonSSMFullAccess"], "ssmmessages:opendatachannel": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM", "AmazonSSMFullAccess"], "ec2messages:acknowledgemessage": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ec2messages:deletemessage": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ec2messages:failmessage": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ec2messages:getendpoint": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ec2messages:getmessages": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "ec2messages:sendreply": ["AmazonSSMManagedInstanceCore", "AmazonEC2RoleforSSM"], "cloudwatch:putmetricdata": ["AmazonRDSBetaServiceRolePolicy", "AmazonRDSServiceRolePolicy", "GameLiftGameServerGroupPolicy", "AmazonSageMakerFullAccess", "AWSDeepRacerRoboMakerAccessPolicy", "CloudWatchAgentServerPolicy", "CloudWatchAgentAdminPolicy", "AmazonFSxServiceRolePolicy", "AmazonPersonalizeFullAccess", "AmazonSageMakerGroundTruthExecution", "AmazonRDSPreviewServiceRolePolicy", "AWSGlueServiceRole", "AWSElasticBeanstalkWorkerTier", "AmazonEC2RoleforSSM", "ElastiCacheServiceRolePolicy", "AmazonSSMFullAccess", "AWSIoTRuleActions"], "ds:createcomputer": ["AmazonSSMDirectoryServiceAccess", "AmazonLaunchWizard_Fullaccess", "AmazonEC2RoleforSSM", "AmazonSSMFullAccess"], "s3:getencryptionconfiguration": ["AWS_ConfigRole", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonGuardDutyServiceRolePolicy", "AWSConfigRole", "AmazonEC2RoleforSSM", "AWSConfigServiceRolePolicy"], "ec2:describelaunchtemplateversions": ["AutoScalingConsoleFullAccess", "GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkService", "AWSTrustedAdvisorServiceRolePolicy", "AutoScalingFullAccess", "AWSSupportServiceRolePolicy", "AWSBatchFullAccess", "AWSBatchServiceRole"], "ec2:describeplacementgroups": ["AutoScalingConsoleFullAccess", "AWSBackupOperatorAccess", "AWSBackupFullAccess", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AutoScalingFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "elasticloadbalancing:describetargetgroups": ["AmazonInspectorServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy", "AWSElasticBeanstalkService", "AWSCodeDeployRole", "AmazonEKSClusterPolicy", "AWSElasticBeanstalkServiceRolePolicy", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AWSCodeDeployRoleForECS", "ViewOnlyAccess", "AutoScalingFullAccess", "AWSCodeDeployRoleForECSLimited"], "translate:*": ["TranslateFullAccess"], "comprehend:detectdominantlanguage": ["TranslateFullAccess", "ComprehendReadOnly", "TranslateReadOnly"], "ec2:rebootinstances": ["CloudWatchEventsServiceRolePolicy", "CloudWatchActionsEC2Access", "CloudWatchEventsBuiltInTargetExecutionAccess", "AWSOpsWorksCMServiceRole", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "SystemAdministrator"], "ec2:createsnapshot": ["CloudWatchEventsServiceRolePolicy", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSBackupServiceRolePolicyForBackup", "AWSDataLifecycleManagerServiceRole", "CloudWatchEventsBuiltInTargetExecutionAccess", "AWSOpsWorksCMServiceRole", "SystemAdministrator"], "iam:listsamlproviders": ["AWSSupportServiceRolePolicy", "AWSMobileHub_FullAccess", "SystemAdministrator", "AWSMobileHub_ReadOnly", "AmazonCognitoPowerUser"], "lex:getintent": ["AmazonLexReadOnly", "AWSMobileHub_ReadOnly", "AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "lex:getintents": ["AmazonLexReadOnly", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AWSMobileHub_ReadOnly", "AWSMobileHub_FullAccess"], "lex:getslottype": ["AmazonLexReadOnly", "AWSMobileHub_ReadOnly", "AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "lex:getslottypes": ["AmazonLexReadOnly", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AWSMobileHub_ReadOnly", "AWSMobileHub_FullAccess"], "lex:getbot": ["AmazonLexReadOnly", "AWSMobileHub_ReadOnly", "AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "lex:getbots": ["AmazonLexReadOnly", "AmazonConnectFullAccess", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AWSMobileHub_ReadOnly", "AWSMobileHub_FullAccess"], "lex:getbotalias": ["AmazonLexReadOnly", "AWSMobileHub_ReadOnly", "AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "lex:getbotaliases": ["AmazonLexReadOnly", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AWSMobileHub_ReadOnly", "AWSMobileHub_FullAccess"], "mobilehub:exportproject": ["AWSMobileHub_ReadOnly"], "mobilehub:generateprojectparameters": ["AWSMobileHub_ReadOnly"], "mobilehub:synchronizeproject": ["AWSMobileHub_ReadOnly"], "mobilehub:getprojectsnapshot": ["AWSMobileHub_ReadOnly"], "mobilehub:listprojectsnapshots": ["AWSMobileHub_ReadOnly"], "mobilehub:listavailableconnectors": ["AWSMobileHub_ReadOnly"], "mobilehub:listavailablefeatures": ["ViewOnlyAccess", "AWSMobileHub_ReadOnly"], "mobilehub:listavailableregions": ["ViewOnlyAccess", "AWSMobileHub_ReadOnly"], "mobilehub:listprojects": ["ViewOnlyAccess", "AWSMobileHub_ReadOnly"], "mobilehub:describebundle": ["AWSMobileHub_ReadOnly"], "mobilehub:exportbundle": ["AWSMobileHub_ReadOnly"], "mobilehub:listbundles": ["AWSMobileHub_ReadOnly"], "fms:getadminaccount": ["AWSSupportServiceRolePolicy", "AWSFMMemberReadOnlyAccess"], "waf-regional:get*": ["AWSWAFReadOnlyAccess", "AWSFMMemberReadOnlyAccess", "AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "AWSFMAdminReadOnlyAccess"], "waf-regional:list*": ["AWSWAFReadOnlyAccess", "AWSFMMemberReadOnlyAccess", "AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "AWSFMAdminReadOnlyAccess", "ViewOnlyAccess"], "autoscaling:describeautoscalinggroups": ["AWSAutoScalingPlansEC2AutoScalingPolicy", "GameLiftGameServerGroupPolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "CloudWatchAutomaticDashboardsAccess", "AWSElasticBeanstalkService", "AWSTrustedAdvisorServiceRolePolicy", "AWSElasticBeanstalkEnhancedHealth", "AWSCodeDeployRole", "AmazonEKSClusterPolicy", "ComputeOptimizerReadOnlyAccess", "AWS_Config_Role", "AWSElasticBeanstalkServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSBatchServiceRole", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "autoscaling:updateautoscalinggroup": ["GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkService", "AWSCodeDeployRole", "AmazonLaunchWizard_Fullaccess", "AmazonEKSClusterPolicy", "AmazonECSServiceRolePolicy", "AmazonECS_FullAccess", "AmazonEC2ContainerServiceFullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole"], "ec2:attachvolume": ["AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonLaunchWizard_Fullaccess", "AmazonEKSClusterPolicy", "SystemAdministrator"], "ec2:createroute": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "AmazonEKSClusterPolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonElasticMapReduceFullAccess", "AmazonDocDBConsoleFullAccess", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "NeptuneConsoleFullAccess"], "ec2:createvolume": ["AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonLaunchWizard_Fullaccess", "AmazonEKSClusterPolicy", "AWSBackupServiceRolePolicyForRestores", "SystemAdministrator", "AWSConnector"], "ec2:deleteroute": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "AmazonEKSClusterPolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonElasticMapReduceFullAccess", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:describevolumesmodifications": ["AmazonEKSClusterPolicy", "AWSSupportServiceRolePolicy", "AmazonEKSWorkerNodePolicy"], "ec2:describedhcpoptions": ["AmazonSageMakerFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy", "AmazonVPCReadOnlyAccess", "AmazonEKSClusterPolicy", "AmazonElasticMapReduceRole", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonVPCFullAccess"], "ec2:modifyvolume": ["AmazonLaunchWizard_Fullaccess", "AmazonEKSClusterPolicy"], "elasticloadbalancing:addtags": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:attachloadbalancertosubnets": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:configurehealthcheck": ["AmazonEKSClusterPolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkService"], "elasticloadbalancing:createlistener": ["AmazonECS_FullAccess", "AmazonEKSClusterPolicy"], "elasticloadbalancing:createloadbalancer": ["AmazonECS_FullAccess", "AmazonEKSClusterPolicy", "AWSElasticBeanstalkService"], "elasticloadbalancing:createloadbalancerlisteners": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:createloadbalancerpolicy": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:createtargetgroup": ["AmazonECS_FullAccess", "AmazonEKSClusterPolicy"], "elasticloadbalancing:deletelistener": ["AmazonECS_FullAccess", "AmazonEKSClusterPolicy"], "elasticloadbalancing:deleteloadbalancer": ["AmazonECS_FullAccess", "AmazonEKSClusterPolicy", "AWSElasticBeanstalkService"], "elasticloadbalancing:deleteloadbalancerlisteners": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:deletetargetgroup": ["AmazonECS_FullAccess", "AmazonEKSClusterPolicy"], "elasticloadbalancing:deregisterinstancesfromloadbalancer": ["AWSElasticBeanstalkService", "AmazonEC2ContainerServiceRole", "AWSCodeDeployRole", "AmazonEKSClusterPolicy", "AmazonECSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "elasticloadbalancing:deregistertargets": ["AWSElasticBeanstalkService", "AmazonEC2ContainerServiceRole", "AWSCodeDeployRole", "AmazonEKSClusterPolicy", "AmazonECSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "elasticloadbalancing:describelisteners": ["AmazonInspectorServiceRolePolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AmazonEKSClusterPolicy", "APIGatewayServiceRolePolicy", "AWS_Config_Role", "AWSConfigRole", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AWSCodeDeployRoleForECS", "ViewOnlyAccess", "AWSCodeDeployRoleForECSLimited"], "elasticloadbalancing:describeloadbalancerattributes": ["AmazonInspectorServiceRolePolicy", "AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "AmazonEKSClusterPolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "elasticloadbalancing:describeloadbalancerpolicies": ["AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "AmazonEKSClusterPolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "elasticloadbalancing:describetargetgroupattributes": ["AmazonEKSClusterPolicy", "AWSSupportServiceRolePolicy"], "elasticloadbalancing:describetargethealth": ["AmazonInspectorServiceRolePolicy", "AWSElasticBeanstalkService", "AWSElasticBeanstalkEnhancedHealth", "AWSCodeDeployRole", "AmazonEKSClusterPolicy", "AWSElasticBeanstalkServiceRolePolicy", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "elasticloadbalancing:detachloadbalancerfromsubnets": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:modifylistener": ["AmazonEKSClusterPolicy", "APIGatewayServiceRolePolicy", "AmazonWorkLinkServiceRolePolicy", "AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForECSLimited"], "elasticloadbalancing:modifyloadbalancerattributes": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:modifytargetgroup": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:modifytargetgroupattributes": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:registerinstanceswithloadbalancer": ["AWSElasticBeanstalkService", "AmazonEC2ContainerServiceRole", "AWSCodeDeployRole", "AWSEC2SpotFleetServiceRolePolicy", "AmazonEKSClusterPolicy", "AmazonECSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AmazonEC2SpotFleetTaggingRole", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "elasticloadbalancing:registertargets": ["AWSElasticBeanstalkService", "AmazonEC2ContainerServiceRole", "AWSCodeDeployRole", "AWSEC2SpotFleetServiceRolePolicy", "AmazonEKSClusterPolicy", "AmazonECSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AmazonEC2SpotFleetTaggingRole", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "elasticloadbalancing:setloadbalancerpoliciesforbackendserver": ["AmazonEKSClusterPolicy"], "elasticloadbalancing:setloadbalancerpoliciesoflistener": ["AmazonEKSClusterPolicy", "AWSElasticBeanstalkRoleCore"], "cloudhsm:describe*": ["AWSCloudHSMReadOnlyAccess", "ReadOnlyAccess", "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy"], "ec2:createlaunchtemplate": ["AWSElasticBeanstalkService", "AmazonElasticMapReduceRole", "AWSServiceRoleForImageBuilder", "AmazonECS_FullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "AWSBatchServiceRole"], "ec2:describenetworkacls": ["AmazonInspectorServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonVPCReadOnlyAccess", "AmazonElasticMapReduceRole", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "AmazonElasticMapReduceFullAccess", "AmazonVPCFullAccess"], "ec2:describeprefixlists": ["AmazonInspectorServiceRolePolicy", "AmazonVPCReadOnlyAccess", "AmazonElasticMapReduceRole", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "ViewOnlyAccess", "AmazonVPCFullAccess", "NeptuneConsoleFullAccess"], "ec2:describespotpricehistory": ["AmazonElasticMapReduceRole", "AWSSupportServiceRolePolicy", "AmazonElasticMapReduceFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "AWSBatchServiceRole"], "ec2:describevpcendpoints": ["AmazonRDSBetaServiceRolePolicy", "AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AmazonAppStreamServiceAccess", "AmazonInspectorServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonRoute53FullAccess", "AmazonVPCReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "NetworkAdministrator", "AmazonVPCFullAccess", "AWSGlueConsoleFullAccess", "AmazonRDSServiceRolePolicy", "AWSGlueServiceRole", "AmazonRedshiftServiceLinkedRolePolicy", "AccessAnalyzerServiceRolePolicy", "AmazonElasticMapReduceRole", "AmazonAppStreamFullAccess", "NeptuneConsoleFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:describevpcendpointservices": ["AmazonVPCReadOnlyAccess", "AmazonElasticMapReduceRole", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "AmazonVPCFullAccess"], "ec2:modifyimageattribute": ["DataScientist", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonElasticMapReduceRole", "AWSMarketplaceSellerProductsFullAccess", "AWSMarketplaceSellerFullAccess", "AWSServiceRoleForImageBuilder", "AmazonElasticMapReduceFullAccess", "AWSMarketplaceAmiIngestion", "AWSDataPipelineRole"], "sdb:batchputattributes": ["AWSDataPipelineRole", "AmazonElasticMapReduceRole"], "sdb:select": ["AmazonElasticMapReduceReadOnlyAccess", "AmazonElasticMapReduceRole"], "sqs:createqueue": ["AmazonLaunchWizard_Fullaccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AmazonElasticMapReduceRole", "AmazonSageMakerGroundTruthExecution", "AmazonChimeFullAccess", "AWSDataPipelineRole"], "sqs:delete*": ["AWSDataPipelineRole", "AmazonElasticMapReduceRole"], "sqs:getqueue*": ["AWSDataPipelineRole", "AmazonElasticMapReduceRole"], "sqs:purgequeue": ["AWSDataPipelineRole", "AmazonElasticMapReduceRole"], "application-autoscaling:describe*": ["ReadOnlyAccess", "AmazonElasticMapReduceRole", "SecurityAudit"], "xray:getsamplingrules": ["AWSAppSyncServiceRolePolicy", "AWSXRayDaemonWriteAccess", "AWSElasticBeanstalkWebTier", "APIGatewayServiceRolePolicy", "AWSElasticBeanstalkWorkerTier", "AWSXrayReadOnlyAccess", "AWSXrayWriteOnlyAccess"], "xray:getsamplingtargets": ["AWSAppSyncServiceRolePolicy", "AWSXRayDaemonWriteAccess", "AWSElasticBeanstalkWebTier", "APIGatewayServiceRolePolicy", "AWSElasticBeanstalkWorkerTier", "AWSXrayReadOnlyAccess", "AWSXrayWriteOnlyAccess"], "xray:getsamplingstatisticsummaries": ["AWSAppSyncServiceRolePolicy", "AWSXRayDaemonWriteAccess", "AWSElasticBeanstalkWebTier", "AWSElasticBeanstalkWorkerTier", "AWSXrayReadOnlyAccess", "AWSXrayWriteOnlyAccess"], "ssm:getparameter": ["AmazonSSMManagedInstanceCore", "CloudWatchAgentServerPolicy", "CloudWatchAgentAdminPolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AmazonECS_FullAccess"], "ssm:putparameter": ["AWSCodeBuildAdminAccess", "AmazonLaunchWizard_Fullaccess", "CloudWatchAgentAdminPolicy", "AWSCodeBuildDeveloperAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "clouddirectory:list*": ["ReadOnlyAccess", "AmazonCloudDirectoryReadOnlyAccess"], "clouddirectory:get*": ["ReadOnlyAccess", "AmazonCloudDirectoryReadOnlyAccess"], "clouddirectory:lookuppolicy": ["ReadOnlyAccess", "AmazonCloudDirectoryReadOnlyAccess"], "clouddirectory:batchread": ["ReadOnlyAccess", "AmazonCloudDirectoryReadOnlyAccess"], "elastictranscoder:*": ["AmazonElasticTranscoder_FullAccess"], "opsworks:*": ["AWSOpsWorksRole", "AWSOpsWorksFullAccess"], "elasticloadbalancing:describeinstancehealth": ["AWSElasticBeanstalkService", "AWSTrustedAdvisorServiceRolePolicy", "AWSElasticBeanstalkEnhancedHealth", "AWSCodeDeployRole", "AWSElasticBeanstalkServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSOpsWorksRole", "ViewOnlyAccess", "AWSOpsWorksFullAccess"], "batch:submitjob": ["AWSBatchServiceEventTargetRole"], "swf:*": ["SimpleWorkflowFullAccess"], "eks:describecluster": ["AWS_ConfigRole", "ReadOnlyAccess", "AmazonEKSWorkerNodePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "athena:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SecurityAudit"], "batch:listjobs": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "clouddirectory:listappliedschemaarns": ["ViewOnlyAccess"], "clouddirectory:listdevelopmentschemaarns": ["ViewOnlyAccess"], "clouddirectory:listdirectories": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "clouddirectory:listpublishedschemaarns": ["ViewOnlyAccess"], "cloudhsm:listavailablezones": ["ViewOnlyAccess"], "cloudhsm:listlunaclients": ["ViewOnlyAccess", "SecurityAudit"], "cloudhsm:listhapgs": ["ViewOnlyAccess", "SecurityAudit"], "cloudhsm:listhsms": ["ViewOnlyAccess", "SecurityAudit"], "cloudsearch:describedomains": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "codebuild:listbuilds*": ["ViewOnlyAccess"], "codebuild:listprojects": ["ViewOnlyAccess", "AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "codestar:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SecurityAudit"], "codestar:verify*": ["ReadOnlyAccess", "ViewOnlyAccess"], "cognito-identity:listidentities": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "cognito-sync:listdatasets": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "connect:list*": ["AmazonConnectReadOnlyAccess", "ReadOnlyAccess", "ViewOnlyAccess"], "config:list*": ["AWS_ConfigRole", "ReadOnlyAccess", "AWSConfigUserAccess", "AWS_Config_Role", "SecurityAudit", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigRulesExecutionRole", "AWSConfigServiceRolePolicy"], "config:describe*": ["AWS_ConfigRole", "ReadOnlyAccess", "AWSConfigUserAccess", "AWS_Config_Role", "SecurityAudit", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigRulesExecutionRole", "AWSConfigServiceRolePolicy"], "datapipeline:getaccountlimits": ["ViewOnlyAccess"], "dax:describeclusters": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "dax:describedefaultparameters": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "dax:describeevents": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "dax:describeparametergroups": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "dax:describeparameters": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "dax:describesubnetgroups": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "dax:listtags": ["ReadOnlyAccess", "ViewOnlyAccess", "SecurityAudit"], "discovery:list*": ["ReadOnlyAccess", "ViewOnlyAccess"], "dynamodb:describebackup": ["ViewOnlyAccess", "AWSBackupServiceRolePolicyForBackup", "AWSSupportServiceRolePolicy"], "dynamodb:describecontinuousbackups": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "dynamodb:describeglobaltable": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "dynamodb:describeglobaltablesettings": ["ViewOnlyAccess"], "dynamodb:describereservedcapacity": ["ViewOnlyAccess"], "dynamodb:describereservedcapacityofferings": ["ViewOnlyAccess"], "dynamodb:describestream": ["DynamoDBReplicationServiceRolePolicy", "AWSLambdaDynamoDBExecutionRole", "AWSLambdaInvocation-DynamoDB", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSSupportServiceRolePolicy", "AWSLambdaReadOnlyAccess", "ViewOnlyAccess"], "dynamodb:describetimetolive": ["DynamoDBReplicationServiceRolePolicy", "AWSSupportServiceRolePolicy", "SecurityAudit", "ViewOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "dynamodb:listbackups": ["AWSBackupOperatorAccess", "AWSBackupFullAccess", "AWSSupportServiceRolePolicy", "SecurityAudit", "ViewOnlyAccess"], "dynamodb:listglobaltables": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "dynamodb:liststreams": ["AWSLambdaDynamoDBExecutionRole", "AWSLambdaInvocation-DynamoDB", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSLambdaReadOnlyAccess", "ViewOnlyAccess"], "dynamodb:listtagsofresource": ["AWS_ConfigRole", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "ec2:describebundletasks": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "ec2:describeclassiclinkinstances": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonVPCReadOnlyAccess", "ElasticLoadBalancingReadOnly", "NetworkAdministrator", "ElasticLoadBalancingFullAccess", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonVPCFullAccess"], "ec2:describeconversiontasks": ["ViewOnlyAccess", "AWSConnector", "AWSSupportServiceRolePolicy"], "ec2:describecustomergateways": ["AmazonInspectorServiceRolePolicy", "AWSNetworkManagerServiceRolePolicy", "AmazonVPCReadOnlyAccess", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "ViewOnlyAccess", "AmazonVPCFullAccess", "NeptuneConsoleFullAccess"], "ec2:describeexporttasks": ["ViewOnlyAccess", "AWSConnector", "AWSSupportServiceRolePolicy"], "ec2:describeflowlogs": ["AmazonVPCReadOnlyAccess", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonVPCFullAccess"], "ec2:describehost*": ["ViewOnlyAccess"], "ec2:describeimage*": ["ViewOnlyAccess"], "ec2:describeimport*": ["ViewOnlyAccess"], "ec2:describeinstance*": ["ViewOnlyAccess"], "ec2:describemovingaddresses": ["AmazonVPCReadOnlyAccess", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonVPCFullAccess"], "ec2:describenetwork*": ["ViewOnlyAccess"], "ec2:describeregions": ["AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonInspectorServiceRolePolicy", "AWSCloudMapFullAccess", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonRoute53AutoNamingFullAccess", "AmazonRoute53FullAccess", "AWSWAFConsoleReadOnlyAccess", "AWSWAFConsoleFullAccess", "AWSSupportServiceRolePolicy", "GlobalAcceleratorFullAccess", "ViewOnlyAccess", "AWSImageBuilderFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "AWSConnector"], "ec2:describereserved*": ["ViewOnlyAccess"], "ec2:describesnapshot*": ["ViewOnlyAccess"], "ec2:describespot*": ["ViewOnlyAccess"], "ec2:describevolume*": ["ViewOnlyAccess"], "ec2:describevpc*": ["ViewOnlyAccess"], "elasticbeanstalk:describeapplicationversions": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeapplications": ["ViewOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeenvironments": ["CloudWatchAutomaticDashboardsAccess", "AmazonRoute53FullAccess", "AWSResourceGroupsReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy", "ViewOnlyAccess"], "elasticbeanstalk:listavailablesolutionstacks": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "es:describeelasticsearchdomain": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "es:describeelasticsearchdomains": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "es:listdomainnames": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "events:listrules": ["AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy", "AmazonEventBridgeReadOnlyAccess", "ViewOnlyAccess", "CloudWatchEventsReadOnlyAccess"], "firehose:describedeliverystream": ["APIGatewayServiceRolePolicy", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AmazonKinesisAnalyticsReadOnly", "AmazonConnectFullAccess", "AWSSupportServiceRolePolicy", "ViewOnlyAccess", "AmazonKinesisAnalyticsFullAccess"], "greengrass:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSGreengrassReadOnlyAccess", "SecurityAudit"], "iam:getaccountsummary": ["AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "ServiceQuotasReadOnlyAccess", "AWS_Config_Role", "ServiceQuotasFullAccess", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "iam:getloginprofile": ["ViewOnlyAccess", "SystemAdministrator", "AWSSupportServiceRolePolicy"], "lex:getbotchannelassociations": ["ViewOnlyAccess", "AmazonLexReadOnly", "AWSSupportServiceRolePolicy"], "lex:getbotversions": ["ViewOnlyAccess", "AmazonLexReadOnly", "AWSSupportServiceRolePolicy"], "lex:getintentversions": ["ViewOnlyAccess", "AmazonLexReadOnly", "AWSSupportServiceRolePolicy"], "lex:getslottypeversions": ["ViewOnlyAccess", "AmazonLexReadOnly", "AWSSupportServiceRolePolicy"], "lex:getutterancesview": ["ViewOnlyAccess", "AmazonLexReadOnly"], "lightsail:getblueprints": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getbundles": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getinstances": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "lightsail:getinstancesnapshots": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getkeypair": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getregions": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getstaticips": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:isvpcpeered": ["ViewOnlyAccess"], "opsworks-cm:describe*": ["ReadOnlyAccess", "ViewOnlyAccess"], "organizations:list*": ["AWSOrganizationsReadOnlyAccess", "AWSMarketplaceProcurementSystemAdminFullAccess", "ReadOnlyAccess", "CloudFormationStackSetsOrgAdminServiceRolePolicy", "SecurityAudit", "ViewOnlyAccess"], "mobiletargeting:getapplicationsettings": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "mobiletargeting:getcampaigns": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "mobiletargeting:getimportjobs": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "mobiletargeting:getsegments": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "polly:describe*": ["ReadOnlyAccess", "ViewOnlyAccess"], "polly:list*": ["ReadOnlyAccess", "ViewOnlyAccess"], "redshift:describeevents": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "redshift:viewqueriesinconsole": ["AmazonRedshiftReadOnlyAccess", "ViewOnlyAccess"], "route53resolver:get*": ["ReadOnlyAccess", "ViewOnlyAccess", "AmazonRoute53ResolverReadOnlyAccess", "SecurityAudit"], "route53resolver:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "AmazonRoute53ResolverReadOnlyAccess", "SecurityAudit"], "sagemaker:describe*": ["ReadOnlyAccess", "ViewOnlyAccess", "AmazonSageMakerReadOnly", "SecurityAudit"], "sagemaker:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "AmazonSageMakerReadOnly", "SecurityAudit"], "servicecatalog:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess"], "shield:list*": ["ReadOnlyAccess", "ViewOnlyAccess", "SecurityAudit"], "states:listactivities": ["AWSStepFunctionsReadOnlyAccess", "ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "states:liststatemachines": ["AWSStepFunctionsReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy", "SecurityAudit", "ViewOnlyAccess"], "storagegateway:listgateways": ["AWS_ConfigRole", "AWSBackupOperatorAccess", "AWSResourceGroupsReadOnlyAccess", "AWSBackupFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "storagegateway:listlocaldisks": ["ViewOnlyAccess", "AWSBackupOperatorAccess", "AWSBackupFullAccess", "AWSSupportServiceRolePolicy"], "storagegateway:listvolumerecoverypoints": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "storagegateway:listvolumes": ["AWS_ConfigRole", "AWSBackupOperatorAccess", "AWSBackupFullAccess", "AWS_Config_Role", "AWSBackupServiceRolePolicyForRestores", "AWSSupportServiceRolePolicy", "AWSConfigRole", "ViewOnlyAccess", "AWSConfigServiceRolePolicy"], "trustedadvisor:describe*": ["ReadOnlyAccess", "ViewOnlyAccess", "SecurityAudit"], "wafv2:list*": ["AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "ViewOnlyAccess", "AWSWAFReadOnlyAccess"], "workdocs:describeavailabledirectories": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "workdocs:describeinstances": ["ViewOnlyAccess", "AWSSupportServiceRolePolicy"], "ssm:describeautomationexecutions": ["AmazonSSMAutomationApproverAccess", "AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "ssm:sendautomationsignal": ["AmazonSSMAutomationApproverAccess", "AWSServiceRoleForImageBuilder", "AmazonLaunchWizard_Fullaccess"], "elasticmapreduce:listinstances": ["AWS_ConfigRole", "AWS_Config_Role", "AWSConfigRole", "AWSSupportServiceRolePolicy", "SecurityAudit", "AmazonElasticMapReduceforEC2Role", "AmazonElasticMapReduceEditorsRole", "AWSConfigServiceRolePolicy"], "elasticmapreduce:describecluster": ["AWS_ConfigRole", "AWSResourceGroupsReadOnlyAccess", "AWS_Config_Role", "AWSConfigRole", "AWSSupportServiceRolePolicy", "AmazonElasticMapReduceEditorsRole", "AWSConfigServiceRolePolicy"], "route53domains:get*": ["AmazonRoute53DomainsReadOnlyAccess", "ReadOnlyAccess"], "cognito-idp:describeuserpoolclient": ["AmazonSageMakerFullAccess", "AmazonESCognitoAccess", "ElasticLoadBalancingFullAccess", "AWSSupportServiceRolePolicy", "AmazonSageMakerReadOnly"], "codepipeline:getpipelineexecution": ["AWSCodePipeline_ReadOnlyAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSCodePipelineApproverAccess"], "codepipeline:listpipelineexecutions": ["AWSCodePipeline_ReadOnlyAccess", "AWSCodePipelineReadOnlyAccess", "AWSCodePipelineApproverAccess"], "codepipeline:putapprovalresult": ["AWSCodePipelineApproverAccess"], "fsx:*": ["AmazonFSxConsoleFullAccess", "AmazonFSxFullAccess"], "cloudformation:signalresource": ["AmazonLaunchWizard_Fullaccess", "AWSOpsWorksCMInstanceProfileRole"], "ecr:*": ["AmazonEC2ContainerRegistryFullAccess", "AWSElasticBeanstalkFullAccess"], "ecr:getauthorizationtoken": ["AmazonSageMakerFullAccess", "AmazonECSTaskExecutionRolePolicy", "AmazonEC2ContainerRegistryReadOnly", "AmazonEC2ContainerServiceforEC2Role", "AmazonEC2ContainerRegistryPowerUser", "AmazonEKSFargatePodExecutionRolePolicy"], "ecr:getdownloadurlforlayer": ["AmazonSageMakerFullAccess", "AmazonECSTaskExecutionRolePolicy", "AmazonEC2ContainerRegistryReadOnly", "AmazonEC2ContainerServiceforEC2Role", "AmazonEC2ContainerRegistryPowerUser", "AmazonEKSFargatePodExecutionRolePolicy"], "ecr:describeimages": ["AmazonEC2ContainerRegistryPowerUser", "AmazonEC2ContainerRegistryReadOnly", "AWSSupportServiceRolePolicy"], "ecr:batchgetimage": ["AmazonSageMakerFullAccess", "AmazonECSTaskExecutionRolePolicy", "AmazonEC2ContainerRegistryReadOnly", "AmazonEC2ContainerServiceforEC2Role", "AmazonEC2ContainerRegistryPowerUser", "AmazonEKSFargatePodExecutionRolePolicy"], "ecr:getlifecyclepolicy": ["AmazonEC2ContainerRegistryPowerUser", "AmazonEC2ContainerRegistryReadOnly"], "ecr:getlifecyclepolicypreview": ["AmazonEC2ContainerRegistryPowerUser", "AmazonEC2ContainerRegistryReadOnly"], "ecr:listtagsforresource": ["AmazonEC2ContainerRegistryPowerUser", "AmazonEC2ContainerRegistryReadOnly"], "ecr:describeimagescanfindings": ["AmazonEC2ContainerRegistryPowerUser", "AmazonEC2ContainerRegistryReadOnly"], "appstream:updatefleet": ["AWSApplicationAutoscalingAppStreamFleetPolicy", "ApplicationAutoScalingForAmazonAppStreamAccess"], "appstream:describefleets": ["AWSApplicationAutoscalingAppStreamFleetPolicy", "AWSSupportServiceRolePolicy", "ApplicationAutoScalingForAmazonAppStreamAccess"], "ec2:describeegressonlyinternetgateways": ["NetworkAdministrator", "AmazonVPCReadOnlyAccess", "AmazonVPCFullAccess"], "ec2:describevpcclassiclinkdnssupport": ["NetworkAdministrator", "AmazonVPCReadOnlyAccess", "AmazonVPCFullAccess", "AWSSupportServiceRolePolicy"], "ec2:describevpcendpointconnectionnotifications": ["NetworkAdministrator", "AmazonVPCReadOnlyAccess", "AmazonVPCFullAccess", "AWSSupportServiceRolePolicy"], "ec2:describevpcendpointconnections": ["NetworkAdministrator", "AmazonVPCReadOnlyAccess", "AmazonVPCFullAccess", "AWSSupportServiceRolePolicy"], "ec2:describevpcendpointserviceconfigurations": ["AmazonInspectorServiceRolePolicy", "AmazonVPCReadOnlyAccess", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "AmazonVPCFullAccess"], "ec2:describevpcendpointservicepermissions": ["NetworkAdministrator", "AmazonVPCReadOnlyAccess", "AmazonVPCFullAccess", "AWSSupportServiceRolePolicy"], "ec2:describevpnconnections": ["AmazonInspectorServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy", "AWSNetworkManagerServiceRolePolicy", "AmazonVPCReadOnlyAccess", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "AmazonVPCFullAccess"], "aws-portal:*billing": ["AWSPurchaseOrdersServiceRolePolicy", "Billing"], "aws-portal:*usage": ["Billing"], "aws-portal:*paymentmethods": ["Billing"], "budgets:viewbudget": ["Billing", "AWSSupportServiceRolePolicy"], "budgets:modifybudget": ["Billing"], "cur:*": ["Billing"], "purchase-orders:*purchaseorders": ["AWSPurchaseOrdersServiceRolePolicy", "Billing"], "securityhub:get*": ["ReadOnlyAccess", "AWSSecurityHubReadOnlyAccess", "SecurityAudit"], "securityhub:list*": ["ReadOnlyAccess", "AWSSecurityHubReadOnlyAccess", "SecurityAudit"], "securityhub:describe*": ["ReadOnlyAccess", "AWSSecurityHubReadOnlyAccess", "SecurityAudit"], "xray:batchgettraces": ["CloudWatchSyntheticsFullAccess", "AWSXrayReadOnlyAccess"], "xray:getservicegraph": ["AWSXrayReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "xray:gettracegraph": ["AWSXrayReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "xray:gettracesummaries": ["CloudWatchSyntheticsFullAccess", "AWSXrayReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "xray:getgroups": ["AWSXrayReadOnlyAccess"], "xray:getgroup": ["AWSXrayReadOnlyAccess"], "xray:listtagsforresource": ["AWSXrayReadOnlyAccess"], "xray:gettimeseriesservicestatistics": ["AWSXrayReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "xray:getinsightsummaries": ["AWSXrayReadOnlyAccess"], "xray:getinsight": ["AWSXrayReadOnlyAccess"], "xray:getinsightevents": ["AWSXrayReadOnlyAccess"], "xray:getinsightimpactgraph": ["AWSXrayReadOnlyAccess"], "elasticmapreduce:listbootstrapactions": ["AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy"], "elasticmapreduce:listclusters": ["AWS_ConfigRole", "AWSResourceGroupsReadOnlyAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AmazonElasticMapReduceforEC2Role", "AWSConfigRole", "SecurityAudit", "AWSConfigServiceRolePolicy"], "elasticmapreduce:listinstancegroups": ["AWSApplicationAutoscalingEMRInstanceGroupPolicy", "AmazonElasticMapReduceforAutoScalingRole", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy"], "elasticmapreduce:liststeps": ["AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy"], "kinesis:createstream": ["AmazonRDSServiceRolePolicy", "AmazonKinesisAnalyticsFullAccess", "AmazonElasticMapReduceforEC2Role"], "kinesis:deletestream": ["AmazonRDSServiceRolePolicy", "AmazonKinesisAnalyticsFullAccess", "AmazonElasticMapReduceforEC2Role"], "kinesis:getrecords": ["AmazonElasticMapReduceforEC2Role", "AWSLambdaKinesisExecutionRole"], "kinesis:getsharditerator": ["AmazonElasticMapReduceforEC2Role", "AWSLambdaKinesisExecutionRole"], "kinesis:mergeshards": ["AmazonRDSServiceRolePolicy", "AmazonElasticMapReduceforEC2Role"], "kinesis:splitshard": ["AmazonRDSServiceRolePolicy", "AmazonElasticMapReduceforEC2Role"], "sdb:*": ["AmazonElasticMapReduceFullAccess", "AmazonEC2RoleforDataPipelineRole", "AmazonElasticMapReduceforEC2Role", "DataScientist"], "sns:*": ["AWSCodeStarServiceRole", "CloudWatchFullAccess", "AmazonEC2RoleforDataPipelineRole", "AmazonElasticMapReduceforEC2Role", "SystemAdministrator", "AmazonSNSFullAccess", "AWSElasticBeanstalkFullAccess"], "glue:gettableversions": ["AWSLakeFormationDataAdmin", "ReadOnlyAccess", "AWSDiscoveryContinuousExportFirehosePolicy", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy", "AWSGlueServiceNotebookRole"], "glue:createuserdefinedfunction": ["AWSGlueServiceNotebookRole", "AmazonElasticMapReduceforEC2Role"], "glue:updateuserdefinedfunction": ["AWSGlueServiceNotebookRole", "AmazonElasticMapReduceforEC2Role"], "glue:deleteuserdefinedfunction": ["AWSGlueServiceNotebookRole", "AmazonElasticMapReduceforEC2Role"], "glue:getuserdefinedfunction": ["ReadOnlyAccess", "AWSGlueServiceNotebookRole", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy"], "glue:getuserdefinedfunctions": ["ReadOnlyAccess", "AWSGlueServiceNotebookRole", "AmazonElasticMapReduceforEC2Role", "AWSSupportServiceRolePolicy"], "cloudwatch:disablealarmactions": ["AmazonRedshiftFullAccess", "DatabaseAdministrator"], "cloudwatch:enablealarmactions": ["AmazonRedshiftFullAccess", "DatabaseAdministrator"], "datapipeline:activatepipeline": ["AmazonDynamoDBFullAccess", "DatabaseAdministrator"], "datapipeline:createpipeline": ["AmazonDynamoDBFullAccess", "DatabaseAdministrator"], "datapipeline:deletepipeline": ["AmazonDynamoDBFullAccess", "DatabaseAdministrator"], "datapipeline:putpipelinedefinition": ["AmazonDynamoDBFullAccess", "DatabaseAdministrator"], "lambda:createeventsourcemapping": ["AmazonDynamoDBFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "DatabaseAdministrator"], "lambda:deleteeventsourcemapping": ["AmazonDynamoDBFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "DatabaseAdministrator"], "lambda:deletefunction": ["AWSDeepRacerServiceRolePolicy", "AWSLambdaReplicator", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "DatabaseAdministrator", "AWSDeepLensServiceRolePolicy", "AmazonDynamoDBFullAccess", "AWSRoboMakerServicePolicy"], "lambda:listeventsourcemappings": ["AmazonDynamoDBReadOnlyAccess", "DatabaseAdministrator", "AWSSupportServiceRolePolicy", "AmazonDynamoDBFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "logs:filterlogevents": ["ReadOnlyAccess", "DatabaseAdministrator", "CloudWatchReadOnlyAccess", "AmazonECS_FullAccess", "CloudWatchLogsReadOnlyAccess", "AWSBatchFullAccess", "AmazonAPIGatewayPushToCloudWatchLogs", "AmazonBraketFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "logs:create*": ["DatabaseAdministrator"], "redshift:*": ["AmazonRedshiftFullAccess", "DatabaseAdministrator", "DataScientist"], "s3:deleteobject*": ["DatabaseAdministrator"], "s3:putaccelerateconfiguration": ["DatabaseAdministrator", "DataScientist"], "s3:putbuckettagging": ["AWSThinkboxAWSPortalAdminPolicy", "AWSOpsWorksCMServiceRole", "DatabaseAdministrator", "DataScientist"], "s3:putbucketwebsite": ["DatabaseAdministrator"], "s3:putreplicationconfiguration": ["DatabaseAdministrator"], "s3:putobject*": ["DatabaseAdministrator"], "s3:replicate*": ["DatabaseAdministrator", "DataScientist"], "s3:restoreobject": ["DatabaseAdministrator", "DataScientist"], "robomaker:*": ["AWSDeepRacerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "AWSRoboMakerFullAccess"], "elasticmapreduce:getblockpublicaccessconfiguration": ["AmazonElasticMapReduceReadOnlyAccess", "AWS_ConfigRole", "ReadOnlyAccess", "AWS_Config_Role", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "elasticmapreduce:vieweventsfromallclustersinconsole": ["AmazonElasticMapReduceReadOnlyAccess"], "ec2:getconsoleoutput": ["AWSElasticBeanstalkEnhancedHealth", "AmazonLaunchWizard_Fullaccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:associateaddress": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonRedshiftServiceLinkedRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AWSElasticBeanstalkService", "AWSElasticBeanstalkEnhancedHealth", "AmazonLaunchWizard_Fullaccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "NetworkAdministrator", "AWSElasticBeanstalkServiceRolePolicy", "AWSOpsWorksCMServiceRole", "AWSElasticBeanstalkRoleCore", "AmazonDocDBConsoleFullAccess", "AmazonAppStreamServiceAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "NeptuneConsoleFullAccess"], "autoscaling:describeautoscalinginstances": ["AWSElasticBeanstalkService", "AWSElasticBeanstalkEnhancedHealth", "AWSElasticBeanstalkServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSBatchServiceRole"], "autoscaling:describescalingactivities": ["AWSElasticBeanstalkService", "AWSElasticBeanstalkEnhancedHealth", "AWSCodeDeployRole", "AWSElasticBeanstalkServiceRolePolicy", "AWSSupportServiceRolePolicy"], "autoscaling:describenotificationconfigurations": ["AWSElasticBeanstalkService", "AWSElasticBeanstalkEnhancedHealth", "AWSCodeDeployRole", "AWSElasticBeanstalkServiceRolePolicy", "AWSSupportServiceRolePolicy"], "mobileanalytics:*": ["AmazonMobileAnalyticsFullAccess"], "s3:getanalyticsconfiguration": ["SecurityAudit", "AWSSupportServiceRolePolicy", "QuickSightAccessForS3StorageManagementAnalyticsReadOnly"], "ecs:describeservices": ["AWSApplicationAutoscalingECSServicePolicy", "AmazonEC2ContainerServiceAutoscaleRole", "AWSSupportServiceRolePolicy", "AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForECSLimited"], "ecs:createtaskset": ["AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForECSLimited"], "ecs:updateserviceprimarytaskset": ["AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForECSLimited"], "ecs:deletetaskset": ["AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForECSLimited"], "elasticloadbalancing:describerules": ["AmazonInspectorServiceRolePolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWS_Config_Role", "AWSConfigRole", "AmazonECS_FullAccess", "AWSSupportServiceRolePolicy", "AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForECSLimited"], "elasticloadbalancing:modifyrule": ["AWSCodeDeployRoleForECS", "AWSCodeDeployRoleForECSLimited"], "ds:describetrusts": ["AWSSSOMemberAccountAdministrator", "AWSSSOReadOnly", "AWSSSOMasterAccountAdministrator", "AWSSSOServiceRolePolicy", "AWSSupportServiceRolePolicy"], "iam:listpolicies": ["AWSSSOMemberAccountAdministrator", "AWSSSOReadOnly", "AWSSSOMasterAccountAdministrator", "IAMAccessAdvisorReadOnly", "AWSSupportServiceRolePolicy", "SystemAdministrator"], "organizations:listaccountsforparent": ["AWSSSOMemberAccountAdministrator", "AWSControlTowerServiceRolePolicy", "AWSDirectoryServiceFullAccess", "AWSSSOReadOnly", "AccessAnalyzerServiceRolePolicy", "AWSResourceAccessManagerServiceRolePolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AWSSSOMasterAccountAdministrator", "AWSBackupOrganizationAdminAccess", "IAMAccessAnalyzerFullAccess"], "sso:*": ["AWSSSOMemberAccountAdministrator", "AWSSSOMasterAccountAdministrator"], "sso-directory:describedirectory": ["AWSSSOReadOnly", "AWSSSOMemberAccountAdministrator", "AWSSSOMasterAccountAdministrator"], "ds:createalias": ["AmazonWorkMailFullAccess", "AWSSSOMemberAccountAdministrator", "AmazonConnectFullAccess", "AWSSSOMasterAccountAdministrator"], "s3:getbucketpublicaccessblock": ["AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "AccessAnalyzerServiceRolePolicy", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AmazonGuardDutyServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:getbuckettagging": ["AWS_ConfigRole", "AWSResourceGroupsReadOnlyAccess", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AmazonGuardDutyServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:getaccountpublicaccessblock": ["AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "SecurityAudit", "AmazonGuardDutyServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:getbucketpolicystatus": ["AmazonGuardDutyServiceRolePolicy", "AccessAnalyzerServiceRolePolicy", "AmazonMacieServiceRolePolicy", "AWSTrustedAdvisorServiceRolePolicy"], "ec2:disassociateiaminstanceprofile": ["ServerMigrationServiceLaunchRole", "AmazonLaunchWizard_Fullaccess", "AWSServiceRoleForSMS", "ServerMigration_ServiceRole"], "ec2:associateiaminstanceprofile": ["ServerMigrationServiceLaunchRole", "ServerMigration_ServiceRole", "AWSServiceRoleForSMS"], "ec2:replaceiaminstanceprofileassociation": ["ServerMigrationServiceLaunchRole", "ServerMigration_ServiceRole", "AWSServiceRoleForSMS"], "autoscaling:putnotificationconfiguration": ["AWSElasticBeanstalkService", "AWSCodeDeployRole", "AWSElasticBeanstalkServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole"], "logs:deleteloggroup": ["AWSCodeBuildAdminAccess", "AWSElasticBeanstalkService", "AmazonLaunchWizard_Fullaccess", "AWSElasticBeanstalkRoleCWL", "AWSElasticBeanstalkServiceRolePolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "execute-api:invoke": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AmazonAPIGatewayInvokeFullAccess", "AWSApplicationAutoScalingCustomResourcePolicy"], "execute-api:manageconnections": ["AmazonAPIGatewayInvokeFullAccess"], "ds:check*": ["AWSDirectoryServiceReadOnlyAccess", "ReadOnlyAccess"], "ds:describe*": ["AWSDirectoryServiceReadOnlyAccess", "ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess"], "ds:get*": ["AWSDirectoryServiceReadOnlyAccess", "ReadOnlyAccess"], "ds:list*": ["AWSDirectoryServiceReadOnlyAccess", "ReadOnlyAccess"], "ds:verify*": ["AWSDirectoryServiceReadOnlyAccess", "ReadOnlyAccess"], "events:describeeventbus": ["CloudWatchEventsReadOnlyAccess", "AWSSupportServiceRolePolicy", "AmazonEventBridgeReadOnlyAccess"], "wellarchitected:*": ["WellArchitectedConsoleFullAccess"], "datapipeline:evaluateexpression": ["ReadOnlyAccess", "AWSDataPipelineRole", "SecurityAudit"], "dynamodb:batchgetitem": ["AWSLambdaReadOnlyAccess", "AWSElasticBeanstalkWorkerTier", "AmazonDynamoDBReadOnlyAccess", "AWSDataPipelineRole"], "dynamodb:getitem": ["AmazonDynamoDBReadOnlyAccess", "DynamoDBReplicationServiceRolePolicy", "AWSBackupServiceRolePolicyForRestores", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSLambdaReadOnlyAccess", "AWSElasticBeanstalkWorkerTier", "AWSDataPipelineRole"], "dynamodb:query": ["AmazonDynamoDBReadOnlyAccess", "ReadOnlyAccess", "AWSBackupServiceRolePolicyForRestores", "AWSLambdaReadOnlyAccess", "AWSElasticBeanstalkWorkerTier", "AWSDataPipelineRole"], "dynamodb:scan": ["AmazonDynamoDBReadOnlyAccess", "AWSThinkboxAWSPortalGatewayPolicy", "ReadOnlyAccess", "DynamoDBReplicationServiceRolePolicy", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSBackupServiceRolePolicyForRestores", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSLambdaReadOnlyAccess", "AWSElasticBeanstalkWorkerTier", "AWSThinkboxAWSPortalAdminPolicy", "AWSDataPipelineRole"], "dynamodb:updatetable": ["DynamoDBReplicationServiceRolePolicy", "AWSApplicationAutoscalingDynamoDBTablePolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSDataPipelineRole"], "elasticmapreduce:*": ["AmazonElasticMapReduceFullAccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSDataPipelineRole", "DataScientist"], "rds:describedbsecuritygroups": ["AWSDataPipeline_PowerUser", "AmazonDocDBFullAccess", "NeptuneFullAccess", "AWS_ConfigRole", "AmazonDocDBConsoleFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWS_Config_Role", "AWSDataPipeline_FullAccess", "AWSSupportServiceRolePolicy", "AWSConfigRole", "NeptuneConsoleFullAccess", "AWSDataPipelineRole", "AWSConfigServiceRolePolicy"], "redshift:describeclustersecuritygroups": ["AWSDataPipeline_PowerUser", "AWS_ConfigRole", "AWS_Config_Role", "AWSDataPipeline_FullAccess", "AmazonEC2RoleforDataPipelineRole", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSDataPipelineRole", "AWSConfigServiceRolePolicy"], "s3:put*": ["AWSElasticBeanstalkRoleCore", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSDataPipelineRole"], "kinesisanalytics:describe*": ["ReadOnlyAccess", "AmazonKinesisAnalyticsReadOnly"], "kinesisanalytics:get*": ["ReadOnlyAccess", "AmazonKinesisAnalyticsReadOnly"], "kinesisanalytics:list*": ["ReadOnlyAccess", "AmazonKinesisAnalyticsReadOnly"], "firehose:listdeliverystreams": ["AmazonConnectFullAccess", "AmazonKinesisAnalyticsFullAccess", "AmazonKinesisAnalyticsReadOnly", "AWSSupportServiceRolePolicy"], "iam:listpolicyversions": ["AWS_ConfigRole", "AWSThinkboxAWSPortalAdminPolicy", "AWSCodeStarServiceRole", "AmazonKinesisAnalyticsReadOnly", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AmazonKinesisAnalyticsFullAccess", "SystemAdministrator", "AWSConfigServiceRolePolicy"], "deeplens:*": ["AWSDeepLensServiceRolePolicy", "AWSDeepLensLambdaFunctionAccessPolicy"], "kinesisvideo:describestream": ["AWSDeepLensServiceRolePolicy", "AWSDeepRacerServiceRolePolicy", "AWSDeepLensLambdaFunctionAccessPolicy", "AWSDeepRacerRoboMakerAccessPolicy"], "kinesisvideo:createstream": ["AWSDeepLensServiceRolePolicy", "AWSDeepRacerServiceRolePolicy", "AWSDeepLensLambdaFunctionAccessPolicy", "AWSDeepRacerRoboMakerAccessPolicy"], "kinesisvideo:getdataendpoint": ["AWSDeepRacerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy", "AWSDeepLensLambdaFunctionAccessPolicy", "AmazonRekognitionServiceRole", "AWSDeepLensServiceRolePolicy"], "kinesisvideo:putmedia": ["AWSDeepRacerServiceRolePolicy", "AWSDeepLensLambdaFunctionAccessPolicy", "AWSDeepRacerRoboMakerAccessPolicy"], "lambda:disablereplication": ["AWSLambdaReplicator"], "cloudfront:listdistributionsbylambdafunction": ["AWSLambdaReplicator"], "apigateway:post": ["AWSMobileHub_FullAccess"], "devicefarm:createproject": ["AWSMobileHub_FullAccess"], "devicefarm:listjobs": ["AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "devicefarm:listruns": ["AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "devicefarm:getproject": ["AWSCodePipelineFullAccess", "AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "devicefarm:getrun": ["AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "devicefarm:listartifacts": ["AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "devicefarm:listprojects": ["AWSCodePipelineFullAccess", "AWSMobileHub_FullAccess", "AWSSupportServiceRolePolicy"], "devicefarm:schedulerun": ["AWSMobileHub_FullAccess"], "mobilehub:*": ["AWSMobileHub_FullAccess"], "iotsitewise:*": ["AWSIoTSiteWiseConsoleFullAccess", "AWSIoTSiteWiseFullAccess"], "access-analyzer:getanalyzedresource": ["ReadOnlyAccess", "SecurityAudit"], "access-analyzer:getanalyzer": ["ReadOnlyAccess", "SecurityAudit"], "access-analyzer:getarchiverule": ["ReadOnlyAccess", "SecurityAudit"], "access-analyzer:getfinding": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "access-analyzer:listanalyzedresources": ["ReadOnlyAccess", "SecurityAudit"], "access-analyzer:listanalyzers": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "access-analyzer:listarchiverules": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "access-analyzer:listfindings": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "access-analyzer:listtagsforresource": ["ReadOnlyAccess", "SecurityAudit"], "acm:describe*": ["ReadOnlyAccess", "SystemAdministrator", "AWSElasticBeanstalkRoleCore", "SecurityAudit"], "acm:get*": ["ReadOnlyAccess", "SystemAdministrator"], "acm-pca:describe*": ["ReadOnlyAccess"], "acm-pca:get*": ["ReadOnlyAccess"], "acm-pca:list*": ["ReadOnlyAccess"], "amplify:getapp": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "amplify:getbranch": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "amplify:getjob": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "amplify:getdomainassociation": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "amplify:listapps": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "amplify:listbranches": ["ReadOnlyAccess"], "amplify:listdomainassociations": ["ReadOnlyAccess"], "amplify:listjobs": ["ReadOnlyAccess"], "applicationinsights:describe*": ["ReadOnlyAccess"], "applicationinsights:list*": ["ReadOnlyAccess"], "appmesh:describe*": ["ReadOnlyAccess", "AWSAppMeshReadOnly", "SecurityAudit"], "appmesh:list*": ["ReadOnlyAccess", "AWSAppMeshReadOnly", "SecurityAudit"], "appstream:describe*": ["ReadOnlyAccess", "AmazonAppStreamReadOnlyAccess"], "appstream:list*": ["ReadOnlyAccess", "AmazonAppStreamReadOnlyAccess"], "appsync:get*": ["ReadOnlyAccess"], "appsync:list*": ["ReadOnlyAccess", "SecurityAudit"], "autoscaling-plans:describe*": ["ReadOnlyAccess"], "autoscaling-plans:getscalingplanresourceforecastdata": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "athena:batch*": ["ReadOnlyAccess"], "athena:get*": ["ReadOnlyAccess"], "aws-portal:view*": ["ReadOnlyAccess"], "backup:describe*": ["ReadOnlyAccess", "AWSBackupOperatorAccess"], "backup:get*": ["ReadOnlyAccess", "AWSBackupOperatorAccess"], "backup:list*": ["ReadOnlyAccess", "AWSBackupOperatorAccess"], "batch:list*": ["ReadOnlyAccess"], "batch:describe*": ["ReadOnlyAccess"], "budgets:describe*": ["ReadOnlyAccess"], "budgets:view*": ["ReadOnlyAccess"], "cassandra:select": ["AmazonKeyspacesReadOnlyAccess", "ReadOnlyAccess", "AmazonMCSReadOnlyAccess", "AWSApplicationAutoscalingCassandraTablePolicy"], "chatbot:describe*": ["ReadOnlyAccess"], "chatbot:get*": ["ReadOnlyAccess"], "chime:get*": ["ReadOnlyAccess", "AmazonChimeReadOnly"], "chime:list*": ["ReadOnlyAccess", "AmazonChimeReadOnly", "SecurityAudit"], "chime:retrieve*": ["ReadOnlyAccess"], "chime:search*": ["ReadOnlyAccess"], "chime:validate*": ["ReadOnlyAccess"], "cloud9:describe*": ["ReadOnlyAccess", "SecurityAudit"], "cloud9:list*": ["ReadOnlyAccess"], "cloudformation:detect*": ["ReadOnlyAccess", "AWSCloudFormationReadOnlyAccess"], "cloudhsm:list*": ["AWSCloudHSMReadOnlyAccess", "ReadOnlyAccess"], "cloudhsm:get*": ["AWSCloudHSMReadOnlyAccess", "ReadOnlyAccess"], "cloudtrail:describe*": ["ReadOnlyAccess"], "cloudtrail:get*": ["ReadOnlyAccess"], "cloudtrail:list*": ["ReadOnlyAccess"], "codeartifact:describedomain": ["ReadOnlyAccess"], "codeartifact:describepackageversion": ["ReadOnlyAccess"], "codeartifact:describerepository": ["ReadOnlyAccess"], "codeartifact:getauthorizationtoken": ["ReadOnlyAccess"], "codeartifact:getdomainpermissionspolicy": ["ReadOnlyAccess"], "codeartifact:getpackageversionasset": ["ReadOnlyAccess"], "codeartifact:getpackageversionreadme": ["ReadOnlyAccess"], "codeartifact:getrepositoryendpoint": ["ReadOnlyAccess"], "codeartifact:getrepositorypermissionspolicy": ["ReadOnlyAccess"], "codeartifact:listdomains": ["ReadOnlyAccess"], "codeartifact:listpackages": ["ReadOnlyAccess"], "codeartifact:listpackageversionassets": ["ReadOnlyAccess"], "codeartifact:listpackageversiondependencies": ["ReadOnlyAccess"], "codeartifact:listpackageversions": ["ReadOnlyAccess"], "codeartifact:listrepositories": ["ReadOnlyAccess"], "codeartifact:listrepositoriesindomain": ["ReadOnlyAccess"], "codebuild:batchget*": ["ReadOnlyAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codebuild:describecodecoverages": ["ReadOnlyAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codebuild:describetestcases": ["ReadOnlyAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codebuild:list*": ["ReadOnlyAccess", "AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codedeploy:batchget*": ["ReadOnlyAccess"], "codeguru-profiler:describe*": ["ReadOnlyAccess", "AmazonCodeGuruProfilerReadOnlyAccess"], "codeguru-profiler:get*": ["ReadOnlyAccess", "AmazonCodeGuruProfilerReadOnlyAccess"], "codeguru-profiler:list*": ["ReadOnlyAccess", "AmazonCodeGuruProfilerReadOnlyAccess"], "codeguru-reviewer:describe*": ["ReadOnlyAccess"], "codeguru-reviewer:get*": ["ReadOnlyAccess"], "codeguru-reviewer:list*": ["ReadOnlyAccess"], "codepipeline:list*": ["ReadOnlyAccess"], "codepipeline:get*": ["ReadOnlyAccess"], "codestar:describe*": ["ReadOnlyAccess", "SecurityAudit"], "codestar:get*": ["ReadOnlyAccess"], "compute-optimizer:describerecommendationexportjobs": ["ReadOnlyAccess"], "compute-optimizer:getautoscalinggrouprecommendations": ["ReadOnlyAccess", "ComputeOptimizerReadOnlyAccess"], "compute-optimizer:getec2instancerecommendations": ["ReadOnlyAccess", "AmazonSSMServiceRolePolicy", "ComputeOptimizerReadOnlyAccess"], "compute-optimizer:getec2recommendationprojectedmetrics": ["ReadOnlyAccess", "ComputeOptimizerReadOnlyAccess"], "compute-optimizer:getenrollmentstatus": ["ReadOnlyAccess", "ComputeOptimizerReadOnlyAccess"], "compute-optimizer:getrecommendationsummaries": ["ReadOnlyAccess", "ComputeOptimizerReadOnlyAccess"], "cognito-identity:getcredentialsforidentity": ["ReadOnlyAccess"], "cognito-identity:getidentitypoolroles": ["ReadOnlyAccess", "AWSIoTDeviceDefenderAudit", "AmazonESCognitoAccess", "AWSSupportServiceRolePolicy"], "cognito-identity:getopenidtoken": ["ReadOnlyAccess"], "cognito-identity:getopenidtokenfordeveloperidentity": ["ReadOnlyAccess", "AmazonCognitoDeveloperAuthenticatedIdentities"], "cognito-identity:lookup*": ["ReadOnlyAccess"], "cognito-sync:get*": ["ReadOnlyAccess", "AmazonCognitoReadOnly"], "cognito-sync:queryrecords": ["ReadOnlyAccess"], "cognito-idp:adminget*": ["ReadOnlyAccess", "AmazonCognitoReadOnly"], "cognito-idp:adminlist*": ["ReadOnlyAccess", "AmazonCognitoReadOnly"], "cognito-idp:get*": ["ReadOnlyAccess", "AmazonCognitoReadOnly"], "config:deliver*": ["ReadOnlyAccess", "AWSConfigUserAccess", "SecurityAudit"], "config:get*": ["AWS_ConfigRole", "ReadOnlyAccess", "AWSConfigUserAccess", "AWS_Config_Role", "SecurityAudit", "AWSConfigRole", "AWSConfigRulesExecutionRole", "AWSConfigServiceRolePolicy"], "connect:describe*": ["AmazonConnectReadOnlyAccess", "ReadOnlyAccess"], "connect:getfederationtoken": ["ReadOnlyAccess"], "dataexchange:get*": ["AWSDataExchangeProviderFullAccess", "ReadOnlyAccess", "AWSDataExchangeSubscriberFullAccess", "AWSDataExchangeReadOnly"], "dataexchange:list*": ["AWSDataExchangeProviderFullAccess", "ReadOnlyAccess", "AWSDataExchangeSubscriberFullAccess", "AWSDataExchangeReadOnly"], "datasync:describe*": ["ReadOnlyAccess", "AWSDataSyncReadOnlyAccess", "SecurityAudit"], "datasync:list*": ["ReadOnlyAccess", "AWSDataSyncReadOnlyAccess", "SecurityAudit"], "datapipeline:describe*": ["ReadOnlyAccess", "DataScientist"], "datapipeline:get*": ["ReadOnlyAccess"], "datapipeline:list*": ["ReadOnlyAccess"], "datapipeline:validate*": ["ReadOnlyAccess"], "dax:batchgetitem": ["ReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess"], "dax:describe*": ["ReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess", "SecurityAudit"], "dax:getitem": ["ReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess"], "dax:query": ["ReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess"], "dax:scan": ["ReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess"], "deepcomposer:getcomposition": ["ReadOnlyAccess"], "deepcomposer:getmodel": ["ReadOnlyAccess"], "deepcomposer:getsamplemodel": ["ReadOnlyAccess"], "deepcomposer:listcompositions": ["ReadOnlyAccess"], "deepcomposer:listmodels": ["ReadOnlyAccess"], "deepcomposer:listsamplemodels": ["ReadOnlyAccess"], "deepcomposer:listtrainingtopics": ["ReadOnlyAccess"], "detective:get*": ["ReadOnlyAccess"], "detective:list*": ["ReadOnlyAccess"], "discovery:get*": ["ReadOnlyAccess"], "dlm:get*": ["ReadOnlyAccess"], "dms:test*": ["ReadOnlyAccess"], "dynamodb:batchget*": ["ReadOnlyAccess"], "dynamodb:describe*": ["ReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess"], "dynamodb:get*": ["ReadOnlyAccess"], "dynamodb:list*": ["ReadOnlyAccess", "AmazonDynamoDBReadOnlyAccess"], "ec2:get*": ["ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess"], "ec2:searchtransitgatewayroutes": ["NetworkAdministrator", "ReadOnlyAccess", "AmazonInspectorServiceRolePolicy", "AWSNetworkManagerServiceRolePolicy"], "ec2messages:get*": ["ReadOnlyAccess"], "ecr:batchcheck*": ["ReadOnlyAccess"], "ecr:batchget*": ["ReadOnlyAccess"], "ecr:describe*": ["ReadOnlyAccess", "AmazonSageMakerReadOnly", "AmazonSageMakerFullAccess"], "ecr:get*": ["ReadOnlyAccess"], "ecr:list*": ["ReadOnlyAccess"], "eks:describeupdate": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "eks:describe*": ["ReadOnlyAccess"], "eks:listclusters": ["AWS_ConfigRole", "ReadOnlyAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "eks:listupdates": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "eks:list*": ["ReadOnlyAccess"], "elasticbeanstalk:request*": ["ReadOnlyAccess"], "elasticbeanstalk:retrieve*": ["ReadOnlyAccess"], "elasticbeanstalk:validate*": ["ReadOnlyAccess"], "elasticmapreduce:view*": ["ReadOnlyAccess"], "elemental-appliances-software:get*": ["ReadOnlyAccess", "ElementalAppliancesSoftwareReadOnlyAccess"], "elemental-appliances-software:list*": ["ReadOnlyAccess", "ElementalAppliancesSoftwareReadOnlyAccess"], "es:get*": ["ReadOnlyAccess", "AmazonESReadOnlyAccess"], "events:describe*": ["AWSLambdaReadOnlyAccess", "ReadOnlyAccess", "SecurityAudit"], "events:test*": ["ReadOnlyAccess"], "fsx:describe*": ["AmazonFSxConsoleReadOnlyAccess", "ReadOnlyAccess", "AmazonFSxReadOnlyAccess", "SecurityAudit"], "fsx:list*": ["ReadOnlyAccess", "SecurityAudit"], "gamelift:get*": ["ReadOnlyAccess"], "gamelift:requestuploadcredentials": ["ReadOnlyAccess"], "gamelift:resolvealias": ["ReadOnlyAccess"], "gamelift:search*": ["ReadOnlyAccess"], "glacier:describe*": ["ReadOnlyAccess"], "globalaccelerator:describe*": ["ReadOnlyAccess", "GlobalAcceleratorReadOnlyAccess", "SecurityAudit"], "globalaccelerator:list*": ["ReadOnlyAccess", "GlobalAcceleratorReadOnlyAccess", "SecurityAudit"], "glue:batchgetdevendpoints": ["ReadOnlyAccess"], "glue:batchgetjobs": ["ReadOnlyAccess"], "glue:batchgettriggers": ["ReadOnlyAccess"], "glue:batchgetworkflows": ["AWSLakeFormationDataAdmin", "ReadOnlyAccess"], "glue:getcatalogimportstatus": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getclassifier": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getclassifiers": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getcrawler": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getcrawlers": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getcrawlermetrics": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getdatacatalogencryptionsettings": ["ReadOnlyAccess"], "glue:getdataflowgraph": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getdevendpoint": ["ReadOnlyAccess", "AWSGlueServiceNotebookRole", "AWSSupportServiceRolePolicy"], "glue:getdevendpoints": ["ReadOnlyAccess", "AWSGlueServiceNotebookRole", "AWSSupportServiceRolePolicy"], "glue:getjob": ["ReadOnlyAccess", "AWSGlueServiceNotebookRole", "AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy"], "glue:getjobbookmark": ["ReadOnlyAccess"], "glue:getjobs": ["ReadOnlyAccess", "AWSGlueServiceNotebookRole", "AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy"], "glue:getjobrun": ["ReadOnlyAccess", "AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy"], "glue:getjobruns": ["ReadOnlyAccess", "AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy"], "glue:getmapping": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getmltaskrun": ["ReadOnlyAccess"], "glue:getmltaskruns": ["ReadOnlyAccess"], "glue:getmltransform": ["ReadOnlyAccess"], "glue:getmltransforms": ["ReadOnlyAccess"], "glue:getplan": ["ReadOnlyAccess"], "glue:getresourcepolicy": ["ReadOnlyAccess"], "glue:getsecurityconfiguration": ["ReadOnlyAccess"], "glue:getsecurityconfigurations": ["ReadOnlyAccess"], "glue:gettableversion": ["ReadOnlyAccess"], "glue:gettags": ["ReadOnlyAccess"], "glue:gettrigger": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:gettriggers": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "glue:getworkflow": ["AWSLakeFormationDataAdmin", "ReadOnlyAccess"], "glue:getworkflowrun": ["ReadOnlyAccess"], "glue:getworkflowrunproperties": ["ReadOnlyAccess"], "glue:getworkflowruns": ["AWSLakeFormationDataAdmin", "ReadOnlyAccess"], "glue:listcrawlers": ["ReadOnlyAccess"], "glue:listdevendpoints": ["ReadOnlyAccess"], "glue:listjobs": ["ReadOnlyAccess"], "glue:listmltransforms": ["ReadOnlyAccess"], "glue:listtriggers": ["ReadOnlyAccess"], "glue:listworkflows": ["AWSLakeFormationDataAdmin", "ReadOnlyAccess"], "greengrass:get*": ["ReadOnlyAccess", "AWSGreengrassReadOnlyAccess"], "guardduty:get*": ["ReadOnlyAccess", "AmazonGuardDutyReadOnlyAccess", "SecurityAudit"], "guardduty:list*": ["ReadOnlyAccess", "AmazonGuardDutyReadOnlyAccess", "SecurityAudit"], "health:describe*": ["ReadOnlyAccess"], "health:list*": ["ReadOnlyAccess"], "iam:generate*": ["ReadOnlyAccess"], "iam:simulate*": ["ReadOnlyAccess", "SystemAdministrator"], "imagebuilder:get*": ["ReadOnlyAccess", "AWSImageBuilderReadOnlyAccess"], "imagebuilder:list*": ["ReadOnlyAccess", "AWSImageBuilderReadOnlyAccess"], "importexport:get*": ["ReadOnlyAccess"], "importexport:list*": ["ReadOnlyAccess"], "inspector:get*": ["ReadOnlyAccess", "AmazonInspectorReadOnlyAccess", "SecurityAudit"], "inspector:preview*": ["ReadOnlyAccess", "AmazonInspectorReadOnlyAccess", "SecurityAudit"], "iotanalytics:describe*": ["ReadOnlyAccess", "AWSIoTSiteWiseConsoleFullAccess", "AWSIoTAnalyticsReadOnlyAccess"], "iotanalytics:list*": ["ReadOnlyAccess", "AWSIoTSiteWiseConsoleFullAccess", "AWSIoTAnalyticsReadOnlyAccess"], "iotanalytics:get*": ["ReadOnlyAccess", "AWSIoTAnalyticsReadOnlyAccess"], "iotanalytics:samplechanneldata": ["ReadOnlyAccess", "AWSIoTAnalyticsReadOnlyAccess"], "iotsitewise:describe*": ["ReadOnlyAccess", "AWSIoTSiteWiseReadOnlyAccess"], "iotsitewise:get*": ["ReadOnlyAccess", "AWSIoTSiteWiseReadOnlyAccess"], "iotsitewise:list*": ["ReadOnlyAccess", "AWSIoTSiteWiseReadOnlyAccess"], "kafka:describe*": ["ReadOnlyAccess", "AmazonMSKReadOnlyAccess"], "kafka:list*": ["ReadOnlyAccess", "AmazonMSKReadOnlyAccess"], "kafka:get*": ["ReadOnlyAccess", "AmazonMSKReadOnlyAccess"], "kinesisanalytics:discover*": ["ReadOnlyAccess"], "kinesisvideo:describe*": ["ReadOnlyAccess", "AmazonKinesisVideoStreamsReadOnlyAccess"], "kinesisvideo:get*": ["ReadOnlyAccess", "AmazonKinesisVideoStreamsReadOnlyAccess"], "kinesisvideo:list*": ["ReadOnlyAccess", "AmazonKinesisVideoStreamsReadOnlyAccess"], "lex:get*": ["ReadOnlyAccess"], "license-manager:get*": ["ReadOnlyAccess"], "license-manager:list*": ["ReadOnlyAccess", "SecurityAudit"], "lightsail:getactivenames": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getcloudformationstackrecords": ["ReadOnlyAccess"], "lightsail:getdisk": ["ReadOnlyAccess"], "lightsail:getdisks": ["ReadOnlyAccess"], "lightsail:getdisksnapshot": ["ReadOnlyAccess"], "lightsail:getdisksnapshots": ["ReadOnlyAccess"], "lightsail:getdomain": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getdomains": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getexportsnapshotrecords": ["ReadOnlyAccess"], "lightsail:getinstance": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getinstancemetricdata": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getinstanceportstates": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getinstancesnapshot": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getinstancestate": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getkeypairs": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getloadbalancer": ["ReadOnlyAccess"], "lightsail:getloadbalancermetricdata": ["ReadOnlyAccess"], "lightsail:getloadbalancers": ["ReadOnlyAccess", "SecurityAudit"], "lightsail:getloadbalancertlscertificates": ["ReadOnlyAccess"], "lightsail:getoperation": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getoperations": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getoperationsforresource": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:getrelationaldatabase": ["ReadOnlyAccess"], "lightsail:getrelationaldatabaseblueprints": ["ReadOnlyAccess"], "lightsail:getrelationaldatabasebundles": ["ReadOnlyAccess"], "lightsail:getrelationaldatabaseevents": ["ReadOnlyAccess"], "lightsail:getrelationaldatabaselogevents": ["ReadOnlyAccess"], "lightsail:getrelationaldatabaselogstreams": ["ReadOnlyAccess"], "lightsail:getrelationaldatabasemetricdata": ["ReadOnlyAccess"], "lightsail:getrelationaldatabaseparameters": ["ReadOnlyAccess"], "lightsail:getrelationaldatabases": ["ReadOnlyAccess"], "lightsail:getrelationaldatabasesnapshot": ["ReadOnlyAccess"], "lightsail:getrelationaldatabasesnapshots": ["ReadOnlyAccess"], "lightsail:getstaticip": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "lightsail:is*": ["ReadOnlyAccess"], "logs:get*": ["ReadOnlyAccess", "CloudWatchReadOnlyAccess", "CloudWatchLogsReadOnlyAccess", "AWSBatchFullAccess", "AmazonBraketFullAccess"], "logs:listtagsloggroup": ["ReadOnlyAccess", "SecurityAudit"], "logs:startquery": ["CloudWatchReadOnlyAccess", "ReadOnlyAccess", "CloudWatchLogsReadOnlyAccess", "AmazonBraketFullAccess"], "logs:stopquery": ["CloudWatchReadOnlyAccess", "ReadOnlyAccess", "CloudWatchLogsReadOnlyAccess", "AmazonBraketFullAccess"], "mediaconvert:describeendpoints": ["ReadOnlyAccess", "AWSElementalMediaConvertReadOnly", "AWSSupportServiceRolePolicy"], "mediaconvert:get*": ["ReadOnlyAccess", "AWSElementalMediaConvertReadOnly"], "mediaconvert:list*": ["ReadOnlyAccess", "AWSElementalMediaConvertReadOnly"], "mediapackage:list*": ["ReadOnlyAccess", "AWSElementalMediaPackageReadOnly"], "mediapackage:describe*": ["ReadOnlyAccess", "AWSElementalMediaPackageReadOnly"], "mgh:describe*": ["ReadOnlyAccess"], "mgh:list*": ["ReadOnlyAccess"], "mobileanalytics:get*": ["ReadOnlyAccess"], "mobilehub:describe*": ["ReadOnlyAccess"], "mobilehub:export*": ["ReadOnlyAccess"], "mobilehub:generate*": ["ReadOnlyAccess"], "mobilehub:get*": ["ReadOnlyAccess"], "mobilehub:validate*": ["ReadOnlyAccess"], "mobilehub:verify*": ["ReadOnlyAccess"], "mobiletargeting:get*": ["ReadOnlyAccess"], "mobiletargeting:list*": ["ReadOnlyAccess"], "mq:describe*": ["ReadOnlyAccess", "AmazonMQApiReadOnlyAccess", "AmazonMQReadOnlyAccess"], "mq:list*": ["ReadOnlyAccess", "AmazonMQApiReadOnlyAccess", "AmazonMQReadOnlyAccess"], "opsworks:get*": ["ReadOnlyAccess"], "opsworks-cm:list*": ["ReadOnlyAccess"], "organizations:describe*": ["AWSOrganizationsReadOnlyAccess", "AWSMarketplaceProcurementSystemAdminFullAccess", "ReadOnlyAccess", "CloudFormationStackSetsOrgAdminServiceRolePolicy", "SecurityAudit"], "outposts:get*": ["ReadOnlyAccess"], "outposts:list*": ["ReadOnlyAccess"], "personalize:describe*": ["ReadOnlyAccess"], "personalize:get*": ["ReadOnlyAccess"], "personalize:list*": ["ReadOnlyAccess"], "pi:describedimensionkeys": ["ReadOnlyAccess"], "pi:getresourcemetrics": ["ReadOnlyAccess"], "polly:get*": ["ReadOnlyAccess"], "polly:synthesizespeech": ["ReadOnlyAccess", "AmazonPollyReadOnlyAccess", "AWSForWordPressPluginPolicy", "LexBotPolicy", "AmazonLexFullAccess"], "qldb:listledgers": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:describeledger": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:listjournals3exports": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:listjournals3exportsforledger": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:describejournals3export": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:getblock": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:getdigest": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:getrevision": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:listtagsforresource": ["ReadOnlyAccess", "AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "ram:get*": ["ReadOnlyAccess", "AWSResourceAccessManagerReadOnlyAccess"], "ram:list*": ["ReadOnlyAccess", "AWSResourceAccessManagerReadOnlyAccess", "SecurityAudit"], "rekognition:comparefaces": ["ReadOnlyAccess", "AmazonRekognitionReadOnlyAccess"], "rekognition:detect*": ["ReadOnlyAccess"], "rekognition:list*": ["ReadOnlyAccess", "SecurityAudit"], "rekognition:search*": ["ReadOnlyAccess"], "rds:list*": ["ReadOnlyAccess"], "rds:download*": ["ReadOnlyAccess"], "redshift:getreservednodeexchangeofferings": ["ReadOnlyAccess"], "redshift:view*": ["ReadOnlyAccess"], "resource-groups:get*": ["ReadOnlyAccess", "AWSResourceGroupsReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "ResourceGroupsandTagEditorReadOnlyAccess"], "resource-groups:list*": ["ReadOnlyAccess", "AWSResourceGroupsReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "ResourceGroupsandTagEditorReadOnlyAccess"], "resource-groups:search*": ["ReadOnlyAccess", "AWSResourceGroupsReadOnlyAccess", "ResourceGroupsandTagEditorReadOnlyAccess"], "robomaker:batchdescribe*": ["ReadOnlyAccess", "AWSRoboMakerReadOnlyAccess"], "robomaker:describe*": ["ReadOnlyAccess", "AWSRoboMakerReadOnlyAccess", "SecurityAudit"], "robomaker:list*": ["ReadOnlyAccess", "AWSRoboMakerReadOnlyAccess", "SecurityAudit"], "route53:test*": ["ReadOnlyAccess"], "route53domains:check*": ["ReadOnlyAccess"], "route53domains:view*": ["ReadOnlyAccess"], "sagemaker:getsearchsuggestions": ["ReadOnlyAccess", "AmazonSageMakerReadOnly"], "sagemaker:search": ["ReadOnlyAccess", "AmazonSageMakerReadOnly"], "schemas:describe*": ["ReadOnlyAccess"], "schemas:get*": ["ReadOnlyAccess"], "schemas:list*": ["ReadOnlyAccess"], "schemas:search*": ["ReadOnlyAccess"], "sdb:get*": ["ReadOnlyAccess"], "secretsmanager:list*": ["ReadOnlyAccess"], "secretsmanager:describe*": ["ReadOnlyAccess"], "secretsmanager:getresourcepolicy": ["ReadOnlyAccess", "KafkaServiceRolePolicy", "AWSSupportServiceRolePolicy", "SecurityAudit"], "serverlessrepo:list*": ["ReadOnlyAccess", "SecurityAudit"], "serverlessrepo:get*": ["ReadOnlyAccess"], "serverlessrepo:searchapplications": ["ReadOnlyAccess"], "servicecatalog:scan*": ["ReadOnlyAccess"], "servicecatalog:search*": ["ReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess"], "servicecatalog:describe*": ["ReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess"], "servicequotas:getassociationforservicequotatemplate": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:getawsdefaultservicequota": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:getrequestedservicequotachange": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:getservicequota": ["ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:getservicequotaincreaserequestfromtemplate": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:listawsdefaultservicequotas": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:listrequestedservicequotachangehistory": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:listrequestedservicequotachangehistorybyquota": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:listservices": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:listservicequotas": ["ReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "servicequotas:listservicequotaincreaserequestsintemplate": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy", "ServiceQuotasReadOnlyAccess"], "ses:describe*": ["ReadOnlyAccess", "AmazonWorkMailReadOnlyAccess"], "shield:describe*": ["ReadOnlyAccess", "SecurityAudit"], "shield:get*": ["ReadOnlyAccess"], "snowball:get*": ["ReadOnlyAccess"], "snowball:describe*": ["ReadOnlyAccess"], "snowball:list*": ["ReadOnlyAccess"], "sns:check*": ["ReadOnlyAccess"], "sqs:receive*": ["ReadOnlyAccess"], "ssm:get*": ["ReadOnlyAccess", "AmazonSSMReadOnlyAccess"], "sso:get*": ["ReadOnlyAccess", "AWSSSOReadOnly"], "sso:describe*": ["ReadOnlyAccess", "AWSSSOReadOnly"], "sso:list*": ["ReadOnlyAccess", "AWSSSOReadOnly", "SecurityAudit"], "sso:search*": ["ReadOnlyAccess", "AWSSSOReadOnly"], "sso-directory:describe*": ["ReadOnlyAccess", "AWSSSODirectoryReadOnly"], "sso-directory:list*": ["ReadOnlyAccess", "AWSSSODirectoryReadOnly"], "sso-directory:search*": ["ReadOnlyAccess", "AWSSSODirectoryReadOnly"], "states:list*": ["ReadOnlyAccess"], "states:describe*": ["ReadOnlyAccess"], "states:getexecutionhistory": ["ReadOnlyAccess", "AWSStepFunctionsReadOnlyAccess", "AWSSupportServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "sts:getaccesskeyinfo": ["ReadOnlyAccess"], "sts:getcalleridentity": ["ReadOnlyAccess"], "sts:getsessiontoken": ["ReadOnlyAccess"], "synthetics:describe*": ["ReadOnlyAccess", "CloudWatchSyntheticsReadOnlyAccess"], "synthetics:get*": ["ReadOnlyAccess", "CloudWatchSyntheticsReadOnlyAccess"], "synthetics:list*": ["ReadOnlyAccess", "CloudWatchSyntheticsReadOnlyAccess"], "tag:get*": ["ReadOnlyAccess", "AWSResourceGroupsReadOnlyAccess", "AmazonLaunchWizard_Fullaccess"], "transfer:describe*": ["ReadOnlyAccess", "SecurityAudit"], "transfer:list*": ["ReadOnlyAccess", "SecurityAudit"], "transfer:testidentityprovider": ["ReadOnlyAccess", "AWSTransferReadOnlyAccess"], "transcribe:get*": ["ReadOnlyAccess", "AmazonTranscribeReadOnlyAccess"], "transcribe:list*": ["ReadOnlyAccess", "AmazonTranscribeReadOnlyAccess"], "wafv2:checkcapacity": ["AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "AWSWAFReadOnlyAccess"], "wafv2:describe*": ["AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "AWSWAFReadOnlyAccess"], "wafv2:get*": ["AWSWAFConsoleReadOnlyAccess", "ReadOnlyAccess", "AWSWAFReadOnlyAccess"], "workdocs:get*": ["ReadOnlyAccess"], "workdocs:checkalias": ["ReadOnlyAccess", "AWSSupportServiceRolePolicy"], "workmail:list*": ["ReadOnlyAccess", "AmazonWorkMailReadOnlyAccess"], "workmail:search*": ["ReadOnlyAccess", "AmazonWorkMailReadOnlyAccess"], "xray:batchget*": ["ReadOnlyAccess"], "xray:get*": ["ReadOnlyAccess"], "ram:getresourceshares": ["AWSResourceAccessManagerResourceShareParticipantAccess", "AWSLicenseManagerMasterAccountRolePolicy"], "ram:getresourceshareassociations": ["AWSLicenseManagerMasterAccountRolePolicy"], "ram:tagresource": ["AWSLicenseManagerMasterAccountRolePolicy"], "ram:createresourceshare": ["AWSLicenseManagerMasterAccountRolePolicy"], "ram:associateresourceshare": ["AWSLicenseManagerMasterAccountRolePolicy"], "ram:disassociateresourceshare": ["AWSLicenseManagerMasterAccountRolePolicy"], "ram:updateresourceshare": ["AWSLicenseManagerMasterAccountRolePolicy"], "ram:deleteresourceshare": ["AWSLicenseManagerMasterAccountRolePolicy"], "cloudformation:updatestack": ["AmazonSSMAutomationRole", "AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSAppMeshFullAccess", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonECS_FullAccess", "AWSOpsWorksCMServiceRole", "AWSForWordPressPluginPolicy", "AWSElasticBeanstalkRoleCore", "AmazonEC2ContainerServiceFullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "ConfigConformsServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cloudformation:deletestack": ["AWSDeepRacerServiceRolePolicy", "AmazonSSMAutomationRole", "AWSServiceCatalogAdminFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSLicenseManagerMasterAccountRolePolicy", "AmazonECS_FullAccess", "AWSOpsWorksCMServiceRole", "AWSServiceRoleForSMS", "AWSControlTowerServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSForWordPressPluginPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "ConfigConformsServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess", "AWSGlueConsoleFullAccess", "AmazonEC2ContainerServiceFullAccess", "ServerMigration_ServiceRole", "AWSAppMeshFullAccess", "AWSCloud9ServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSThinkboxAWSPortalAdminPolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "glue:updatejob": ["AWSGlueServiceNotebookRole", "AmazonSageMakerFullAccess", "AWSLicenseManagerMasterAccountRolePolicy"], "glue:updatecrawler": ["AWSLicenseManagerMasterAccountRolePolicy"], "iam:attachrolepolicy": ["AWSIQPermissionServiceRolePolicy", "AWSCodeStarServiceRole", "AmazonMSKFullAccess", "CloudFormationStackSetsOrgMemberServiceRolePolicy", "AWSSSOServiceRolePolicy", "AWSCompromisedKeyQuarantine", "AWSElasticBeanstalkFullAccess"], "iam:createrole": ["AWSCodeStarServiceRole", "CloudFormationStackSetsOrgMemberServiceRolePolicy", "AWSSSOServiceRolePolicy", "AWSCompromisedKeyQuarantine", "AWSElasticBeanstalkFullAccess"], "iam:deleterole": ["AWSIQPermissionServiceRolePolicy", "AWSCodeStarServiceRole", "AWSResourceAccessManagerServiceRolePolicy", "CloudFormationStackSetsOrgMemberServiceRolePolicy", "AWSSSOServiceRolePolicy", "AmazonLexFullAccess", "AWSSupportServiceRolePolicy", "AmazonConnectServiceLinkedRolePolicy", "AWSOrganizationsServiceTrustPolicy"], "iam:deleterolepolicy": ["AWSSSOServiceRolePolicy", "AWSCodeStarServiceRole"], "iam:detachrolepolicy": ["AWSIQPermissionServiceRolePolicy", "AWSCodeStarServiceRole", "CloudFormationStackSetsOrgMemberServiceRolePolicy", "AWSSSOServiceRolePolicy", "AmazonLexFullAccess"], "iam:putrolepolicy": ["AWSSSOServiceRolePolicy", "AmazonConnectFullAccess", "AWSCodeStarServiceRole", "AmazonMSKFullAccess"], "iam:updaterole": ["AWSSSOServiceRolePolicy"], "iam:createsamlprovider": ["AWSSSOServiceRolePolicy"], "iam:updatesamlprovider": ["AWSSSOServiceRolePolicy"], "iam:deletesamlprovider": ["AWSSSOServiceRolePolicy"], "identitystore:describeuser": ["AWSSSOServiceRolePolicy"], "identitystore:describegroup": ["AWSSSOServiceRolePolicy"], "identitystore:listgroups": ["AWSSSOServiceRolePolicy"], "identitystore:listusers": ["AWSSSOServiceRolePolicy"], "codepipeline:listactionexecutions": ["AWSCodePipeline_ReadOnlyAccess", "AWSCodePipelineReadOnlyAccess", "AWSCodeStarNotificationsServiceRolePolicy"], "codepipeline:listtagsforresource": ["AWSCodePipeline_ReadOnlyAccess", "AWSCodePipelineReadOnlyAccess"], "codecommit:listbranches": ["AWSCodeBuildAdminAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSCodeBuildDeveloperAccess", "AWSSupportServiceRolePolicy"], "codecommit:listrepositories": ["AWSCodeBuildAdminAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy", "AmazonCodeGuruReviewerFullAccess"], "codedeploy:getapplication": ["AmazonECS_FullAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy"], "codedeploy:getdeploymentgroup": ["AmazonECS_FullAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy"], "codedeploy:listapplications": ["AmazonECS_FullAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy"], "codedeploy:listdeploymentgroups": ["AmazonECS_FullAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy"], "opsworks:describeapps": ["AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy"], "opsworks:describelayers": ["AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy"], "opsworks:describestacks": ["AWSOpsWorksInstanceRegistration", "AWSResourceGroupsReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSCodePipelineReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSOpsWorksRegisterCLI_EC2", "AWSOpsWorksRegisterCLI_OnPremises"], "appsync:graphql": ["AWSAppSyncSchemaAuthor", "AWSAppSyncInvokeFullAccess"], "appsync:getgraphqlapi": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy", "AWSAppSyncInvokeFullAccess"], "appsync:listgraphqlapis": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy", "AWSAppSyncInvokeFullAccess"], "appsync:listapikeys": ["AWSAppSyncSchemaAuthor", "AWSAppSyncInvokeFullAccess"], "machinelearning:createbatchprediction": ["AmazonMachineLearningBatchPredictionsAccess"], "machinelearning:deletebatchprediction": ["AmazonMachineLearningBatchPredictionsAccess"], "machinelearning:describebatchpredictions": ["AmazonMachineLearningBatchPredictionsAccess", "AWSSupportServiceRolePolicy"], "machinelearning:getbatchprediction": ["AmazonMachineLearningBatchPredictionsAccess", "AWSSupportServiceRolePolicy"], "machinelearning:updatebatchprediction": ["AmazonMachineLearningBatchPredictionsAccess"], "rekognition:detectfaces": ["AmazonRekognitionReadOnlyAccess"], "rekognition:detectlabels": ["AmazonRekognitionReadOnlyAccess"], "rekognition:listcollections": ["AWSSupportServiceRolePolicy", "AmazonRekognitionReadOnlyAccess"], "rekognition:listfaces": ["AWSSupportServiceRolePolicy", "AmazonRekognitionReadOnlyAccess"], "rekognition:searchfaces": ["AmazonRekognitionReadOnlyAccess"], "rekognition:searchfacesbyimage": ["AmazonRekognitionReadOnlyAccess"], "rekognition:detecttext": ["AmazonRekognitionReadOnlyAccess"], "rekognition:getcelebrityinfo": ["AmazonRekognitionReadOnlyAccess"], "rekognition:recognizecelebrities": ["AmazonRekognitionReadOnlyAccess"], "rekognition:detectmoderationlabels": ["AmazonAugmentedAIIntegratedAPIAccess", "AmazonRekognitionReadOnlyAccess"], "rekognition:getlabeldetection": ["AmazonRekognitionReadOnlyAccess"], "rekognition:getfacedetection": ["AmazonRekognitionReadOnlyAccess"], "rekognition:getcontentmoderation": ["AmazonRekognitionReadOnlyAccess"], "rekognition:getpersontracking": ["AmazonRekognitionReadOnlyAccess"], "rekognition:getcelebrityrecognition": ["AmazonRekognitionReadOnlyAccess"], "rekognition:getfacesearch": ["AmazonRekognitionReadOnlyAccess"], "rekognition:gettextdetection": ["AmazonRekognitionReadOnlyAccess"], "rekognition:getsegmentdetection": ["AmazonRekognitionReadOnlyAccess"], "rekognition:describestreamprocessor": ["AmazonRekognitionReadOnlyAccess"], "rekognition:liststreamprocessors": ["AmazonRekognitionReadOnlyAccess"], "rekognition:describeprojects": ["AmazonRekognitionCustomLabelsFullAccess", "AmazonRekognitionReadOnlyAccess"], "rekognition:describeprojectversions": ["AmazonRekognitionCustomLabelsFullAccess", "AmazonRekognitionReadOnlyAccess"], "rekognition:detectcustomlabels": ["AmazonRekognitionCustomLabelsFullAccess", "AmazonRekognitionReadOnlyAccess"], "codebuild:startbuild": ["AWSElasticBeanstalkService", "AWSCodeBuildDeveloperAccess", "AWSElasticBeanstalkFullAccess"], "codebuild:stopbuild": ["AWSCodeBuildDeveloperAccess"], "codebuild:startbuildbatch": ["AWSCodeBuildDeveloperAccess"], "codebuild:stopbuildbatch": ["AWSCodeBuildDeveloperAccess"], "codebuild:retrybuild": ["AWSCodeBuildDeveloperAccess"], "codebuild:retrybuildbatch": ["AWSCodeBuildDeveloperAccess"], "codebuild:getresourcepolicy": ["AWSCodeBuildReadOnlyAccess", "AWSCodeBuildDeveloperAccess"], "codecommit:getbranch": ["AWSCodeBuildAdminAccess", "AWSCodePipelineFullAccess", "AmazonCodeGuruReviewerServiceRolePolicy", "AWSCodeBuildReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSCodeBuildDeveloperAccess", "SecurityAudit"], "codecommit:getcommit": ["AWSCodeBuildReadOnlyAccess", "AWSCodeBuildAdminAccess", "AWSCodeBuildDeveloperAccess"], "codecommit:getrepository": ["AmazonSageMakerFullAccess", "AWSCodeBuildAdminAccess", "AmazonCodeGuruReviewerServiceRolePolicy", "AWSCodeBuildReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSCodeBuildDeveloperAccess", "SecurityAudit"], "cloudhsm:*": ["AWSCloudHSMFullAccess"], "a4b:*": ["AlexaForBusinessFullAccess"], "secretsmanager:deletesecret": ["AlexaForBusinessFullAccess", "AmazonRDSDataFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "secretsmanager:updatesecret": ["AlexaForBusinessFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "AWSIoTSiteWiseConsoleFullAccess"], "secretsmanager:createsecret": ["AmazonSageMakerFullAccess", "AWSIoTSiteWiseConsoleFullAccess", "AlexaForBusinessFullAccess", "AmazonRedshiftFullAccess", "AmazonKendraFullAccess", "AmazonRDSDataFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "guardduty:*": ["AmazonGuardDutyFullAccess"], "ds:getauthorizedapplicationdetails": ["AmazonRDSDirectoryServiceAccess", "AmazonFSxServiceRolePolicy"], "ssm:listinventoryentries": ["AWSLicenseManagerServiceRolePolicy", "AWSServiceRoleForImageBuilder", "AWSLicenseManagerMemberAccountRolePolicy"], "ssm:getinventory": ["AWSLicenseManagerServiceRolePolicy", "AWSLicenseManagerMemberAccountRolePolicy"], "ssm:createassociation": ["AWSLicenseManagerServiceRolePolicy", "AWSServiceRoleForImageBuilder", "AWSLicenseManagerMemberAccountRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "license-manager:getservicesettings": ["AWSLicenseManagerServiceRolePolicy", "AWSSupportServiceRolePolicy"], "license-manager:getlicenseconfiguration": ["AWSLicenseManagerServiceRolePolicy", "AWSLicenseManagerMemberAccountRolePolicy", "AWSSupportServiceRolePolicy"], "license-manager:updatelicensespecificationsforresource": ["AWSLicenseManagerServiceRolePolicy", "AWSServiceRoleForImageBuilder", "AWSLicenseManagerMemberAccountRolePolicy"], "license-manager:listusageforlicenseconfiguration": ["AWSLicenseManagerServiceRolePolicy", "AWSSupportServiceRolePolicy"], "datapipeline:*": ["AWSDataPipeline_FullAccess", "AWSDataPipeline_PowerUser", "AmazonEC2RoleforDataPipelineRole", "AmazonDynamoDBFullAccesswithDataPipeline"], "ec2:describespotfleetrequests": ["AmazonEC2SpotFleetAutoscaleRole", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy", "AWSApplicationAutoscalingEC2SpotFleetRequestPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSSupportServiceRolePolicy", "AWSThinkboxAWSPortalAdminPolicy", "AWSBatchServiceRole"], "ec2:modifyspotfleetrequest": ["DataScientist", "AmazonEC2SpotFleetAutoscaleRole", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy", "AWSApplicationAutoscalingEC2SpotFleetRequestPolicy", "AWSThinkboxAWSPortalAdminPolicy", "AWSBatchServiceRole"], "signer:startsigningjob": ["AmazonFreeRTOSOTAUpdate", "AWSIoTDeviceTesterForFreeRTOSFullAccess"], "signer:describesigningjob": ["AmazonFreeRTOSOTAUpdate", "AWSIoTOTAUpdate", "AWSIoTDeviceTesterForFreeRTOSFullAccess"], "signer:getsigningprofile": ["AmazonFreeRTOSOTAUpdate"], "signer:putsigningprofile": ["AmazonFreeRTOSOTAUpdate", "AWSIoTDeviceTesterForFreeRTOSFullAccess"], "s3:listbucketversions": ["AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSThinkboxAWSPortalAdminPolicy", "AmazonFreeRTOSOTAUpdate", "AWSIoTDeviceTesterForFreeRTOSFullAccess"], "iot:deletejob": ["AmazonFreeRTOSOTAUpdate", "AWSIoTConfigAccess"], "iot:deletestream": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AmazonFreeRTOSOTAUpdate", "AWSIoTConfigAccess"], "iot:createstream": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AmazonFreeRTOSOTAUpdate", "AWSIoTConfigAccess"], "iot:createjob": ["AmazonFreeRTOSOTAUpdate", "AWSIoTOTAUpdate", "AWSIoTConfigAccess"], "outposts:getoutpost": ["ElastiCacheServiceRolePolicy"], "outposts:listoutposts": ["ElastiCacheServiceRolePolicy"], "outposts:listsites": ["ElastiCacheServiceRolePolicy"], "ec2:describecoippools": ["AWSElasticLoadBalancingServiceRolePolicy"], "ec2:getcoippoolusage": ["AWSElasticLoadBalancingServiceRolePolicy"], "ec2:allocateaddress": ["AWSElasticLoadBalancingServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AWSElasticBeanstalkService", "AmazonLaunchWizard_Fullaccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "NetworkAdministrator", "AWSOpsWorksCMServiceRole", "AWSElasticBeanstalkRoleCore", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:disassociateaddress": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonRedshiftServiceLinkedRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AWSElasticBeanstalkService", "AmazonLaunchWizard_Fullaccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "NetworkAdministrator", "AWSOpsWorksCMServiceRole", "AWSElasticBeanstalkRoleCore", "AmazonAppStreamServiceAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:attachnetworkinterface": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "KafkaServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonEKS_CNI_Policy", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonECSServiceRolePolicy", "NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:assignprivateipaddresses": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonRDSServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "AmazonEKS_CNI_Policy", "AmazonLaunchWizard_Fullaccess", "APIGatewayServiceRolePolicy", "NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonVPCFullAccess", "NeptuneConsoleFullAccess"], "ec2:assignipv6addresses": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "AWSElasticLoadBalancingServiceRolePolicy", "NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess"], "ec2:releaseaddress": ["AWSElasticLoadBalancingServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AWSElasticBeanstalkService", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AWSOpsWorksCMServiceRole", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:unassignipv6addresses": ["AWSElasticLoadBalancingClassicServiceRolePolicy", "AmazonVPCFullAccess", "AWSElasticLoadBalancingServiceRolePolicy", "NetworkAdministrator"], "logs:createlogdelivery": ["AWSElasticLoadBalancingServiceRolePolicy", "AmazonSageMakerFullAccess", "Route53ResolverServiceRolePolicy", "APIGatewayServiceRolePolicy", "AmazonMSKFullAccess", "AmazonChimeFullAccess"], "logs:getlogdelivery": ["AWSElasticLoadBalancingServiceRolePolicy", "AmazonSageMakerFullAccess", "Route53ResolverServiceRolePolicy", "APIGatewayServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonMSKFullAccess", "AmazonChimeFullAccess"], "logs:updatelogdelivery": ["AWSElasticLoadBalancingServiceRolePolicy", "AmazonSageMakerFullAccess", "Route53ResolverServiceRolePolicy", "APIGatewayServiceRolePolicy", "AmazonMSKFullAccess"], "logs:deletelogdelivery": ["AWSElasticLoadBalancingServiceRolePolicy", "AmazonSageMakerFullAccess", "Route53ResolverServiceRolePolicy", "APIGatewayServiceRolePolicy", "AmazonMSKFullAccess", "AmazonChimeFullAccess"], "logs:listlogdeliveries": ["AWSElasticLoadBalancingServiceRolePolicy", "AmazonSageMakerFullAccess", "Route53ResolverServiceRolePolicy", "APIGatewayServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AmazonMSKFullAccess", "AmazonChimeFullAccess"], "cloudsearch:*": ["CloudSearchFullAccess"], "ds:*": ["AWSDirectoryServiceFullAccess", "SystemAdministrator", "AmazonZocaloFullAccess"], "glue:createconnection": ["AWSGlueServiceNotebookRole"], "glue:createjob": ["AWSGlueServiceNotebookRole", "AmazonSageMakerFullAccess"], "glue:deleteconnection": ["AWSGlueServiceNotebookRole"], "glue:deletejob": ["AWSGlueServiceNotebookRole", "AmazonSageMakerFullAccess"], "glue:getconnection": ["AWSGlueServiceNotebookRole"], "glue:getconnections": ["AWSLakeFormationDataAdmin", "AWSGlueServiceNotebookRole"], "glue:batchdeleteconnection": ["AWSGlueServiceNotebookRole"], "glue:updateconnection": ["AWSGlueServiceNotebookRole"], "glue:updatedevendpoint": ["AWSGlueServiceNotebookRole"], "kinesis:putrecords": ["AmazonRDSServiceRolePolicy", "WorkLinkServiceRolePolicy", "AmazonRekognitionServiceRole", "AmazonWorkLinkServiceRolePolicy", "AmazonKinesisAnalyticsFullAccess"], "elasticloadbalancing:addlistenercertificates": ["AmazonWorkLinkServiceRolePolicy", "AmazonElasticsearchServiceRolePolicy", "APIGatewayServiceRolePolicy"], "elasticloadbalancing:removelistenercertificates": ["AmazonWorkLinkServiceRolePolicy", "AmazonElasticsearchServiceRolePolicy", "APIGatewayServiceRolePolicy"], "redshift:getclustercredentials": ["AmazonRedshiftQueryEditor"], "redshift:listschemas": ["AmazonRedshiftQueryEditor"], "redshift:listtables": ["AmazonRedshiftQueryEditor"], "redshift:listdatabases": ["AmazonRedshiftQueryEditor"], "redshift:executequery": ["AmazonRedshiftQueryEditor"], "redshift:fetchresults": ["AmazonRedshiftQueryEditor"], "redshift:cancelquery": ["AmazonRedshiftQueryEditor"], "redshift:describequery": ["AmazonRedshiftQueryEditor"], "redshift:describetable": ["AmazonRedshiftQueryEditor"], "redshift:viewqueriesfromconsole": ["AmazonRedshiftQueryEditor"], "redshift:describesavedqueries": ["AmazonRedshiftQueryEditor"], "redshift:createsavedquery": ["AmazonRedshiftQueryEditor"], "redshift:deletesavedqueries": ["AmazonRedshiftQueryEditor"], "redshift:modifysavedquery": ["AmazonRedshiftQueryEditor"], "redshift-data:executestatement": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "redshift-data:cancelstatement": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "redshift-data:liststatements": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "redshift-data:getstatementresult": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "redshift-data:describestatement": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "redshift-data:listdatabases": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "redshift-data:listschemas": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "redshift-data:listtables": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "redshift-data:describetable": ["AmazonRedshiftFullAccess", "AmazonRedshiftQueryEditor"], "dynamodb:createbackup": ["AWSBackupServiceRolePolicyForBackup"], "dynamodb:deletebackup": ["AWSBackupServiceRolePolicyForBackup", "AWSBackupFullAccess"], "rds:addtagstoresource": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupServiceRolePolicyForBackup", "AWSApplicationAutoscalingRDSClusterPolicy", "AWSBackupServiceRolePolicyForRestores", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:describedbsnapshots": ["AWS_ConfigRole", "AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSBackupServiceRolePolicyForBackup", "AWSResourceGroupsReadOnlyAccess", "AWSBackupFullAccess", "AWS_Config_Role", "AWSBackupServiceRolePolicyForRestores", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "rds:createdbsnapshot": ["AWSBackupServiceRolePolicyForBackup"], "rds:copydbsnapshot": ["AWSBackupServiceRolePolicyForBackup"], "rds:createdbclustersnapshot": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupServiceRolePolicyForBackup", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:copydbclustersnapshot": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupServiceRolePolicyForBackup", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:deletedbsnapshot": ["AWSBackupServiceRolePolicyForBackup", "AWSBackupFullAccess"], "rds:deletedbclustersnapshot": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupServiceRolePolicyForBackup", "AWSBackupFullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "storagegateway:createsnapshot": ["AWSBackupServiceRolePolicyForBackup"], "storagegateway:listtagsforresource": ["AWSBackupServiceRolePolicyForBackup", "AWSResourceGroupsReadOnlyAccess", "AWSSupportServiceRolePolicy"], "ec2:copysnapshot": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSBackupServiceRolePolicyForBackup", "AWSDataLifecycleManagerServiceRole", "VMImportExportRoleForAWSConnector", "LightsailExportAccess"], "ec2:describeinstancecreditspecifications": ["AWSBackupServiceRolePolicyForBackup"], "ec2:describeelasticgpus": ["AWSBackupServiceRolePolicyForBackup", "AWSSupportServiceRolePolicy"], "backup:describebackupvault": ["AWSBackupServiceRolePolicyForBackup", "AWSSupportServiceRolePolicy"], "backup:copyintobackupvault": ["AWSBackupServiceRolePolicyForBackup"], "elasticfilesystem:backup": ["AWSBackupServiceLinkedRolePolicyForBackup", "AWSBackupServiceRolePolicyForBackup", "AWSBackupServiceLinkedRolePolicyForBackupTest", "AmazonElasticFileSystemFullAccess"], "elasticfilesystem:describetags": ["AmazonElasticFileSystemFullAccess", "AWSBackupServiceRolePolicyForBackup", "AmazonElasticFileSystemReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSBackupServiceLinkedRolePolicyForBackup", "AWSBackupServiceLinkedRolePolicyForBackupTest"], "kms:creategrant": ["AWSBackupServiceRolePolicyForBackup", "AmazonAppFlowFullAccess", "AWSBackupFullAccess", "AmazonMSKFullAccess", "AWSServiceRoleForImageBuilder", "AmazonConnectFullAccess", "AWSBackupServiceRolePolicyForRestores"], "kms:generatedatakeywithoutplaintext": ["AWSServiceRoleForImageBuilder", "AWSBackupServiceRolePolicyForBackup"], "ssm:cancelcommand": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSBackupOperatorAccess", "AWSBackupServiceRolePolicyForBackup", "AWSBackupFullAccess", "AmazonSSMServiceRolePolicy"], "ssm:getcommandinvocation": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSBackupOperatorAccess", "AWSBackupServiceRolePolicyForBackup", "AmazonLaunchWizard_Fullaccess", "AWSBackupFullAccess", "AmazonSSMServiceRolePolicy", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy"], "ssm:sendcommand": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSBackupOperatorAccess", "AWSBackupServiceRolePolicyForBackup", "AmazonLaunchWizard_Fullaccess", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSBackupFullAccess", "AWSServiceRoleForImageBuilder", "AmazonSSMServiceRolePolicy", "AWSOpsWorksCMServiceRole", "AmazonSSMMaintenanceWindowRole", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "dax:*": ["AmazonDynamoDBFullAccess"], "cloudwatch:describealarmhistory": ["AmazonDynamoDBReadOnlyAccess", "AmazonDynamoDBFullAccesswithDataPipeline", "AWSSupportServiceRolePolicy", "AmazonDynamoDBFullAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cloudwatch:describealarmsformetric": ["AWSSecurityHubServiceRolePolicy", "AmazonDynamoDBReadOnlyAccess", "AmazonElasticFileSystemFullAccess", "AmazonElasticFileSystemReadOnlyAccess", "AmazonDynamoDBFullAccesswithDataPipeline", "ServiceQuotasReadOnlyAccess", "ServiceQuotasFullAccess", "AWSSupportServiceRolePolicy", "AmazonDynamoDBFullAccess", "AmazonLexFullAccess"], "resource-groups:listgroups": ["AmazonDynamoDBReadOnlyAccess", "CloudWatchAutomaticDashboardsAccess", "AmazonSSMServiceRolePolicy", "AmazonDynamoDBFullAccess", "AmazonSSMMaintenanceWindowRole"], "resource-groups:listgroupresources": ["AmazonDynamoDBReadOnlyAccess", "CloudWatchAutomaticDashboardsAccess", "AmazonSSMServiceRolePolicy", "AmazonDynamoDBFullAccess", "AmazonSSMMaintenanceWindowRole", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "resource-groups:getgroup": ["AmazonDynamoDBFullAccess", "AmazonDynamoDBReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "resource-groups:getgroupquery": ["AmazonDynamoDBFullAccess", "AmazonSSMServiceRolePolicy", "AmazonDynamoDBReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "resource-groups:deletegroup": ["AmazonDynamoDBFullAccess", "AmazonLaunchWizard_Fullaccess"], "resource-groups:creategroup": ["AmazonDynamoDBFullAccess", "AmazonLaunchWizard_Fullaccess"], "cloudwatch:getinsightrulereport": ["AmazonDynamoDBFullAccess", "AmazonDynamoDBReadOnlyAccess"], "cloudformation:*stack*": ["AWSCodeStarServiceRole"], "cloudformation:deletechangeset": ["ServerMigration_ServiceRole", "AWSServiceCatalogAdminFullAccess", "AWSServiceRoleForSMS", "AWSCodeStarServiceRole", "AWSElasticBeanstalkMaintenance", "AWSThinkboxAWSPortalAdminPolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:gettemplatesummary": ["AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogEndUserFullAccess", "AWSCodeStarServiceRole", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSCodeStarFullAccess", "AWSGlueConsoleFullAccess"], "codestar:*": ["AWSCodeStarServiceRole", "AWSCodeStarFullAccess"], "codepipeline:*": ["AWSCodeStarServiceRole", "AWSCodePipelineFullAccess", "SystemAdministrator"], "codedeploy:*": ["SystemAdministrator", "AWSCodeStarServiceRole", "AWSCodeDeployFullAccess"], "codebuild:*": ["AWSCodeStarServiceRole", "AWSCodeBuildAdminAccess"], "cloudwatch:put*": ["AWSCodeStarServiceRole"], "elasticbeanstalk:*": ["AWSElasticBeanstalkService", "AWSCodeStarServiceRole", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSElasticBeanstalkFullAccess"], "cloud9:createenvironmentec2": ["AWSCodeStarServiceRole", "AWSCloud9User"], "cloud9:deleteenvironment": ["AWSCodeStarServiceRole"], "cloud9:describeenvironment*": ["AWSCodeStarServiceRole", "AWSCodeStarFullAccess"], "cloud9:listenvironments": ["AWSCodeStarServiceRole", "AWSSupportServiceRolePolicy", "SecurityAudit"], "iam:setdefaultpolicyversion": ["AWSCodeStarServiceRole"], "iam:createpolicy": ["AWSCodeStarServiceRole"], "iam:deletepolicy": ["AWSCodeStarServiceRole"], "iam:addroletoinstanceprofile": ["AmazonLaunchWizard_Fullaccess", "AWSCodeStarServiceRole", "AWSElasticBeanstalkFullAccess"], "iam:createinstanceprofile": ["AmazonLaunchWizard_Fullaccess", "AWSCodeStarServiceRole", "AWSCompromisedKeyQuarantine", "AWSElasticBeanstalkFullAccess"], "iam:deleteinstanceprofile": ["AmazonLaunchWizard_Fullaccess", "AWSCodeStarServiceRole"], "iam:removerolefrominstanceprofile": ["AmazonLaunchWizard_Fullaccess", "AWSCodeStarServiceRole"], "iam:attachuserpolicy": ["AWSCodeStarServiceRole", "AWSCompromisedKeyQuarantine", "AWSOpsWorksRegisterCLI_OnPremises"], "iam:detachuserpolicy": ["AWSCodeStarServiceRole", "AWSCompromisedKeyQuarantine"], "iam:createpolicyversion": ["AWSCodeStarServiceRole"], "iam:deletepolicyversion": ["AWSCodeStarServiceRole"], "iam:listentitiesforpolicy": ["AWS_ConfigRole", "AWSCodeStarServiceRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator", "AWSConfigServiceRolePolicy"], "transcribe:*": ["AmazonTranscribeFullAccess"], "dynamodb:getrecords": ["AWSLambdaDynamoDBExecutionRole", "AWSLambdaInvocation-DynamoDB", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "DynamoDBReplicationServiceRolePolicy"], "dynamodb:getsharditerator": ["AWSLambdaDynamoDBExecutionRole", "AWSLambdaInvocation-DynamoDB", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "DynamoDBReplicationServiceRolePolicy"], "athena:*": ["AmazonAthenaFullAccess"], "greengrass:createdeployment": ["AWSDeepLensServiceRolePolicy", "AWSRoboMakerServiceRolePolicy", "AWSRoboMakerServicePolicy"], "greengrass:creategroupversion": ["AWSDeepLensServiceRolePolicy", "AWSRoboMakerServiceRolePolicy", "AWSRoboMakerServicePolicy"], "greengrass:createfunctiondefinition": ["AWSDeepLensServiceRolePolicy", "AWSRoboMakerServiceRolePolicy", "AWSRoboMakerServicePolicy"], "greengrass:createfunctiondefinitionversion": ["AWSDeepLensServiceRolePolicy", "AWSRoboMakerServiceRolePolicy", "AWSRoboMakerServicePolicy"], "greengrass:getdeploymentstatus": ["AWSDeepLensServiceRolePolicy", "AWSRoboMakerServicePolicy", "AWSRoboMakerServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getgroup": ["AWSRoboMakerServiceRolePolicy", "AWSDeepLensServiceRolePolicy", "AWSServiceRoleForIoTSiteWise", "AWSSupportServiceRolePolicy", "AWSIoTSiteWiseConsoleFullAccess", "AWSRoboMakerServicePolicy"], "greengrass:getgroupversion": ["AWSRoboMakerServiceRolePolicy", "AWSDeepLensServiceRolePolicy", "AWSServiceRoleForIoTSiteWise", "AWSSupportServiceRolePolicy", "AWSIoTSiteWiseConsoleFullAccess", "AWSRoboMakerServicePolicy"], "greengrass:getcoredefinitionversion": ["AWSRoboMakerServiceRolePolicy", "AWSDeepLensServiceRolePolicy", "AWSServiceRoleForIoTSiteWise", "AWSSupportServiceRolePolicy", "AWSIoTSiteWiseConsoleFullAccess", "AWSRoboMakerServicePolicy"], "greengrass:getfunctiondefinitionversion": ["AWSDeepLensServiceRolePolicy", "AWSRoboMakerServicePolicy", "AWSRoboMakerServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getassociatedrole": ["AWSDeepLensServiceRolePolicy", "AWSServiceRoleForIoTSiteWise", "AWSRoboMakerServiceRolePolicy", "AWSRoboMakerServicePolicy"], "lambda:updatefunctioncode": ["AWSDeepRacerServiceRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "AWSRoboMakerServiceRolePolicy", "AWSDeepLensServiceRolePolicy", "AWSRoboMakerServicePolicy"], "cloudfront:*": ["CloudFrontFullAccess"], "iam:listservercertificates": ["CloudFrontReadOnlyAccess", "AWSTrustedAdvisorServiceRolePolicy", "CloudFrontFullAccess", "AWSSupportServiceRolePolicy", "SystemAdministrator", "AWSElasticBeanstalkFullAccess"], "waf:listwebacls": ["CloudFrontReadOnlyAccess", "CloudFrontFullAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "wafv2:listwebacls": ["CloudFrontReadOnlyAccess", "CloudFrontFullAccess"], "ec2:modifyvpcendpoint": ["AmazonRDSBetaServiceRolePolicy", "AmazonRDSServiceRolePolicy", "AmazonRedshiftServiceLinkedRolePolicy", "NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess"], "ec2:createvpcendpoint": ["AmazonRDSBetaServiceRolePolicy", "AmazonRDSServiceRolePolicy", "AmazonRedshiftServiceLinkedRolePolicy", "AmazonSageMakerFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonManagedBlockchainConsoleFullAccess", "AmazonElasticMapReduceFullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:deletevpcendpoints": ["AmazonRDSBetaServiceRolePolicy", "AmazonRDSServiceRolePolicy", "AmazonRedshiftServiceLinkedRolePolicy", "AWSDeepRacerCloudFormationAccessPolicy", "NetworkAdministrator", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:unassignprivateipaddresses": ["AmazonRDSServiceRolePolicy", "AmazonEKS_CNI_Policy", "APIGatewayServiceRolePolicy", "NetworkAdministrator", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonVPCFullAccess", "SystemAdministrator"], "kinesis:updateshardcount": ["AmazonRDSServiceRolePolicy"], "cloudwatch:getmetricdata": ["AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "CloudWatchSyntheticsFullAccess", "AWSWAFConsoleFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "ServiceQuotasReadOnlyAccess", "ServiceQuotasFullAccess", "AWSGlueConsoleFullAccess", "AWSAutoScalingPlansEC2AutoScalingPolicy", "AmazonElasticFileSystemFullAccess", "AWSWAFConsoleReadOnlyAccess", "AmazonElasticFileSystemReadOnlyAccess", "AmazonWorkMailFullAccess", "ComputeOptimizerServiceRolePolicy", "ComputeOptimizerReadOnlyAccess", "AmazonKendraFullAccess", "AmazonWorkMailReadOnlyAccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "elasticfilesystem:describebackuppolicy": ["AmazonElasticFileSystemReadOnlyAccess", "AmazonElasticFileSystemFullAccess"], "elasticfilesystem:describefilesystempolicy": ["AmazonElasticFileSystemReadOnlyAccess", "AmazonElasticFileSystemFullAccess"], "elasticfilesystem:describelifecycleconfiguration": ["AmazonElasticFileSystemReadOnlyAccess", "AmazonElasticFileSystemFullAccess", "AWSSupportServiceRolePolicy"], "elasticfilesystem:describemounttargets": ["AWSDataSyncFullAccess", "AmazonElasticFileSystemClientFullAccess", "AmazonElasticFileSystemFullAccess", "AmazonSageMakerFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSDataSyncReadOnlyAccess", "AmazonElasticFileSystemReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "AmazonElasticFileSystemClientReadOnlyAccess", "AmazonElasticFileSystemClientReadWriteAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "elasticfilesystem:describemounttargetsecuritygroups": ["AmazonElasticFileSystemFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonElasticFileSystemReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "elasticfilesystem:describeaccesspoints": ["AmazonECS_FullAccess", "AmazonElasticFileSystemReadOnlyAccess", "AmazonElasticFileSystemFullAccess"], "elasticfilesystem:listtagsforresource": ["AmazonElasticFileSystemReadOnlyAccess", "AmazonElasticFileSystemFullAccess"], "mechanicalturk:get*": ["AmazonMechanicalTurkReadOnly"], "mechanicalturk:list*": ["AmazonMechanicalTurkReadOnly"], "elasticmapreduce:modifyinstancegroups": ["AWSApplicationAutoscalingEMRInstanceGroupPolicy", "AmazonEC2RoleforDataPipelineRole", "AmazonElasticMapReduceforAutoScalingRole"], "mobileanalytics:getreports": ["AmazonMobileAnalyticsFinancialReportAccess", "AmazonMobileAnalyticsNon-financialReportAccess"], "connect:*": ["AmazonConnectServiceLinkedRolePolicy", "AmazonConnectFullAccess"], "ds:createidentitypooldirectory": ["AmazonWorkMailFullAccess", "AmazonConnectFullAccess"], "ds:deletedirectory": ["AmazonWorkMailFullAccess", "AmazonConnectFullAccess", "AmazonLaunchWizard_Fullaccess"], "autoscaling:describelaunchconfigurations": ["AWS_ConfigRole", "AWSElasticBeanstalkService", "AWSTrustedAdvisorServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSBatchServiceRole", "AWSConfigServiceRolePolicy"], "autoscaling:describelifecyclehooks": ["AWS_ConfigRole", "AWSCodeDeployRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "autoscaling:describepolicies": ["AWS_ConfigRole", "AWSCodeDeployRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "autoscaling:describescheduledactions": ["AWSAutoScalingPlansEC2AutoScalingPolicy", "AWS_ConfigRole", "AWSElasticBeanstalkService", "AWSCodeDeployRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "autoscaling:describetags": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "backup:listbackupplans": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "backup:listbackupselections": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "backup:getbackupselection": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "cloudformation:describetype": ["AWSConfigRole", "AWS_ConfigRole", "AWS_Config_Role", "AWSConfigServiceRolePolicy"], "cloudformation:listtypes": ["AWSConfigRole", "AWS_ConfigRole", "AWS_Config_Role", "AWSConfigServiceRolePolicy"], "cloudtrail:geteventselectors": ["AWSSecurityHubServiceRolePolicy", "AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSCodePipelineFullAccess", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AWSCloudTrailReadOnlyAccess", "AmazonMacieSetupRole"], "config:batchget*": ["AWS_ConfigRole", "AWS_Config_Role", "AWSConfigRulesExecutionRole", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "config:put*": ["AWS_ConfigRole", "AWS_Config_Role", "AWSConfigRulesExecutionRole", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "config:select*": ["AWS_ConfigRole", "AWSConfigUserAccess", "AWS_Config_Role", "AWSConfigRulesExecutionRole", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "dms:describereplicationinstances": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "ec2:getebsencryptionbydefault": ["AWS_ConfigRole", "ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWS_Config_Role", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "elasticache:describecacheclusters": ["AWS_ConfigRole", "CloudWatchAutomaticDashboardsAccess", "AWSResourceGroupsReadOnlyAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "elasticache:describereplicationgroups": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "elasticloadbalancing:describetags": ["AmazonInspectorServiceRolePolicy", "AWS_ConfigRole", "AWSResourceGroupsReadOnlyAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "elasticmapreduce:describesecurityconfiguration": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "es:listtags": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "guardduty:getdetector": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "guardduty:getfindings": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "guardduty:getmasteraccount": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "guardduty:listdetectors": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "guardduty:listfindings": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:getaccountauthorizationdetails": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:getaccountpasswordpolicy": ["AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "AWS_Config_Role", "IAMUserChangePassword", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:getcredentialreport": ["AWSSecurityHubServiceRolePolicy", "AWS_ConfigRole", "AWSTrustedAdvisorServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "SystemAdministrator", "AWSConfigServiceRolePolicy"], "iam:getgroup": ["AWS_ConfigRole", "AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:getgrouppolicy": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:getuserpolicy": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:listattachedgrouppolicies": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:listattacheduserpolicies": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:listgrouppolicies": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "SystemAdministrator", "AWSConfigServiceRolePolicy"], "iam:listgroupsforuser": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "SystemAdministrator", "AWSConfigServiceRolePolicy"], "iam:listinstanceprofilesforrole": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "iam:listuserpolicies": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "SystemAdministrator", "AWSConfigServiceRolePolicy"], "iam:listvirtualmfadevices": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "kms:getkeypolicy": ["AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "kms:getkeyrotationstatus": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "kms:listresourcetags": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "lambda:getalias": ["AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSCodeDeployRoleForLambdaLimited", "AWSCodeDeployRoleForLambda", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSRoboMakerServicePolicy"], "lambda:getpolicy": ["AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "AWS_Config_Role", "AmazonCognitoPowerUser", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AmazonLexFullAccess", "AWSConfigServiceRolePolicy"], "lambda:listaliases": ["AWS_ConfigRole", "AccessAnalyzerServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "rds:describedbsnapshotattributes": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "redshift:describeclusterparametergroups": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "redshift:describeclusterparameters": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "redshift:describeclustersnapshots": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "redshift:describeclustersubnetgroups": ["AWSConfigServiceRolePolicy", "AWS_ConfigRole", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSGlueConsoleFullAccess"], "redshift:describeeventsubscriptions": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "redshift:describeloggingstatus": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:getaccelerateconfiguration": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:getbucketcors": ["AWS_ConfigRole", "AmazonSageMakerFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:getbucketlogging": ["AWS_ConfigRole", "AWSThinkboxAWSPortalAdminPolicy", "AWSTrustedAdvisorServiceRolePolicy", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AmazonChimeFullAccess", "AWSConfigServiceRolePolicy"], "s3:getbucketnotification": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:getbucketobjectlockconfiguration": ["AWSConfigRole", "AWS_ConfigRole", "AWS_Config_Role", "AWSConfigServiceRolePolicy"], "s3:getbucketrequestpayment": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "s3:getbucketwebsite": ["AWS_ConfigRole", "AmazonRoute53FullAccess", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "NetworkAdministrator", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AmazonChimeFullAccess", "AWSConfigServiceRolePolicy"], "s3:getreplicationconfiguration": ["AWS_ConfigRole", "CloudwatchApplicationInsightsServiceLinkedRolePolicy", "AmazonMacieServiceRolePolicy", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "sagemaker:describenotebookinstance": ["AWS_ConfigRole", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AmazonBraketFullAccess", "AWSConfigServiceRolePolicy"], "sagemaker:listendpointconfigs": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "sagemaker:listnotebookinstances": ["AWS_ConfigRole", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AmazonBraketFullAccess", "AWSConfigServiceRolePolicy"], "secretsmanager:listsecrets": ["KafkaServiceRolePolicy", "AWS_ConfigRole", "AmazonSageMakerFullAccess", "AWS_Config_Role", "AmazonRedshiftFullAccess", "AmazonKendraFullAccess", "AWSSupportServiceRolePolicy", "AmazonRDSDataFullAccess", "AWSConfigRole", "SecurityAudit", "AWSIoTSiteWiseConsoleFullAccess", "AWSConfigServiceRolePolicy"], "secretsmanager:listsecretversionids": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "SecurityAudit", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "securityhub:describehub": ["AWSConfigRole", "AWS_ConfigRole", "AWS_Config_Role", "AWSConfigServiceRolePolicy"], "sns:listtagsforresource": ["AWSConfigRole", "AWS_ConfigRole", "AWS_Config_Role", "AWSConfigServiceRolePolicy"], "sqs:listqueuetags": ["AWS_ConfigRole", "AmazonLaunchWizard_Fullaccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWS_Config_Role", "SecurityAudit", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "support:describecases": ["AWS_ConfigRole", "AWS_Config_Role", "AmazonSSMServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "waf:getloggingconfiguration": ["AWSConfigRole", "AWS_ConfigRole", "AWS_Config_Role", "AWSConfigServiceRolePolicy"], "waf-regional:getloggingconfiguration": ["AWSConfigRole", "AWS_ConfigRole", "AWS_Config_Role", "AWSConfigServiceRolePolicy"], "waf-regional:getwebaclforresource": ["AWS_ConfigRole", "AWS_Config_Role", "AWSSupportServiceRolePolicy", "AWSConfigRole", "AWSConfigServiceRolePolicy"], "sns:addpermission": ["AWSCloudTrailFullAccess"], "cloudtrail:*": ["CloudTrailServiceRolePolicy", "AWSCloudTrailFullAccess"], "rds:addroletodbcluster": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:addsourceidentifiertosubscription": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:applypendingmaintenanceaction": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:copydbclusterparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:copydbparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:createdbcluster": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:createdbclusterparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:createdbinstance": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSApplicationAutoscalingRDSClusterPolicy", "AWSElasticBeanstalkRoleRDS", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:createdbparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:createdbsubnetgroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:createeventsubscription": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:deletedbcluster": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupServiceRolePolicyForRestores", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:deletedbclusterparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:deletedbinstance": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSApplicationAutoscalingRDSClusterPolicy", "AWSBackupServiceRolePolicyForRestores", "AWSElasticBeanstalkRoleRDS", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:deletedbparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:deletedbsubnetgroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:deleteeventsubscription": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:describeenginedefaultclusterparameters": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:describeenginedefaultparameters": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:describeoptiongroups": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupOperatorAccess", "AWSTrustedAdvisorServiceRolePolicy", "AWSBackupFullAccess", "AWSSupportServiceRolePolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:describevaliddbinstancemodifications": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:failoverdbcluster": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:modifydbcluster": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSApplicationAutoscalingRDSClusterPolicy", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:modifydbclusterparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:modifydbclustersnapshotattribute": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:modifydbinstance": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSElasticBeanstalkRoleRDS", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:modifydbparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:modifydbsubnetgroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:modifyeventsubscription": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:promotereadreplicadbcluster": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:rebootdbinstance": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:removerolefromdbcluster": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:removesourceidentifierfromsubscription": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:removetagsfromresource": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:resetdbclusterparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:resetdbparametergroup": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "rds:restoredbclusterfromsnapshot": ["AmazonDocDBFullAccess", "NeptuneFullAccess", "AWSBackupServiceRolePolicyForRestores", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess"], "rds:restoredbclustertopointintime": ["AmazonDocDBFullAccess", "NeptuneConsoleFullAccess", "NeptuneFullAccess", "AmazonDocDBConsoleFullAccess"], "cloud9:*": ["AWSCloud9Administrator"], "acm-pca:*": ["AWSCertificateManagerPrivateCAFullAccess"], "route53:createhostedzone": ["AWSCloudMapFullAccess", "AmazonRoute53DomainsFullAccess", "AmazonECS_FullAccess", "AmazonRoute53AutoNamingFullAccess"], "route53domains:*": ["NetworkAdministrator", "AmazonRoute53FullAccess", "AmazonRoute53DomainsFullAccess", "SystemAdministrator"], "zocalo:describe*": ["AmazonZocaloReadOnlyAccess"], "comprehend:*": ["ComprehendFullAccess"], "cognito-identity:mergedeveloperidentities": ["AmazonCognitoDeveloperAuthenticatedIdentities"], "cognito-identity:unlinkdeveloperidentity": ["AmazonCognitoDeveloperAuthenticatedIdentities"], "tag:untagresources": ["AmazonRedshiftFullAccess", "ResourceGroupsandTagEditorFullAccess", "AWSOpsWorksCMServiceRole"], "tag:gettagvalues": ["AWSBackupOperatorAccess", "ResourceGroupsandTagEditorFullAccess", "AWSBackupFullAccess", "AmazonRedshiftFullAccess", "ResourceGroupsandTagEditorReadOnlyAccess", "AWSDataExchangeProviderFullAccess"], "tag:gettagkeys": ["AWSBackupOperatorAccess", "ResourceGroupsandTagEditorFullAccess", "AWSConfigUserAccess", "AWSBackupFullAccess", "AmazonRedshiftFullAccess", "AWSDataExchangeProviderFullAccess", "SecurityAudit", "ResourceGroupsandTagEditorReadOnlyAccess"], "tag:tagresources": ["AmazonRedshiftFullAccess", "ResourceGroupsandTagEditorFullAccess", "AWSOpsWorksCMServiceRole"], "secretsmanager:tagresource": ["AmazonRedshiftFullAccess", "AmazonRDSDataFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "ecs:runtask": ["AmazonEC2ContainerServiceEventsRole", "AWSBatchServiceRole"], "appsync:createresolver": ["AWSAppSyncSchemaAuthor"], "appsync:createtype": ["AWSAppSyncSchemaAuthor"], "appsync:deleteresolver": ["AWSAppSyncSchemaAuthor"], "appsync:deletetype": ["AWSAppSyncSchemaAuthor"], "appsync:getresolver": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy"], "appsync:gettype": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy"], "appsync:getdatasource": ["AWSAppSyncSchemaAuthor"], "appsync:getschemacreationstatus": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy"], "appsync:getintrospectionschema": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy"], "appsync:listtypes": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy"], "appsync:listresolvers": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy"], "appsync:listdatasources": ["AWSAppSyncSchemaAuthor", "AWSSupportServiceRolePolicy"], "appsync:startschemacreation": ["AWSAppSyncSchemaAuthor"], "appsync:updateresolver": ["AWSAppSyncSchemaAuthor"], "appsync:updatetype": ["AWSAppSyncSchemaAuthor"], "a4b:registerdevice": ["AlexaForBusinessDeviceSetup"], "a4b:completeregistration": ["AlexaForBusinessDeviceSetup"], "a4b:searchdevices": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessDeviceSetup", "AlexaForBusinessPolyDelegatedAccessPolicy", "AWSSupportServiceRolePolicy"], "a4b:searchnetworkprofiles": ["AlexaForBusinessDeviceSetup"], "a4b:getnetworkprofile": ["AlexaForBusinessDeviceSetup"], "a4b:putdevicesetupevents": ["AlexaForBusinessDeviceSetup"], "textract:*": ["AmazonTextractFullAccess"], "elasticbeanstalk:putinstancestatistics": ["AWSElasticBeanstalkWebTier", "AWSElasticBeanstalkWorkerTier"], "ecs:updateservice": ["AWSApplicationAutoscalingECSServicePolicy", "AmazonEC2ContainerServiceAutoscaleRole"], "acm:request*": ["SystemAdministrator"], "acm:resend*": ["SystemAdministrator"], "cloudtrail:startlogging": ["AWSControlTowerServiceRolePolicy", "AWSCodePipelineFullAccess", "AmazonMacieServiceRolePolicy", "SystemAdministrator", "AmazonMacieSetupRole"], "cloudtrail:stoplogging": ["AmazonMacieServiceRolePolicy", "SystemAdministrator", "AWSControlTowerServiceRolePolicy", "AmazonMacieSetupRole"], "codecommit:createbranch": ["SystemAdministrator"], "codecommit:createrepository": ["AmazonSageMakerFullAccess", "SystemAdministrator"], "config:*": ["SystemAdministrator"], "ec2:allocate*": ["SystemAdministrator"], "ec2:assignprivateipaddresses*": ["SystemAdministrator"], "ec2:associate*": ["SystemAdministrator"], "ec2:attachinternetgateway": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:attachvpngateway": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:bundle*": ["SystemAdministrator"], "ec2:cancel*": ["SystemAdministrator"], "ec2:copy*": ["SystemAdministrator"], "ec2:createcustomergateway": ["NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:createdhcpoptions": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:createflowlogs": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:createinstanceexporttask": ["SystemAdministrator", "AWSConnector"], "ec2:createinternetgateway": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:createkeypair": ["AutoScalingConsoleFullAccess", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonLaunchWizard_Fullaccess", "SystemAdministrator"], "ec2:createlaunchtemplateversion": ["SystemAdministrator", "AWSElasticBeanstalkService"], "ec2:createnatgateway": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:createplacementgroup": ["NetworkAdministrator", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:createreservedinstanceslisting": ["SystemAdministrator", "AWSSupportServiceRolePolicy"], "ec2:createroutetable": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:createspotdatafeedsubscription": ["SystemAdministrator"], "ec2:createsubnet": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonWorkMailFullAccess", "AmazonECS_FullAccess", "AmazonZocaloFullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:createvpc": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonWorkMailFullAccess", "AmazonECS_FullAccess", "AmazonZocaloFullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:createvpnconnection": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:createvpnconnectionroute": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:createvpngateway": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:deleteflowlogs": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:deletekeypair": ["AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonLaunchWizard_Fullaccess", "SystemAdministrator"], "ec2:deletelaunchtemplateversions": ["SystemAdministrator", "AWSElasticBeanstalkService"], "ec2:deletenatgateway": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:deleteplacementgroup": ["NetworkAdministrator", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:deletespotdatafeedsubscription": ["SystemAdministrator"], "ec2:deletesubnet": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonWorkMailFullAccess", "AmazonECS_FullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:deletevpc": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonWorkMailFullAccess", "AmazonECS_FullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:deletevpnconnection": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:deletevpnconnectionroute": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:deletevpngateway": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:detachinternetgateway": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:detachvpngateway": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:disablevgwroutepropagation": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:disablevpcclassiclinkdnssupport": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:disassociateroutetable": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:enablevgwroutepropagation": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:enablevolumeio": ["SystemAdministrator"], "ec2:enablevpcclassiclinkdnssupport": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:gethostreservationpurchasepreview": ["SystemAdministrator"], "ec2:getlaunchtemplatedata": ["AmazonLaunchWizard_Fullaccess", "SystemAdministrator"], "ec2:getpassworddata": ["AWSElasticBeanstalkCustomPlatformforEC2Role", "AmazonLaunchWizard_Fullaccess", "SystemAdministrator"], "ec2:import*": ["SystemAdministrator"], "ec2:modify*": ["SystemAdministrator"], "ec2:monitorinstances": ["SystemAdministrator"], "ec2:moveaddresstovpc": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:purchase*": ["SystemAdministrator"], "ec2:registerimage": ["VMImportExportRoleForAWSConnector", "AWSElasticBeanstalkCustomPlatformforEC2Role", "SystemAdministrator"], "ec2:release*": ["SystemAdministrator"], "ec2:replace*": ["SystemAdministrator"], "ec2:reportinstancestatus": ["SystemAdministrator"], "ec2:request*": ["SystemAdministrator"], "ec2:reset*": ["SystemAdministrator"], "ec2:restoreaddresstoclassic": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:runscheduledinstances": ["SystemAdministrator"], "ec2:unmonitorinstances": ["SystemAdministrator"], "iam:getaccount*": ["SystemAdministrator"], "iam:getcontextkeys*": ["SystemAdministrator"], "iam:listaccountaliases": ["AmazonMacieServiceRolePolicy", "SystemAdministrator", "AWSSupportServiceRolePolicy", "AmazonMacieSetupRole"], "iam:listgroups": ["AWSKeyManagementServicePowerUser", "AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogAdminReadOnlyAccess", "IAMAccessAdvisorReadOnly", "AWSSupportServiceRolePolicy", "SystemAdministrator", "AWSGlueConsoleFullAccess"], "iam:listopenidconnectproviders": ["AmazonCognitoReadOnly", "SystemAdministrator", "AWSSupportServiceRolePolicy", "AmazonCognitoPowerUser"], "iam:listpoliciesgrantingserviceaccess": ["IAMAccessAdvisorReadOnly", "SystemAdministrator"], "iam:updateservercertificate": ["SystemAdministrator"], "iam:updatesigningcertificate": ["SystemAdministrator"], "kms:createalias": ["AWSKeyManagementServicePowerUser", "SystemAdministrator"], "kms:createkey": ["AWSKeyManagementServicePowerUser", "SystemAdministrator"], "kms:deletealias": ["AWSKeyManagementServicePowerUser", "SystemAdministrator"], "kms:generaterandom": ["AWSKeyManagementServicePowerUser", "SystemAdministrator"], "kms:encrypt": ["AWSThinkboxAWSPortalAdminPolicy", "AWSServiceRoleForImageBuilder", "AWSBackupServiceRolePolicyForRestores", "SystemAdministrator"], "kms:reencrypt*": ["SystemAdministrator"], "lambda:create*": ["SystemAdministrator", "DataScientist"], "lambda:delete*": ["SystemAdministrator", "DataScientist"], "lambda:publishversion": ["AWSDeepLensServiceRolePolicy", "CloudWatchSyntheticsFullAccess", "SystemAdministrator", "DataScientist"], "lambda:update*": ["SystemAdministrator", "DataScientist"], "route53:*": ["NetworkAdministrator", "AmazonRoute53FullAccess", "SystemAdministrator"], "ses:*": ["AmazonSESFullAccess", "AmazonWorkMailFullAccess", "SystemAdministrator"], "trustedadvisor:*": ["SystemAdministrator"], "ec2:acceptvpcpeeringconnection": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:createvpcpeeringconnection": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:deletecustomergateway": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:deletedhcpoptions": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:deleteinternetgateway": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:deletenetworkacl*": ["SystemAdministrator"], "ec2:deleteroutetable": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "SystemAdministrator"], "ec2:deletevpcpeeringconnection": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:disablevpcclassiclink": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:enablevpcclassiclink": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "ec2:getconsolescreenshot": ["NetworkAdministrator", "SystemAdministrator", "AWSSupportServiceRolePolicy"], "ec2:rejectvpcpeeringconnection": ["NetworkAdministrator", "AmazonVPCFullAccess", "SystemAdministrator"], "iam:getaccesskeylastused": ["SystemAdministrator", "AWSSupportServiceRolePolicy"], "iam:getgroup*": ["SystemAdministrator"], "iam:getopenidconnectprovider": ["SystemAdministrator", "AWSSupportServiceRolePolicy"], "iam:getpolicy*": ["SystemAdministrator"], "iam:getrole*": ["SystemAdministrator"], "iam:getservercertificate": ["AWSTrustedAdvisorServiceRolePolicy", "SystemAdministrator", "AWSSupportServiceRolePolicy"], "iam:getservicelastaccessed*": ["SystemAdministrator"], "iam:getuser*": ["SystemAdministrator"], "iam:listattached*": ["SystemAdministrator"], "iam:listinstanceprofiles*": ["SystemAdministrator"], "iam:listmfadevices": ["SystemAdministrator", "AWSSupportServiceRolePolicy"], "iam:listsigningcertificates": ["SystemAdministrator", "AWSSupportServiceRolePolicy"], "iam:upload*": ["SystemAdministrator"], "s3:deleteobjectversion": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AmazonMacieServiceRolePolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "AmazonAppStreamServiceAccess", "AWSThinkboxAWSPortalAdminPolicy", "AmazonMacieSetupRole"], "s3:putencryptionconfiguration": ["CloudWatchSyntheticsFullAccess", "AmazonAppStreamServiceAccess", "AWSThinkboxAWSPortalAdminPolicy", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy"], "kinesisvideo:tagstream": ["AWSDeepRacerServiceRolePolicy", "AWSDeepRacerRoboMakerAccessPolicy"], "kinesis:*": ["AmazonKinesisFullAccess", "DataScientist"], "sqs:listdeadlettersourcequeues": ["AmazonSQSReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "servicediscovery:updateinstancecustomhealthstatus": ["AmazonECSServiceRolePolicy"], "autoscaling:deletepolicy": ["AmazonECSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkService"], "autoscaling:putscalingpolicy": ["AWSElasticBeanstalkService", "AWSCodeDeployRole", "AmazonECSServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "autoscaling:setinstanceprotection": ["AmazonECSServiceRolePolicy", "GameLiftGameServerGroupPolicy"], "autoscaling-plans:createscalingplan": ["AmazonECSServiceRolePolicy"], "autoscaling-plans:deletescalingplan": ["AmazonECSServiceRolePolicy"], "autoscaling-plans:describescalingplans": ["AmazonECSServiceRolePolicy", "AWSSupportServiceRolePolicy"], "ec2:describeimageattribute": ["AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSMarketplaceAmiIngestion", "AWSBatchServiceRole", "AWSSupportServiceRolePolicy"], "ec2:describespotfleetinstances": ["AWSBatchServiceRole", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSSupportServiceRolePolicy", "AWSThinkboxAWSPortalAdminPolicy", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy"], "ec2:requestspotfleet": ["DataScientist", "AWSBatchServiceRole", "AmazonECS_FullAccess", "AWSThinkboxAWSPortalAdminPolicy", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy"], "ec2:cancelspotfleetrequests": ["DataScientist", "AWSBatchServiceRole", "AmazonECS_FullAccess", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSThinkboxAWSPortalAdminPolicy", "AWSThinkboxDeadlineSpotEventPluginAdminPolicy"], "autoscaling:describeaccountlimits": ["AWSElasticBeanstalkService", "AWSTrustedAdvisorServiceRolePolicy", "ServiceQuotasReadOnlyAccess", "ServiceQuotasFullAccess", "AWSSupportServiceRolePolicy", "AWSBatchServiceRole"], "autoscaling:createlaunchconfiguration": ["AWSElasticBeanstalkService", "AmazonLaunchWizard_Fullaccess", "AmazonECS_FullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole"], "autoscaling:createautoscalinggroup": ["AWSElasticBeanstalkService", "AWSCodeDeployRole", "AmazonLaunchWizard_Fullaccess", "AmazonECS_FullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole"], "autoscaling:setdesiredcapacity": ["AWSBatchServiceRole", "AWSElasticBeanstalkService"], "autoscaling:deletelaunchconfiguration": ["AWSElasticBeanstalkService", "AmazonLaunchWizard_Fullaccess", "AmazonECS_FullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole"], "autoscaling:deleteautoscalinggroup": ["AWSElasticBeanstalkService", "AWSCodeDeployRole", "AmazonLaunchWizard_Fullaccess", "AmazonECS_FullAccess", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole"], "autoscaling:createorupdatetags": ["AWSBatchServiceRole"], "autoscaling:suspendprocesses": ["GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkService", "AWSCodeDeployRole", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole"], "autoscaling:terminateinstanceinautoscalinggroup": ["AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSBatchServiceRole", "AWSElasticBeanstalkService"], "ecs:describeclusters": ["CloudWatchAutomaticDashboardsAccess", "AWSElasticBeanstalkService", "AWSSupportServiceRolePolicy", "AWSBatchFullAccess", "AWSBatchServiceRole"], "ecs:describecontainerinstances": ["AWSElasticBeanstalkMulticontainerDocker", "CloudWatchAutomaticDashboardsAccess", "AWSBatchServiceRole", "AWSSupportServiceRolePolicy"], "ecs:describetaskdefinition": ["AWSBatchServiceRole", "AWSSupportServiceRolePolicy"], "ecs:describetasks": ["AWSElasticBeanstalkMulticontainerDocker", "AWSBatchServiceRole", "AWSSupportServiceRolePolicy"], "ecs:listclusters": ["CloudWatchAutomaticDashboardsAccess", "AWSCodePipelineFullAccess", "AWSBatchServiceRole", "AWSSupportServiceRolePolicy"], "ecs:listcontainerinstances": ["CloudWatchAutomaticDashboardsAccess", "AWSBatchServiceRole", "AWSSupportServiceRolePolicy"], "ecs:listtaskdefinitionfamilies": ["AWSBatchServiceRole"], "ecs:listtaskdefinitions": ["AWSBatchServiceRole", "AWSSupportServiceRolePolicy"], "ecs:listtasks": ["AWSBatchServiceRole", "AWSSupportServiceRolePolicy"], "ecs:createcluster": ["AWSElasticBeanstalkRoleECS", "AmazonEC2ContainerServiceforEC2Role", "AWSBatchServiceRole", "AWSElasticBeanstalkService"], "ecs:deletecluster": ["AWSElasticBeanstalkRoleECS", "AWSBatchServiceRole", "AWSElasticBeanstalkService"], "ecs:registertaskdefinition": ["AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSElasticBeanstalkRoleECS", "AWSBatchServiceRole", "AWSElasticBeanstalkService"], "ecs:deregistertaskdefinition": ["AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSElasticBeanstalkRoleECS", "AWSBatchServiceRole"], "ecs:starttask": ["AWSElasticBeanstalkMulticontainerDocker", "AWSBatchServiceRole"], "ecs:stoptask": ["AWSElasticBeanstalkMulticontainerDocker", "AWSBatchServiceRole"], "ecs:updatecontaineragent": ["AWSBatchServiceRole"], "ecs:deregistercontainerinstance": ["AWSElasticBeanstalkMulticontainerDocker", "AmazonEC2ContainerServiceforEC2Role", "AWSBatchServiceRole"], "glue:*": ["AWSGlueServiceRole", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSGlueConsoleFullAccess"], "chime:*": ["AmazonChimeFullAccess"], "logs:describeresourcepolicies": ["AWSDataSyncFullAccess", "AWSDataSyncReadOnlyAccess", "Route53ResolverServiceRolePolicy", "AmazonMSKFullAccess", "AmazonChimeFullAccess"], "logs:putresourcepolicy": ["AmazonChimeFullAccess", "AmazonSageMakerFullAccess", "AmazonMSKFullAccess"], "wellarchitected:get*": ["WellArchitectedConsoleReadOnlyAccess"], "wellarchitected:list*": ["WellArchitectedConsoleReadOnlyAccess"], "rekognition:*": ["AmazonRekognitionFullAccess"], "machinelearning:predict": ["AmazonMachineLearningRealTimePredictionOnlyAccess"], "discovery:describeconfigurations": ["MigrationHubServiceRolePolicy", "AWSMigrationHubDiscoveryAccess"], "dms:addtagstoresource": ["MigrationHubServiceRolePolicy", "AWSMigrationHubDiscoveryAccess"], "connect:get*": ["AmazonConnectReadOnlyAccess"], "connect:getfederationtokens": ["AmazonConnectReadOnlyAccess"], "route53:associatevpcwithhostedzone": ["AmazonEKSServicePolicy", "AmazonFSxServiceRolePolicy", "AmazonEKSServiceRolePolicy"], "*": ["AdministratorAccess", "AWSElementalMediaLiveFullAccess", "AWSElementalMediaPackageFullAccess", "AWSDenyAll"], "elasticache:describesnapshots": ["AWSResourceGroupsReadOnlyAccess", "AWSSupportServiceRolePolicy"], "elasticache:listtagsforresource": ["AWSResourceGroupsReadOnlyAccess", "AWSSupportServiceRolePolicy"], "kinesis:listtagsforstream": ["AWSResourceGroupsReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "opsworks:listtags": ["AWSResourceGroupsReadOnlyAccess"], "redshift:describetags": ["AWSResourceGroupsReadOnlyAccess", "AWSSupportServiceRolePolicy"], "route53domains:listdomains": ["AmazonWorkMailFullAccess", "AWSResourceGroupsReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "route53:listhealthchecks": ["AWSTrustedAdvisorServiceRolePolicy", "AWSResourceGroupsReadOnlyAccess", "CloudWatchAutomaticDashboardsAccess", "AWSSupportServiceRolePolicy"], "route53:listhostedzones": ["AWSTrustedAdvisorServiceRolePolicy", "AWSResourceGroupsReadOnlyAccess", "AmazonLaunchWizard_Fullaccess", "AmazonWorkMailFullAccess", "AWSSupportServiceRolePolicy"], "route53:listtagsforresource": ["AWSResourceGroupsReadOnlyAccess", "AWSSupportServiceRolePolicy"], "storagegateway:describegatewayinformation": ["AWSBackupOperatorAccess", "AWSResourceGroupsReadOnlyAccess", "AWSBackupFullAccess", "AWSBackupServiceRolePolicyForRestores", "AWSSupportServiceRolePolicy", "SecurityAudit"], "mgh:createprogressupdatestream": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:associatecreatedartifact": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:describemigrationtask": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:disassociatecreatedartifact": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:importmigrationtask": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:listcreatedartifacts": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:notifymigrationtaskstate": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:putresourceattributes": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:notifyapplicationstate": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:describeapplicationstate": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:associatediscoveredresource": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:disassociatediscoveredresource": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:listdiscoveredresources": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "mgh:listmigrationtasks": ["AWSMigrationHubSMSAccess", "MigrationHubSMSAccessServiceRolePolicy", "MigrationHubDMSAccessServiceRolePolicy", "AWSMigrationHubDMSAccess"], "route53:testdnsanswer": ["AmazonRoute53ReadOnlyAccess"], "cloud9:validateenvironmentname": ["AWSCloud9User", "AWSCodeStarFullAccess"], "cloudformation:describestack*": ["AWSAppMeshFullAccess", "AmazonLaunchWizard_Fullaccess", "AmazonECS_FullAccess", "SecurityAudit", "AmazonEC2ContainerServiceFullAccess", "AWSAppMeshReadOnly", "AWSCodeStarFullAccess"], "iot:acceptcertificatetransfer": ["AWSIoTConfigAccess"], "iot:associatetargetswithjob": ["AWSIoTConfigAccess"], "iot:attachpolicy": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:cancelcertificatetransfer": ["AWSIoTConfigAccess"], "iot:canceljob": ["AWSIoTConfigAccess"], "iot:canceljobexecution": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:cleardefaultauthorizer": ["AWSIoTConfigAccess"], "iot:createauthorizer": ["AWSIoTConfigAccess"], "iot:createotaupdate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:createpolicyversion": ["AWSDeepLensServiceRolePolicy", "AWSIoTDeviceDefenderReplaceDefaultPolicyMitigationAction", "AWSIoTConfigAccess"], "iot:createrolealias": ["AWSIoTConfigAccess"], "iot:createthinggroup": ["AWSIoTConfigAccess"], "iot:createthingtype": ["AWSIoTConfigAccess"], "iot:deleteauthorizer": ["AWSIoTConfigAccess"], "iot:deletecacertificate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:deletecertificate": ["AWSDeepLensServiceRolePolicy", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:deletejobexecution": ["AWSIoTConfigAccess"], "iot:deleteotaupdate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:deletepolicy": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:deletepolicyversion": ["AWSIoTConfigAccess"], "iot:deleteregistrationcode": ["AWSIoTConfigAccess"], "iot:deleterolealias": ["AWSIoTConfigAccess"], "iot:deletething": ["AWSDeepLensServiceRolePolicy", "AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:deletethinggroup": ["AWSIoTConfigAccess"], "iot:deletethingtype": ["AWSIoTConfigAccess"], "iot:deletetopicrule": ["AWSIoTConfigAccess"], "iot:deletev2logginglevel": ["AWSIoTConfigAccess"], "iot:deprecatethingtype": ["AWSIoTConfigAccess"], "iot:describeauthorizer": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:describecacertificate": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:describedefaultauthorizer": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:describeeventconfigurations": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:describeindex": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:describejob": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:describejobexecution": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:describerolealias": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:describestream": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:describethingregistrationtask": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:detachpolicy": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:detachprincipalpolicy": ["AWSDeepLensServiceRolePolicy", "AWSIoTConfigAccess"], "iot:disabletopicrule": ["AWSIoTConfigAccess"], "iot:enabletopicrule": ["AWSIoTConfigAccess"], "iot:geteffectivepolicies": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:getindexingconfiguration": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:getjobdocument": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:getloggingoptions": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:getotaupdate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:getpolicyversion": ["SecurityAudit", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:getregistrationcode": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:getv2loggingoptions": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listattachedpolicies": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listauthorizers": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listcacertificates": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listcertificates": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listcertificatesbyca": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listindices": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listjobexecutionsforjob": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listjobexecutionsforthing": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listjobs": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listotaupdates": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listoutgoingcertificates": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listpolicyversions": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listrolealiases": ["AWSIoTDeviceDefenderAudit", "AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:liststreams": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listtargetsforpolicy": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listthinggroups": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listthingregistrationtaskreports": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listthingregistrationtasks": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listthingsinthinggroup": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listthingtypes": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:listv2logginglevels": ["AWSIoTConfigReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSIoTConfigAccess"], "iot:registercacertificate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTConfigAccess"], "iot:rejectcertificatetransfer": ["AWSIoTConfigAccess"], "iot:searchindex": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:setdefaultauthorizer": ["AWSIoTConfigAccess"], "iot:setdefaultpolicyversion": ["AWSIoTConfigAccess"], "iot:setloggingoptions": ["AWSIoTConfigAccess"], "iot:setv2logginglevel": ["AWSIoTConfigAccess"], "iot:setv2loggingoptions": ["AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction", "AWSIoTConfigAccess"], "iot:startthingregistrationtask": ["AWSIoTConfigAccess"], "iot:stopthingregistrationtask": ["AWSIoTConfigAccess"], "iot:testauthorization": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:testinvokeauthorizer": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:transfercertificate": ["AWSIoTConfigAccess"], "iot:updateauthorizer": ["AWSIoTConfigAccess"], "iot:updatecacertificate": ["AWSIoTDeviceTesterForFreeRTOSFullAccess", "AWSIoTDeviceDefenderUpdateCACertMitigationAction", "AWSIoTConfigAccess"], "iot:updateeventconfigurations": ["AWSIoTConfigAccess"], "iot:updateindexingconfiguration": ["AWSIoTConfigAccess"], "iot:updaterolealias": ["AWSIoTConfigAccess"], "iot:updatestream": ["AWSIoTConfigAccess"], "iot:updatethinggroup": ["AWSIoTConfigAccess"], "iot:updateaccountauditconfiguration": ["AWSIoTConfigAccess"], "iot:describeaccountauditconfiguration": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:deleteaccountauditconfiguration": ["AWSIoTConfigAccess"], "iot:startondemandaudittask": ["AWSIoTConfigAccess"], "iot:cancelaudittask": ["AWSIoTConfigAccess"], "iot:describeaudittask": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listaudittasks": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:createscheduledaudit": ["AWSIoTConfigAccess"], "iot:updatescheduledaudit": ["AWSIoTConfigAccess"], "iot:deletescheduledaudit": ["AWSIoTConfigAccess"], "iot:describescheduledaudit": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listscheduledaudits": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listauditfindings": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:createsecurityprofile": ["AWSIoTConfigAccess"], "iot:describesecurityprofile": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:updatesecurityprofile": ["AWSIoTConfigAccess"], "iot:deletesecurityprofile": ["AWSIoTConfigAccess"], "iot:attachsecurityprofile": ["AWSIoTConfigAccess"], "iot:detachsecurityprofile": ["AWSIoTConfigAccess"], "iot:listsecurityprofiles": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listsecurityprofilesfortarget": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listtargetsforsecurityprofile": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listactiveviolations": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:listviolationevents": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "iot:validatesecurityprofilebehaviors": ["AWSIoTConfigReadOnlyAccess", "AWSIoTConfigAccess"], "autoscaling:batchputscheduledupdategroupaction": ["AWSAutoScalingPlansEC2AutoScalingPolicy"], "autoscaling:batchdeletescheduledaction": ["AWSAutoScalingPlansEC2AutoScalingPolicy"], "kinesisvideo:*": ["AmazonKinesisVideoStreamsFullAccess"], "robomaker:get*": ["AWSRoboMakerReadOnlyAccess"], "machinelearning:*": ["AmazonMachineLearningFullAccess", "DataScientist"], "batch:describecomputeenvironments": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "batch:describejobdefinitions": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "cloudformation:liststack*": ["SecurityAudit"], "cloudformation:getstackpolicy": ["ConfigConformsServiceRolePolicy", "AWSSupportServiceRolePolicy", "SecurityAudit"], "cloudsearch:describeserviceaccesspolicies": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "codecommit:getobjectidentifier": ["SecurityAudit"], "cognito-idp:listuserpools": ["AmazonSageMakerReadOnly", "AWSSupportServiceRolePolicy", "SecurityAudit"], "comprehend:describe*": ["SecurityAudit"], "comprehend:list*": ["SecurityAudit"], "config:batchgetaggregateresourceconfig": ["SecurityAudit"], "config:batchgetresourceconfig": ["AWSSecurityHubServiceRolePolicy", "SecurityAudit"], "datapipeline:validatepipelinedefinition": ["SecurityAudit"], "dms:listtagsforresource": ["SecurityAudit"], "fms:listcompliancestatus": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "fms:listpolicies": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "gamelift:listbuilds": ["SecurityAudit"], "gamelift:listfleets": ["SecurityAudit"], "iam:simulatecustompolicy": ["IAMReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "iam:simulateprincipalpolicy": ["IAMReadOnlyAccess", "AWSSupportServiceRolePolicy", "SecurityAudit"], "lambda:getaccountsettings": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "lambda:getlayerversionpolicy": ["AccessAnalyzerServiceRolePolicy", "AWSSupportServiceRolePolicy", "SecurityAudit"], "machinelearning:describemlmodels": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "mediaconnect:describe*": ["SecurityAudit"], "mediaconnect:list*": ["SecurityAudit"], "mediastore:getcontainerpolicy": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "mediastore:listcontainers": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "opsworks-cm:describeservers": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "quicksight:describe*": ["SecurityAudit"], "quicksight:list*": ["SecurityAudit"], "rekognition:describe*": ["SecurityAudit"], "route53domains:listoperations": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "route53domains:listtagsfordomain": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "s3:getaccesspoint": ["AccessAnalyzerServiceRolePolicy", "SecurityAudit"], "s3:getaccesspointpolicy": ["AccessAnalyzerServiceRolePolicy", "SecurityAudit"], "s3:getaccesspointpolicystatus": ["AccessAnalyzerServiceRolePolicy", "SecurityAudit"], "s3:getbucket*": ["AmazonMacieSetupRole", "AWSElasticBeanstalkRoleCore", "SecurityAudit"], "s3:getinventoryconfiguration": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "s3:getmetricsconfiguration": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy", "AWSSupportServiceRolePolicy", "SecurityAudit"], "s3:getobjectacl": ["AWSElasticBeanstalkService", "AmazonRekognitionCustomLabelsFullAccess", "AmazonMacieServiceRolePolicy", "SecurityAudit", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "s3:getobjectversionacl": ["AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonLambdaRolePolicyForLaunchWizardSAP", "SecurityAudit"], "s3:listaccesspoints": ["AccessAnalyzerServiceRolePolicy", "SecurityAudit"], "sdb:domainmetadata": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "sdb:listdomains": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "serverlessrepo:getapplicationpolicy": ["SecurityAudit"], "ses:getidentitydkimattributes": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "ses:getidentitypolicies": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "ses:getidentityverificationattributes": ["AmazonCognitoPowerUser", "AWSSupportServiceRolePolicy", "SecurityAudit"], "ses:listidentities": ["AmazonCognitoPowerUser", "AWSSupportServiceRolePolicy", "SecurityAudit"], "ses:listidentitypolicies": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "ses:listverifiedemailaddresses": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "snowball:listclusters": ["SecurityAudit"], "snowball:listjobs": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "sso:describepermissionspolicies": ["SecurityAudit"], "storagegateway:describebandwidthratelimit": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describecache": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describecachediscsivolumes": ["AWSBackupOperatorAccess", "AWSBackupFullAccess", "AWSBackupServiceRolePolicyForRestores", "AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describemaintenancestarttime": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describenfsfileshares": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describesnapshotschedule": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describestorediscsivolumes": ["AWSBackupOperatorAccess", "AWSBackupFullAccess", "AWSBackupServiceRolePolicyForRestores", "AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describetapearchives": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describetaperecoverypoints": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describetapes": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describeuploadbuffer": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describevtldevices": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "storagegateway:describeworkingstorage": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "translate:list*": ["SecurityAudit"], "waf-regional:listwebacls": ["AWSSupportServiceRolePolicy", "SecurityAudit"], "ssm:listcommandinvocations": ["AWSServiceRoleForImageBuilder", "AmazonSSMServiceRolePolicy", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:listcommands": ["AmazonLambdaRolePolicyForLaunchWizardSAP", "AWSServiceRoleForImageBuilder", "AmazonSSMServiceRolePolicy", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AmazonSSMMaintenanceWindowRole"], "ssm:listtagsforresource": ["AmazonSSMServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSSupportServiceRolePolicy"], "states:describeexecution": ["AWSStepFunctionsReadOnlyAccess", "AmazonSSMServiceRolePolicy", "AWSSupportServiceRolePolicy", "AmazonSSMMaintenanceWindowRole", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "states:startexecution": ["AmazonSSMServiceRolePolicy", "AmazonSSMMaintenanceWindowRole"], "support:describetrustedadvisorchecks": ["AmazonSSMServiceRolePolicy"], "support:describetrustedadvisorchecksummaries": ["AmazonSSMServiceRolePolicy"], "support:describetrustedadvisorcheckresult": ["AmazonSSMServiceRolePolicy"], "ec2:createsnapshots": ["AWSDataLifecycleManagerServiceRole"], "ec2:enablefastsnapshotrestores": ["AWSDataLifecycleManagerServiceRole"], "ec2:describefastsnapshotrestores": ["AWSDataLifecycleManagerServiceRole", "AWSSupportServiceRolePolicy"], "ec2:disablefastsnapshotrestores": ["AWSDataLifecycleManagerServiceRole"], "ec2:modifysnapshotattribute": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSElasticBeanstalkCustomPlatformforEC2Role", "AWSDataLifecycleManagerServiceRole", "VMImportExportRoleForAWSConnector", "AWSMarketplaceSellerProductsFullAccess", "AWSMarketplaceSellerFullAccess", "AWSMarketplaceAmiIngestion"], "ec2:describesnapshotattribute": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSDataLifecycleManagerServiceRole", "AWSSupportServiceRolePolicy", "AWSMarketplaceAmiIngestion"], "autoscaling:completelifecycleaction": ["GameLiftGameServerGroupPolicy", "AWSCodeDeployRole"], "autoscaling:deletelifecyclehook": ["AWSCodeDeployRole"], "autoscaling:putlifecyclehook": ["AWSCodeDeployRole"], "autoscaling:recordlifecycleactionheartbeat": ["AWSCodeDeployRole"], "autoscaling:enablemetricscollection": ["AWSCodeDeployRole"], "autoscaling:resumeprocesses": ["GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkService", "AWSCodeDeployRole", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "autoscaling:attachloadbalancers": ["AWSCodeDeployRole"], "autoscaling:attachloadbalancertargetgroups": ["AWSCodeDeployRole"], "autoscaling:putscheduledupdategroupaction": ["AWSCodeDeployRole", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkService"], "m": ["AWSElementalMediaLiveFullAccess", "AWSElementalMediaPackageFullAccess"], "e": ["AWSElementalMediaLiveFullAccess", "AWSElementalMediaPackageFullAccess"], "d": ["AWSElementalMediaLiveFullAccess", "AWSElementalMediaPackageFullAccess"], "i": ["AWSElementalMediaLiveFullAccess", "AWSElementalMediaPackageFullAccess"], "a": ["AWSElementalMediaLiveFullAccess", "AWSElementalMediaPackageFullAccess"], "p": ["AWSElementalMediaPackageFullAccess"], "c": ["AWSElementalMediaPackageFullAccess"], "k": ["AWSElementalMediaPackageFullAccess"], "g": ["AWSElementalMediaPackageFullAccess"], ":": ["AWSElementalMediaLiveFullAccess", "AWSElementalMediaPackageFullAccess"], "mediaconvert:*": ["AWSElementalMediaConvertFullAccess"], "cloudformation:describestackevents": ["AWSDeepRacerServiceRolePolicy", "ServerMigration_ServiceRole", "AmazonSSMAutomationRole", "AWSServiceCatalogAdminFullAccess", "AWSThinkboxAWSPortalAdminPolicy", "DataScientist", "AWSServiceRoleForSMS", "AWSCloud9ServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "AWSForWordPressPluginPolicy", "AmazonElasticMapReduceFullAccess", "ConfigConformsServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "securityhub:*": ["AWSSecurityHubFullAccess"], "cloudhsm:createlunaclient": ["RDSCloudHsmAuthorizationRole"], "cloudhsm:deletelunaclient": ["RDSCloudHsmAuthorizationRole"], "cloudhsm:describehapg": ["RDSCloudHsmAuthorizationRole"], "cloudhsm:describelunaclient": ["RDSCloudHsmAuthorizationRole"], "cloudhsm:getconfig": ["RDSCloudHsmAuthorizationRole"], "cloudhsm:modifyhapg": ["RDSCloudHsmAuthorizationRole"], "cloudhsm:modifylunaclient": ["RDSCloudHsmAuthorizationRole"], "workspaces:createworkspaces": ["AmazonWorkSpacesAdmin"], "workspaces:describeworkspaces": ["AmazonWorkSpacesAdmin", "AWSSupportServiceRolePolicy"], "workspaces:rebootworkspaces": ["AmazonWorkSpacesAdmin"], "workspaces:rebuildworkspaces": ["AmazonWorkSpacesAdmin"], "workspaces:terminateworkspaces": ["AmazonWorkSpacesAdmin"], "workspaces:describeworkspacedirectories": ["AmazonWorkSpacesAdmin", "AWSSupportServiceRolePolicy"], "workspaces:describeworkspacebundles": ["AmazonWorkSpacesAdmin", "AWSSupportServiceRolePolicy"], "workspaces:modifyworkspaceproperties": ["AmazonWorkSpacesAdmin"], "workspaces:stopworkspaces": ["AmazonWorkSpacesAdmin"], "workspaces:startworkspaces": ["AmazonWorkSpacesAdmin"], "workspaces:describeworkspacesconnectionstatus": ["AmazonWorkSpacesAdmin", "AWSSupportServiceRolePolicy"], "workspaces:createtags": ["AmazonWorkSpacesAdmin"], "workspaces:deletetags": ["AmazonWorkSpacesAdmin"], "workspaces:describetags": ["AmazonWorkSpacesAdmin", "AWSSupportServiceRolePolicy"], "ec2:importkeypair": ["AutoScalingConsoleFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "route53:deletehostedzone": ["AWSCloudMapFullAccess", "AmazonECS_FullAccess", "AmazonRoute53AutoNamingFullAccess"], "servicediscovery:*": ["AWSCloudMapFullAccess", "AmazonRoute53AutoNamingFullAccess"], "personalize:*": ["AmazonPersonalizeFullAccess"], "logs:list*": ["CloudWatchReadOnlyAccess", "CloudWatchLogsReadOnlyAccess", "AmazonBraketFullAccess"], "iam:changepassword": ["IAMUserChangePassword", "AWSCompromisedKeyQuarantine"], "cloudtrail:createtrail": ["AWSCodePipelineFullAccess", "AmazonMacieServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AmazonMacieSetupRole"], "cloudtrail:updatetrail": ["AmazonMacieServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AmazonMacieSetupRole"], "cloudtrail:deletetrail": ["AmazonMacieServiceRolePolicy", "AWSControlTowerServiceRolePolicy", "AmazonMacieSetupRole"], "cloudtrail:puteventselectors": ["AWSCodePipelineFullAccess", "AmazonMacieServiceRolePolicy", "AmazonMacieSetupRole"], "s3:deletebucketwebsite": ["AmazonMacieServiceRolePolicy", "AmazonMacieSetupRole"], "s3:deleteobjecttagging": ["AmazonMacieServiceRolePolicy", "AmazonMacieSetupRole"], "s3:deleteobjectversiontagging": ["AmazonMacieServiceRolePolicy", "AmazonMacieSetupRole"], "ses:sendemail": ["AmazonCognitoIdpEmailServiceRolePolicy"], "ses:sendrawemail": ["AmazonCognitoIdpEmailServiceRolePolicy"], "globalaccelerator:*": ["GlobalAcceleratorFullAccess"], "mobileanalytics:putevents": ["AmazonMobileAnalyticsWriteOnlyAccess"], "ecs:*": ["AmazonEC2ContainerServiceFullAccess", "AmazonECS_FullAccess", "AWSElasticBeanstalkFullAccess"], "cloudformation:*": ["AWSCloudFormationFullAccess", "AWSElasticBeanstalkService", "AWSDeepRacerCloudFormationAccessPolicy", "AWSElasticBeanstalkFullAccess"], "codebuild:createproject": ["AWSElasticBeanstalkService", "AWSCodePipelineFullAccess", "AWSElasticBeanstalkFullAccess"], "codebuild:deleteproject": ["AWSElasticBeanstalkService", "AWSElasticBeanstalkFullAccess"], "codebuild:batchgetbuilds": ["AWSElasticBeanstalkService", "AWSSupportServiceRolePolicy", "AWSElasticBeanstalkFullAccess"], "ecs:poll": ["AWSElasticBeanstalkMulticontainerDocker", "AmazonEC2ContainerServiceforEC2Role"], "ecs:discoverpollendpoint": ["AWSElasticBeanstalkMulticontainerDocker", "AmazonEC2ContainerServiceforEC2Role"], "ecs:starttelemetrysession": ["AWSElasticBeanstalkMulticontainerDocker", "AmazonEC2ContainerServiceforEC2Role"], "ecs:registercontainerinstance": ["AWSElasticBeanstalkMulticontainerDocker", "AmazonEC2ContainerServiceforEC2Role"], "ecs:submit*": ["AWSElasticBeanstalkMulticontainerDocker", "AmazonEC2ContainerServiceforEC2Role"], "polly:describevoices": ["AmazonLexFullAccess", "AWSForWordPressPluginPolicy", "AmazonPollyReadOnlyAccess", "AWSSupportServiceRolePolicy"], "polly:getlexicon": ["AmazonPollyReadOnlyAccess", "AWSSupportServiceRolePolicy"], "polly:getspeechsynthesistask": ["AmazonPollyReadOnlyAccess"], "polly:listlexicons": ["AmazonPollyReadOnlyAccess", "AWSSupportServiceRolePolicy"], "polly:listspeechsynthesistasks": ["AmazonPollyReadOnlyAccess"], "aws-marketplace:meterusage": ["AWSMarketplaceMeteringFullAccess"], "dax:list*": ["AmazonDynamoDBReadOnlyAccess"], "mgh:*": ["AWSMigrationHubFullAccess", "AWSApplicationDiscoveryServiceFullAccess"], "fsx:listtagsforresource": ["AmazonFSxConsoleReadOnlyAccess", "AWSSupportServiceRolePolicy", "AmazonFSxReadOnlyAccess"], "secretsmanager:putresourcepolicy": ["AmazonRDSDataFullAccess", "KafkaServiceRolePolicy"], "secretsmanager:putsecretvalue": ["AmazonRDSDataFullAccess"], "secretsmanager:describesecret": ["KafkaServiceRolePolicy", "AmazonSageMakerFullAccess", "AmazonKendraFullAccess", "AWSSupportServiceRolePolicy", "AmazonRDSDataFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "dbqms:createfavoritequery": ["AmazonRDSDataFullAccess"], "dbqms:describefavoritequeries": ["AmazonRDSDataFullAccess"], "dbqms:updatefavoritequery": ["AmazonRDSDataFullAccess"], "dbqms:deletefavoritequeries": ["AmazonRDSDataFullAccess"], "dbqms:getquerystring": ["AmazonRDSDataFullAccess"], "dbqms:createqueryhistory": ["AmazonRDSDataFullAccess"], "dbqms:describequeryhistory": ["AmazonRDSDataFullAccess"], "dbqms:updatequeryhistory": ["AmazonRDSDataFullAccess"], "dbqms:deletequeryhistory": ["AmazonRDSDataFullAccess"], "rds-data:executesql": ["AmazonRDSDataFullAccess"], "rds-data:executestatement": ["AmazonRDSDataFullAccess"], "rds-data:batchexecutestatement": ["AmazonRDSDataFullAccess"], "rds-data:begintransaction": ["AmazonRDSDataFullAccess"], "rds-data:committransaction": ["AmazonRDSDataFullAccess"], "rds-data:rollbacktransaction": ["AmazonRDSDataFullAccess"], "secretsmanager:getrandompassword": ["AmazonRDSDataFullAccess"], "ec2:replaceroute": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCCrossAccountNetworkInterfaceOperations", "AmazonVPCFullAccess"], "elasticmapreduce:addjobflowsteps": ["AmazonEC2RoleforDataPipelineRole"], "elasticmapreduce:listinstance*": ["AmazonEC2RoleforDataPipelineRole"], "aws-marketplace:createprivatemarketplace": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:startprivatemarketplace": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:stopprivatemarketplace": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:describeprivatemarketplacestatus": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:associateproductswithprivatemarketplace": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:disassociateproductsfromprivatemarketplace": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:listprivatemarketplaceproducts": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:describeprivatemarketplaceproducts": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:listprivatemarketplacerequests": ["AWSPrivateMarketplaceAdminFullAccess", "AWSMarketplaceManageSubscriptions", "AWSMarketplaceRead-only"], "aws-marketplace:describeprivatemarketplacerequests": ["AWSPrivateMarketplaceAdminFullAccess", "AWSMarketplaceManageSubscriptions", "AWSMarketplaceRead-only"], "aws-marketplace:updateprivatemarketplacesettings": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:describeprivatemarketplacesettings": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:createprivatemarketplaceprofile": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:updateprivatemarketplaceprofile": ["AWSPrivateMarketplaceAdminFullAccess"], "aws-marketplace:describeprivatemarketplaceprofile": ["AWSPrivateMarketplaceAdminFullAccess"], "iotanalytics:*": ["AWSIoTAnalyticsFullAccess"], "lambda:updatealias": ["AWSCodeDeployRoleForLambda", "AWSCodeDeployRoleForLambdaLimited", "AWSRoboMakerServicePolicy"], "lambda:getprovisionedconcurrencyconfig": ["AWSCodeDeployRoleForLambda", "AWSCodeDeployRoleForLambdaLimited", "AWSApplicationAutoscalingLambdaConcurrencyPolicy", "AWSSupportServiceRolePolicy"], "ec2:cancelconversiontask": ["AWSConnector"], "ec2:cancelexporttask": ["AWSConnector"], "ec2:importinstance": ["AWSConnector"], "ec2:importvolume": ["AWSConnector"], "ec2:importimage": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSConnector"], "ec2:describeimportimagetasks": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSConnector", "AWSSupportServiceRolePolicy"], "ec2:cancelimporttask": ["AWSConnector"], "ec2:importsnapshot": ["AWSConnector"], "ec2:describeimportsnapshottasks": ["AWSConnector", "AWSSupportServiceRolePolicy"], "apigateway:*": ["AmazonAPIGatewayAdministrator"], "elasticfilesystem:*": ["DataScientist"], "es:*": ["AmazonESFullAccess", "DataScientist"], "firehose:*": ["AmazonKinesisFirehoseFullAccess", "DataScientist"], "fsx:describefilesystems": ["AWSDataSyncFullAccess", "AmazonSageMakerFullAccess", "DataScientist", "AWSDataSyncReadOnlyAccess", "AWSSupportServiceRolePolicy"], "s3:abort*": ["DataScientist"], "s3:putbucketcors": ["AWSThinkboxAWSPortalAdminPolicy", "AmazonSageMakerFullAccess", "DataScientist"], "s3:putbucketlogging": ["AWSThinkboxAWSPortalAdminPolicy", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "DataScientist"], "s3:putbucketnotification": ["DataScientist"], "sagemaker:*": ["AWSDeepRacerServiceRolePolicy", "AmazonSageMakerFullAccess", "DataScientist"], "sagemaker:createpresigneddomainurl": ["AmazonSageMakerFullAccess", "DataScientist"], "sagemaker:describedomain": ["AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy", "DataScientist"], "sagemaker:listdomains": ["AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy", "DataScientist"], "sagemaker:describeuserprofile": ["AmazonSageMakerFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy", "AWSSupportServiceRolePolicy", "DataScientist"], "sagemaker:listuserprofiles": ["AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy", "DataScientist"], "sagemaker:*app": ["AmazonSageMakerFullAccess", "DataScientist"], "sagemaker:listapps": ["AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy", "DataScientist"], "sagemaker:*flowdefinition": ["AmazonAugmentedAIFullAccess", "AmazonAugmentedAIIntegratedAPIAccess", "AmazonSageMakerMechanicalTurkAccess", "DataScientist"], "sagemaker:*flowdefinitions": ["AmazonAugmentedAIFullAccess", "AmazonAugmentedAIIntegratedAPIAccess", "AmazonSageMakerMechanicalTurkAccess", "DataScientist"], "elastictranscoder:*job": ["AmazonElasticTranscoder_JobsSubmitter"], "elastictranscoder:*preset": ["AmazonElasticTranscoder_JobsSubmitter"], "a4b:getdevice": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy", "AWSSupportServiceRolePolicy"], "a4b:getprofile": ["AlexaForBusinessPolyDelegatedAccessPolicy", "AWSSupportServiceRolePolicy"], "a4b:getroom": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy", "AWSSupportServiceRolePolicy"], "a4b:getroomskillparameter": ["AWSSupportServiceRolePolicy"], "a4b:getskillgroup": ["AlexaForBusinessPolyDelegatedAccessPolicy", "AWSSupportServiceRolePolicy"], "a4b:searchprofiles": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy", "AWSSupportServiceRolePolicy"], "a4b:searchrooms": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy", "AWSSupportServiceRolePolicy"], "a4b:searchskillgroups": ["AlexaForBusinessPolyDelegatedAccessPolicy", "AWSSupportServiceRolePolicy"], "acm-pca:describecertificateauthority": ["AWSCertificateManagerPrivateCAReadOnly", "AWSAppMeshFullAccess", "AWSVPCS2SVpnServiceRolePolicy", "AWSCertificateManagerPrivateCAAuditor", "AWSSupportServiceRolePolicy", "AWSAppMeshReadOnly"], "acm-pca:describecertificateauthorityauditreport": ["AWSCertificateManagerPrivateCAAuditor", "AWSSupportServiceRolePolicy", "AWSCertificateManagerPrivateCAReadOnly"], "acm-pca:getcertificateauthoritycertificate": ["KafkaServiceRolePolicy", "AWSCertificateManagerPrivateCAAuditor", "AWSSupportServiceRolePolicy", "AWSCertificateManagerPrivateCAReadOnly"], "acm-pca:getcertificateauthoritycsr": ["AWSCertificateManagerPrivateCAAuditor", "AWSSupportServiceRolePolicy", "AWSCertificateManagerPrivateCAReadOnly"], "acm-pca:listcertificateauthorities": ["AWSCertificateManagerPrivateCAReadOnly", "AWSAppMeshFullAccess", "AWSCertificateManagerPrivateCAAuditor", "AWSSupportServiceRolePolicy", "AWSCertificateManagerPrivateCAUser", "AWSAppMeshReadOnly", "AWSCertificateManagerPrivateCAPrivilegedUser"], "acm-pca:listtags": ["AWSCertificateManagerPrivateCAAuditor", "AWSSupportServiceRolePolicy", "AWSCertificateManagerPrivateCAReadOnly"], "amplify:getwebhook": ["AWSSupportServiceRolePolicy"], "amplify:listwebhooks": ["AWSSupportServiceRolePolicy"], "application-autoscaling:describescheduledactions": ["AmazonMCSReadOnlyAccess", "AmazonSageMakerFullAccess", "AmazonKeyspacesReadOnlyAccess", "AmazonMCSFullAccess", "AmazonAppStreamFullAccess", "AWSSupportServiceRolePolicy", "AmazonKeyspacesFullAccess", "AmazonSageMakerReadOnly"], "appmesh:describemesh": ["AWSSupportServiceRolePolicy"], "appmesh:describeroute": ["AWSSupportServiceRolePolicy"], "appmesh:describevirtualnode": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "appmesh:describevirtualrouter": ["AWSSupportServiceRolePolicy"], "appmesh:describevirtualservice": ["AWSSupportServiceRolePolicy"], "appmesh:listmeshes": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "appmesh:listroutes": ["AWSSupportServiceRolePolicy"], "appmesh:listvirtualnodes": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "appmesh:listvirtualrouters": ["AWSSupportServiceRolePolicy"], "appmesh:listvirtualservices": ["AWSSupportServiceRolePolicy"], "appstream:describedirectoryconfigs": ["AWSSupportServiceRolePolicy"], "appstream:describeimagebuilders": ["AWSSupportServiceRolePolicy"], "appstream:describeimages": ["AWSSupportServiceRolePolicy"], "appstream:describesessions": ["AWSSupportServiceRolePolicy"], "appstream:describestacks": ["AWSSupportServiceRolePolicy"], "appstream:listassociatedfleets": ["AWSSupportServiceRolePolicy"], "appstream:listassociatedstacks": ["AWSSupportServiceRolePolicy"], "appstream:listtagsforresource": ["AWSSupportServiceRolePolicy"], "appsync:getfunction": ["AWSSupportServiceRolePolicy"], "appsync:listfunctions": ["AWSSupportServiceRolePolicy"], "athena:batchgetnamedquery": ["AWSSupportServiceRolePolicy"], "athena:getnamedquery": ["AWSSupportServiceRolePolicy"], "athena:listnamedqueries": ["AWSSupportServiceRolePolicy"], "athena:listtagsforresource": ["AWSSupportServiceRolePolicy"], "autoscaling-plans:describescalingplanresources": ["AWSSupportServiceRolePolicy"], "autoscaling:describeadjustmenttypes": ["AWSSupportServiceRolePolicy"], "autoscaling:describeautoscalingnotificationtypes": ["AWSSupportServiceRolePolicy"], "autoscaling:describelifecyclehooktypes": ["AWSSupportServiceRolePolicy"], "autoscaling:describeloadbalancertargetgroups": ["AWSSupportServiceRolePolicy"], "autoscaling:describeloadbalancers": ["AWSSupportServiceRolePolicy", "AWSElasticBeanstalkService"], "autoscaling:describemetriccollectiontypes": ["AWSSupportServiceRolePolicy"], "autoscaling:describescalingprocesstypes": ["AWSSupportServiceRolePolicy"], "autoscaling:describeterminationpolicytypes": ["AWSSupportServiceRolePolicy"], "backup:describebackupjob": ["AWSSupportServiceRolePolicy"], "backup:describeprotectedresource": ["AWSSupportServiceRolePolicy"], "backup:describerecoverypoint": ["AWSSupportServiceRolePolicy"], "backup:describerestorejob": ["AWSSupportServiceRolePolicy"], "backup:getbackupplan": ["AWSSupportServiceRolePolicy"], "backup:getbackupplanfromjson": ["AWSSupportServiceRolePolicy"], "backup:getbackupplanfromtemplate": ["AWSSupportServiceRolePolicy"], "backup:getbackupvaultaccesspolicy": ["AWSSupportServiceRolePolicy"], "backup:getbackupvaultnotifications": ["AWSSupportServiceRolePolicy"], "backup:getrecoverypointrestoremetadata": ["AWSBackupOperatorAccess", "AWSSupportServiceRolePolicy"], "backup:getsupportedresourcetypes": ["AWSSupportServiceRolePolicy"], "backup:listbackupjobs": ["AWSSupportServiceRolePolicy"], "backup:listbackupplantemplates": ["AWSSupportServiceRolePolicy"], "backup:listbackupplanversions": ["AWSSupportServiceRolePolicy"], "backup:listbackupvaults": ["AWSSupportServiceRolePolicy"], "backup:listprotectedresources": ["AWSSupportServiceRolePolicy"], "backup:listrecoverypointsbybackupvault": ["AWSSupportServiceRolePolicy"], "backup:listrecoverypointsbyresource": ["AWSSupportServiceRolePolicy"], "backup:listrestorejobs": ["AWSSupportServiceRolePolicy"], "backup:listtags": ["AWSSupportServiceRolePolicy"], "batch:describejobqueues": ["AWSSupportServiceRolePolicy"], "batch:describejobs": ["AWSSupportServiceRolePolicy"], "ce:getcostandusage": ["AWSSupportServiceRolePolicy"], "ce:getdimensionvalues": ["AWSSupportServiceRolePolicy"], "ce:getreservationcoverage": ["AWSSupportServiceRolePolicy"], "ce:getreservationutilization": ["AWSSupportServiceRolePolicy"], "ce:gettags": ["AWSSupportServiceRolePolicy"], "cloud9:describeenvironments": ["AWSSupportServiceRolePolicy"], "clouddirectory:getdirectory": ["AWSSupportServiceRolePolicy"], "cloudformation:describeaccountlimits": ["AWSTrustedAdvisorServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "ServiceQuotasReadOnlyAccess", "ServiceQuotasFullAccess", "AWSSupportServiceRolePolicy"], "cloudformation:describestackinstance": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:describestackset": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:describestacksetoperation": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:listchangesets": ["AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSCodePipelineFullAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSElasticBeanstalkMaintenance", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:listexports": ["AWSSupportServiceRolePolicy"], "cloudformation:listimports": ["AWSSupportServiceRolePolicy"], "cloudformation:liststackinstances": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:liststacksetoperationresults": ["AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:liststacksetoperations": ["AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogAdminReadOnlyAccess", "AWSServiceCatalogEndUserReadOnlyAccess", "AWSSupportServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:liststacksets": ["AWSSupportServiceRolePolicy"], "cloudformation:liststacks": ["ServerMigrationServiceConsoleFullAccess", "AWSTrustedAdvisorServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSSupportServiceRolePolicy"], "cloudfront:getcloudfrontoriginaccessidentity": ["AWSSupportServiceRolePolicy"], "cloudfront:getcloudfrontoriginaccessidentityconfig": ["AWSSupportServiceRolePolicy"], "cloudfront:getdistributionconfig": ["AWSSupportServiceRolePolicy"], "cloudfront:getinvalidation": ["AWSForWordPressPluginPolicy", "AWSSupportServiceRolePolicy"], "cloudfront:getstreamingdistribution": ["AWSSupportServiceRolePolicy"], "cloudfront:getstreamingdistributionconfig": ["AWSSupportServiceRolePolicy"], "cloudfront:listcloudfrontoriginaccessidentities": ["AWSSupportServiceRolePolicy"], "cloudfront:listinvalidations": ["AWSSupportServiceRolePolicy"], "cloudfront:liststreamingdistributions": ["AWSSupportServiceRolePolicy"], "cloudhsm:describebackups": ["AWSSupportServiceRolePolicy"], "cloudhsm:describeclusters": ["AWSSupportServiceRolePolicy"], "cloudsearch:describeanalysisschemes": ["AWSSupportServiceRolePolicy"], "cloudsearch:describeavailabilityoptions": ["AWSSupportServiceRolePolicy"], "cloudsearch:describeexpressions": ["AWSSupportServiceRolePolicy"], "cloudsearch:describeindexfields": ["AWSSupportServiceRolePolicy"], "cloudsearch:describescalingparameters": ["AWSSupportServiceRolePolicy"], "cloudsearch:describesuggesters": ["AWSSupportServiceRolePolicy"], "cloudsearch:listdomainnames": ["AWSSupportServiceRolePolicy"], "cloudtrail:getinsightselectors": ["AWSCloudTrailReadOnlyAccess", "AWSSupportServiceRolePolicy"], "cloudtrail:gettrail": ["AWSCloudTrailReadOnlyAccess", "AWSSupportServiceRolePolicy"], "cloudtrail:listtrails": ["AWSCloudTrailReadOnlyAccess", "AWSSupportServiceRolePolicy"], "cloudwatch:getdashboard": ["AWSSupportServiceRolePolicy"], "cloudwatch:listdashboards": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AWSSupportServiceRolePolicy", "AWSGlueConsoleFullAccess"], "codebuild:batchgetprojects": ["AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy"], "codebuild:listbuilds": ["AWSSupportServiceRolePolicy"], "codebuild:listbuildsforproject": ["AWSSupportServiceRolePolicy"], "codebuild:listcuratedenvironmentimages": ["AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy"], "codebuild:listsourcecredentials": ["AWSSupportServiceRolePolicy"], "codecommit:getrepositorytriggers": ["AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:batchgetapplicationrevisions": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:batchgetapplications": ["AmazonECS_FullAccess", "AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:batchgetdeploymentgroups": ["AmazonECS_FullAccess", "AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:batchgetdeploymentinstances": ["AWSSupportServiceRolePolicy"], "codedeploy:batchgetdeployments": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:batchgetonpremisesinstances": ["AWSSupportServiceRolePolicy"], "codedeploy:getapplicationrevision": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:getdeployment": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:getdeploymentconfig": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:getdeploymentinstance": ["AWSSupportServiceRolePolicy"], "codedeploy:getonpremisesinstance": ["AWSSupportServiceRolePolicy"], "codedeploy:listapplicationrevisions": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:listdeploymentconfigs": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:listdeploymentinstances": ["AWSSupportServiceRolePolicy"], "codedeploy:listdeployments": ["AmazonECS_FullAccess", "AWSSupportServiceRolePolicy"], "codedeploy:listonpremisesinstances": ["AWSSupportServiceRolePolicy"], "codepipeline:getjobdetails": ["AWSCodePipelineCustomActionAccess", "AWSSupportServiceRolePolicy"], "codestar:describeproject": ["AWSSupportServiceRolePolicy"], "codestar:listprojects": ["AWSSupportServiceRolePolicy"], "codestar:listresources": ["AWSSupportServiceRolePolicy"], "codestar:listteammembers": ["AWSSupportServiceRolePolicy"], "codestar:listuserprofiles": ["AWSSupportServiceRolePolicy"], "cognito-identity:describeidentitypool": ["AmazonESCognitoAccess", "AWSSupportServiceRolePolicy"], "cognito-idp:admingetuser": ["AWSSupportServiceRolePolicy"], "cognito-idp:describeidentityprovider": ["AWSSupportServiceRolePolicy"], "cognito-idp:describeresourceserver": ["AWSSupportServiceRolePolicy"], "cognito-idp:describeriskconfiguration": ["AWSSupportServiceRolePolicy"], "cognito-idp:describeuserimportjob": ["AWSSupportServiceRolePolicy"], "cognito-idp:describeuserpool": ["AmazonSageMakerReadOnly", "AmazonSageMakerFullAccess", "AmazonESCognitoAccess", "AWSSupportServiceRolePolicy"], "cognito-idp:describeuserpooldomain": ["AWSSupportServiceRolePolicy"], "cognito-idp:getgroup": ["AWSSupportServiceRolePolicy"], "cognito-idp:getuicustomization": ["AWSSupportServiceRolePolicy"], "cognito-idp:getuser": ["AWSSupportServiceRolePolicy"], "cognito-idp:getuserpoolmfaconfig": ["AWSSupportServiceRolePolicy"], "cognito-idp:listgroups": ["AmazonSageMakerReadOnly", "AWSSupportServiceRolePolicy"], "cognito-idp:listidentityproviders": ["AmazonSageMakerReadOnly", "AWSSupportServiceRolePolicy"], "cognito-idp:listresourceservers": ["AWSSupportServiceRolePolicy"], "cognito-idp:listuserimportjobs": ["AWSSupportServiceRolePolicy"], "cognito-idp:listuserpoolclients": ["AmazonSageMakerReadOnly", "AmazonESCognitoAccess", "AWSSupportServiceRolePolicy"], "cognito-sync:describedataset": ["AWSSupportServiceRolePolicy"], "cognito-sync:describeidentitypoolusage": ["AWSSupportServiceRolePolicy"], "cognito-sync:describeidentityusage": ["AWSSupportServiceRolePolicy"], "cognito-sync:listidentitypoolusage": ["AWSSupportServiceRolePolicy"], "connect:describeuser": ["AWSSupportServiceRolePolicy"], "connect:getcurrentmetricdata": ["AWSSupportServiceRolePolicy"], "connect:getmetricdata": ["AWSSupportServiceRolePolicy"], "connect:listroutingprofiles": ["AWSSupportServiceRolePolicy"], "connect:listsecurityprofiles": ["AWSSupportServiceRolePolicy"], "connect:listusers": ["AWSSupportServiceRolePolicy"], "controltower:describeaccountfactoryconfig": ["AWSSupportServiceRolePolicy"], "controltower:describecoreservice": ["AWSSupportServiceRolePolicy"], "controltower:describeguardrail": ["AWSSupportServiceRolePolicy"], "controltower:describeguardrailfortarget": ["AWSSupportServiceRolePolicy"], "controltower:describemanagedaccount": ["AWSSupportServiceRolePolicy"], "controltower:describesinglesignon": ["AWSSupportServiceRolePolicy"], "controltower:getavailableupdates": ["AWSSupportServiceRolePolicy"], "controltower:gethomeregion": ["AWSSupportServiceRolePolicy"], "controltower:getlandingzonestatus": ["AWSSupportServiceRolePolicy"], "controltower:listdirectorygroups": ["AWSSupportServiceRolePolicy"], "controltower:listguardrailfortarget": ["AWSSupportServiceRolePolicy"], "controltower:listguardrailviolations": ["AWSSupportServiceRolePolicy"], "controltower:listmanagedaccounts": ["AWSSupportServiceRolePolicy"], "controltower:listmanagedaccountsforguardrail": ["AWSSupportServiceRolePolicy"], "controltower:listmanagedaccountsforparent": ["AWSSupportServiceRolePolicy"], "controltower:listmanagedorganizationalunits": ["AWSSupportServiceRolePolicy"], "controltower:listmanagedorganizationalunitsforguardrail": ["AWSSupportServiceRolePolicy"], "datasync:describeagent": ["AWSSupportServiceRolePolicy"], "datasync:describelocationefs": ["AWSSupportServiceRolePolicy"], "datasync:describelocationfsxwindows": ["AWSSupportServiceRolePolicy"], "datasync:describelocationnfs": ["AWSSupportServiceRolePolicy"], "datasync:describelocations3": ["AWSSupportServiceRolePolicy"], "datasync:describelocationsmb": ["AWSSupportServiceRolePolicy"], "datasync:describetask": ["AWSSupportServiceRolePolicy"], "datasync:describetaskexecution": ["AWSSupportServiceRolePolicy"], "datasync:listagents": ["AWSSupportServiceRolePolicy"], "datasync:listlocations": ["AWSSupportServiceRolePolicy"], "datasync:listtaskexecutions": ["AWSSupportServiceRolePolicy"], "datasync:listtasks": ["AWSSupportServiceRolePolicy"], "detective:getmembers": ["AWSSupportServiceRolePolicy"], "detective:listgraphs": ["AWSSupportServiceRolePolicy"], "detective:listinvitations": ["AWSSupportServiceRolePolicy"], "detective:listmembers": ["AWSSupportServiceRolePolicy"], "devicefarm:getaccountsettings": ["AWSSupportServiceRolePolicy"], "devicefarm:getdevice": ["AWSSupportServiceRolePolicy"], "devicefarm:getdevicepool": ["AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy"], "devicefarm:getdevicepoolcompatibility": ["AWSSupportServiceRolePolicy"], "devicefarm:getjob": ["AWSSupportServiceRolePolicy"], "devicefarm:getremoteaccesssession": ["AWSSupportServiceRolePolicy"], "devicefarm:getsuite": ["AWSSupportServiceRolePolicy"], "devicefarm:gettest": ["AWSSupportServiceRolePolicy"], "devicefarm:gettestgridproject": ["AWSSupportServiceRolePolicy"], "devicefarm:gettestgridsession": ["AWSSupportServiceRolePolicy"], "devicefarm:getupload": ["AWSSupportServiceRolePolicy"], "devicefarm:listdevicepools": ["AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy"], "devicefarm:listdevices": ["AWSSupportServiceRolePolicy"], "devicefarm:listremoteaccesssessions": ["AWSSupportServiceRolePolicy"], "devicefarm:listsamples": ["AWSSupportServiceRolePolicy"], "devicefarm:listsuites": ["AWSSupportServiceRolePolicy"], "devicefarm:listtestgridprojects": ["AWSSupportServiceRolePolicy"], "devicefarm:listtestgridsessionactions": ["AWSSupportServiceRolePolicy"], "devicefarm:listtestgridsessionartifacts": ["AWSSupportServiceRolePolicy"], "devicefarm:listtestgridsessions": ["AWSSupportServiceRolePolicy"], "devicefarm:listtests": ["AWSSupportServiceRolePolicy"], "devicefarm:listuniqueproblems": ["AWSSupportServiceRolePolicy"], "devicefarm:listuploads": ["AWSSupportServiceRolePolicy"], "directconnect:describeconnections": ["AWSNetworkManagerServiceRolePolicy", "AmazonInspectorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "directconnect:describeconnectionsoninterconnect": ["AWSSupportServiceRolePolicy"], "directconnect:describeinterconnects": ["AWSSupportServiceRolePolicy"], "directconnect:describelocations": ["AWSNetworkManagerServiceRolePolicy", "AWSSupportServiceRolePolicy"], "directconnect:describevirtualgateways": ["AmazonInspectorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "directconnect:describevirtualinterfaces": ["AWSNetworkManagerServiceRolePolicy", "AmazonInspectorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "dlm:getlifecyclepolicies": ["AWSSupportServiceRolePolicy"], "dlm:getlifecyclepolicy": ["AWSSupportServiceRolePolicy"], "dms:describeaccountattributes": ["AWSSupportServiceRolePolicy"], "dms:describeconnections": ["AWSSupportServiceRolePolicy"], "dms:describeendpointtypes": ["AWSSupportServiceRolePolicy"], "dms:describeendpoints": ["AWSSupportServiceRolePolicy"], "dms:describeorderablereplicationinstances": ["AWSSupportServiceRolePolicy"], "dms:describerefreshschemasstatus": ["AWSSupportServiceRolePolicy"], "dms:describereplicationsubnetgroups": ["AWSSupportServiceRolePolicy"], "ds:describeconditionalforwarders": ["AWSSupportServiceRolePolicy"], "ds:describeeventtopics": ["AWSSupportServiceRolePolicy"], "ds:listiproutes": ["AWSSupportServiceRolePolicy"], "ds:listschemaextensions": ["AWSSupportServiceRolePolicy"], "ds:listtagsforresource": ["AWSSupportServiceRolePolicy"], "ec2:acceptreservedinstancesexchangequote": ["AWSSupportServiceRolePolicy"], "ec2:cancelreservedinstanceslisting": ["AWSSupportServiceRolePolicy"], "ec2:describebyoipcidrs": ["AccessAnalyzerServiceRolePolicy", "AWSSupportServiceRolePolicy"], "ec2:describecapacityreservations": ["AWSSupportServiceRolePolicy"], "ec2:describeclientvpnauthorizationrules": ["AWSSupportServiceRolePolicy"], "ec2:describeclientvpnconnections": ["AWSSupportServiceRolePolicy"], "ec2:describeclientvpnendpoints": ["AWSSupportServiceRolePolicy"], "ec2:describeclientvpnroutes": ["AWSSupportServiceRolePolicy"], "ec2:describeclientvpntargetnetworks": ["AWSSupportServiceRolePolicy"], "ec2:describefleethistory": ["AWSThinkboxAWSPortalAdminPolicy", "AWSSupportServiceRolePolicy"], "ec2:describefleetinstances": ["AWSThinkboxAWSPortalAdminPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSSupportServiceRolePolicy"], "ec2:describefleets": ["AWSThinkboxAWSPortalAdminPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSSupportServiceRolePolicy"], "ec2:describehostreservationofferings": ["AWSSupportServiceRolePolicy"], "ec2:describehostreservations": ["AWSSupportServiceRolePolicy"], "ec2:describepublicipv4pools": ["AWSSupportServiceRolePolicy"], "ec2:describereservedinstances": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "ec2:describereservedinstanceslistings": ["AWSSupportServiceRolePolicy"], "ec2:describereservedinstancesofferings": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "ec2:describescheduledinstances": ["AWSSupportServiceRolePolicy"], "ec2:describespotdatafeedsubscription": ["AWSSupportServiceRolePolicy"], "ec2:describespotfleetrequesthistory": ["AWSThinkboxAWSPortalAdminPolicy", "AWSSupportServiceRolePolicy"], "ec2:describetrafficmirrorfilters": ["AWSSupportServiceRolePolicy"], "ec2:describetrafficmirrorsessions": ["AWSSupportServiceRolePolicy"], "ec2:describetrafficmirrortargets": ["AWSSupportServiceRolePolicy"], "ec2:describetransitgatewayattachments": ["NetworkAdministrator", "AmazonInspectorServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSNetworkManagerServiceRolePolicy"], "ec2:describetransitgatewayroutetables": ["NetworkAdministrator", "AmazonInspectorServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSNetworkManagerServiceRolePolicy"], "ec2:describetransitgatewayvpcattachments": ["NetworkAdministrator", "AmazonInspectorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "ec2:describevolumeattribute": ["AWSSupportServiceRolePolicy"], "ec2:getreservedinstancesexchangequote": ["AWSSupportServiceRolePolicy"], "ec2:gettransitgatewayattachmentpropagations": ["NetworkAdministrator", "AWSSupportServiceRolePolicy"], "ec2:gettransitgatewayroutetableassociations": ["NetworkAdministrator", "AWSSupportServiceRolePolicy", "AWSNetworkManagerServiceRolePolicy"], "ec2:gettransitgatewayroutetablepropagations": ["NetworkAdministrator", "AmazonInspectorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "ec2:modifyreservedinstances": ["AWSSupportServiceRolePolicy"], "ec2:purchasereservedinstancesoffering": ["AWSSupportServiceRolePolicy"], "ecs:listservices": ["AWSCodePipelineFullAccess", "AWSSupportServiceRolePolicy", "CloudWatchAutomaticDashboardsAccess"], "eks:describefargateprofile": ["AWSSupportServiceRolePolicy"], "eks:describenodegroup": ["AWSSupportServiceRolePolicy"], "eks:listfargateprofiles": ["AWSSupportServiceRolePolicy"], "eks:listnodegroups": ["AWSSupportServiceRolePolicy"], "elasticache:describecacheengineversions": ["AWSSupportServiceRolePolicy"], "elasticache:describecacheparametergroups": ["AWSSupportServiceRolePolicy"], "elasticache:describecacheparameters": ["AWSSupportServiceRolePolicy"], "elasticache:describecachesecuritygroups": ["AWSSupportServiceRolePolicy"], "elasticache:describecachesubnetgroups": ["AWSSupportServiceRolePolicy"], "elasticache:describeenginedefaultparameters": ["AWSSupportServiceRolePolicy"], "elasticache:describeevents": ["AWSSupportServiceRolePolicy"], "elasticache:describereservedcachenodes": ["AWSSupportServiceRolePolicy"], "elasticache:describereservedcachenodesofferings": ["AWSSupportServiceRolePolicy"], "elasticache:listallowednodetypemodifications": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:checkdnsavailability": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeconfigurationoptions": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeconfigurationsettings": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeenvironmenthealth": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeenvironmentmanagedactionhistory": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeenvironmentmanagedactions": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeenvironmentresources": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeevents": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeinstanceshealth": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:describeplatformversion": ["AWSSupportServiceRolePolicy"], "elasticbeanstalk:listplatformversions": ["AWSSupportServiceRolePolicy"], "elasticloadbalancing:describelistenercertificates": ["AWSSupportServiceRolePolicy"], "elasticloadbalancing:describeloadbalancerpolicytypes": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "elasticloadbalancing:describesslpolicies": ["AWSSupportServiceRolePolicy"], "elasticmapreduce:describestep": ["AWSSupportServiceRolePolicy"], "elasticmapreduce:listsecurityconfigurations": ["AWSSupportServiceRolePolicy"], "elastictranscoder:listjobsbypipeline": ["AWSSupportServiceRolePolicy"], "elastictranscoder:listjobsbystatus": ["AWSSupportServiceRolePolicy"], "elastictranscoder:listpipelines": ["AWSSupportServiceRolePolicy"], "elastictranscoder:listpresets": ["AWSSupportServiceRolePolicy"], "elastictranscoder:readpipeline": ["AWSSupportServiceRolePolicy"], "elastictranscoder:readpreset": ["AWSSupportServiceRolePolicy"], "es:describeelasticsearchdomainconfig": ["AWSSupportServiceRolePolicy"], "fms:getcompliancedetail": ["AWSSupportServiceRolePolicy"], "fms:getnotificationchannel": ["AWSSupportServiceRolePolicy"], "fms:getpolicy": ["AWSSupportServiceRolePolicy"], "fms:getprotectionstatus": ["AWSSupportServiceRolePolicy"], "fms:listmemberaccounts": ["AWSSupportServiceRolePolicy"], "forecast:describedataset": ["AWSSupportServiceRolePolicy"], "forecast:describedatasetgroup": ["AWSSupportServiceRolePolicy"], "forecast:describedatasetimportjob": ["AWSSupportServiceRolePolicy"], "forecast:describeforecast": ["AWSSupportServiceRolePolicy"], "forecast:describeforecastexportjob": ["AWSSupportServiceRolePolicy"], "forecast:describepredictor": ["AWSSupportServiceRolePolicy"], "forecast:getaccuracymetrics": ["AWSSupportServiceRolePolicy"], "forecast:listdatasetgroups": ["AWSSupportServiceRolePolicy"], "forecast:listdatasetimportjobs": ["AWSSupportServiceRolePolicy"], "forecast:listdatasets": ["AWSSupportServiceRolePolicy"], "forecast:listforecastexportjobs": ["AWSSupportServiceRolePolicy"], "forecast:listforecasts": ["AWSSupportServiceRolePolicy"], "forecast:listpredictors": ["AWSSupportServiceRolePolicy"], "fsx:describebackups": ["AWSSupportServiceRolePolicy"], "globalaccelerator:describeaccelerator": ["AWSShieldDRTAccessPolicy", "AWSSupportServiceRolePolicy"], "globalaccelerator:describeacceleratorattributes": ["AWSSupportServiceRolePolicy"], "globalaccelerator:describeendpointgroup": ["AWSSupportServiceRolePolicy"], "globalaccelerator:describelistener": ["AWSSupportServiceRolePolicy"], "globalaccelerator:listaccelerators": ["AWSShieldDRTAccessPolicy", "AWSSupportServiceRolePolicy"], "globalaccelerator:listendpointgroups": ["AWSSupportServiceRolePolicy"], "globalaccelerator:listlisteners": ["AWSSupportServiceRolePolicy"], "greengrass:getconnectivityinfo": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getcoredefinition": ["AWSDeepLensServiceRolePolicy", "AWSServiceRoleForIoTSiteWise", "AWSSupportServiceRolePolicy"], "greengrass:getdevicedefinition": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getdevicedefinitionversion": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getfunctiondefinition": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getgroupcertificateauthority": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getloggerdefinition": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getloggerdefinitionversion": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getresourcedefinitionversion": ["AWSSupportServiceRolePolicy"], "greengrass:getserviceroleforaccount": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getsubscriptiondefinition": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:getsubscriptiondefinitionversion": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listcoredefinitionversions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listcoredefinitions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listdeployments": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listdevicedefinitionversions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listdevicedefinitions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listfunctiondefinitionversions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listfunctiondefinitions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listgroupversions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listgroups": ["AWSDeepLensServiceRolePolicy", "AWSIoTSiteWiseConsoleFullAccess", "AWSSupportServiceRolePolicy"], "greengrass:listloggerdefinitionversions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listloggerdefinitions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listresourcedefinitionversions": ["AWSSupportServiceRolePolicy"], "greengrass:listresourcedefinitions": ["AWSSupportServiceRolePolicy"], "greengrass:listsubscriptiondefinitionversions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "greengrass:listsubscriptiondefinitions": ["AWSDeepLensServiceRolePolicy", "AWSSupportServiceRolePolicy"], "guardduty:getfindingsstatistics": ["AWSSupportServiceRolePolicy"], "guardduty:getipset": ["AWSSupportServiceRolePolicy"], "guardduty:getinvitationscount": ["AWSSupportServiceRolePolicy"], "guardduty:getmembers": ["AWSSupportServiceRolePolicy"], "guardduty:getthreatintelset": ["AWSSupportServiceRolePolicy"], "guardduty:listipsets": ["AWSSupportServiceRolePolicy"], "guardduty:listinvitations": ["AWSSupportServiceRolePolicy"], "guardduty:listmembers": ["AWSSupportServiceRolePolicy"], "guardduty:listthreatintelsets": ["AWSSupportServiceRolePolicy"], "health:describeaffectedentities": ["AWSSupportServiceRolePolicy"], "health:describeentityaggregates": ["AWSSupportServiceRolePolicy"], "health:describeeventaggregates": ["AWSSupportServiceRolePolicy"], "health:describeeventdetails": ["AWSSupportServiceRolePolicy"], "health:describeeventtypes": ["AWSSupportServiceRolePolicy"], "health:describeevents": ["AWSSupportServiceRolePolicy"], "iam:getcontextkeysforcustompolicy": ["AWSSupportServiceRolePolicy"], "iam:getcontextkeysforprincipalpolicy": ["AWSSupportServiceRolePolicy"], "imagebuilder:getcomponent": ["AWSSupportServiceRolePolicy"], "imagebuilder:getcomponentpolicy": ["AWSSupportServiceRolePolicy"], "imagebuilder:getdistributionconfiguration": ["AWSSupportServiceRolePolicy"], "imagebuilder:getimage": ["AWSSupportServiceRolePolicy"], "imagebuilder:getimagepipeline": ["AWSSupportServiceRolePolicy"], "imagebuilder:getimagepolicy": ["AWSSupportServiceRolePolicy"], "imagebuilder:getimagerecipe": ["AWSSupportServiceRolePolicy"], "imagebuilder:getimagerecipepolicy": ["AWSSupportServiceRolePolicy"], "imagebuilder:getinfrastructureconfiguration": ["AWSSupportServiceRolePolicy"], "imagebuilder:listcomponentbuildversions": ["AWSSupportServiceRolePolicy"], "imagebuilder:listcomponents": ["AWSSupportServiceRolePolicy"], "imagebuilder:listdistributionconfigurations": ["AWSSupportServiceRolePolicy"], "imagebuilder:listimagebuildversions": ["AWSSupportServiceRolePolicy"], "imagebuilder:listimagepipelineimages": ["AWSSupportServiceRolePolicy"], "imagebuilder:listimagepipelines": ["AWSSupportServiceRolePolicy"], "imagebuilder:listimagerecipes": ["AWSSupportServiceRolePolicy"], "imagebuilder:listimages": ["AWSSupportServiceRolePolicy"], "imagebuilder:listinfrastructureconfigurations": ["AWSSupportServiceRolePolicy"], "imagebuilder:listtagsforresource": ["AWSSupportServiceRolePolicy"], "inspector:describeassessmentruns": ["AWSSupportServiceRolePolicy"], "inspector:describeassessmenttargets": ["AWSSupportServiceRolePolicy"], "inspector:describeassessmenttemplates": ["AWSSupportServiceRolePolicy"], "inspector:describecrossaccountaccessrole": ["AWSSupportServiceRolePolicy"], "inspector:describeresourcegroups": ["AWSSupportServiceRolePolicy"], "inspector:describerulespackages": ["AWSSupportServiceRolePolicy"], "inspector:gettelemetrymetadata": ["AWSSupportServiceRolePolicy"], "inspector:listassessmentrunagents": ["AWSSupportServiceRolePolicy"], "inspector:listassessmentruns": ["AWSSupportServiceRolePolicy"], "inspector:listassessmenttargets": ["AWSSupportServiceRolePolicy"], "inspector:listassessmenttemplates": ["AWSSupportServiceRolePolicy"], "inspector:listeventsubscriptions": ["AWSSupportServiceRolePolicy"], "inspector:listrulespackages": ["AWSSupportServiceRolePolicy"], "inspector:listtagsforresource": ["AWSSupportServiceRolePolicy"], "iot:describetunnel": ["AWSSupportServiceRolePolicy"], "iot:listtunnels": ["AWSSupportServiceRolePolicy"], "iotevents:describedetector": ["AWSSupportServiceRolePolicy"], "iotevents:describedetectormodel": ["AWSSupportServiceRolePolicy"], "iotevents:describeinput": ["AWSSupportServiceRolePolicy"], "iotevents:describeloggingoptions": ["AWSSupportServiceRolePolicy"], "iotevents:listdetectormodelversions": ["AWSSupportServiceRolePolicy"], "iotevents:listdetectormodels": ["AWSSupportServiceRolePolicy"], "iotevents:listdetectors": ["AWSSupportServiceRolePolicy"], "iotevents:listinputs": ["AWSSupportServiceRolePolicy"], "iotsitewise:describeaccesspolicy": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:describeasset": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:describeassetmodel": ["AWSSupportServiceRolePolicy"], "iotsitewise:describeassetproperty": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:describedashboard": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:describegateway": ["AWSSupportServiceRolePolicy"], "iotsitewise:describegatewaycapabilityconfiguration": ["AWSSupportServiceRolePolicy"], "iotsitewise:describeloggingoptions": ["AWSSupportServiceRolePolicy"], "iotsitewise:describeportal": ["AWSSupportServiceRolePolicy"], "iotsitewise:describeproject": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:listaccesspolicies": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:listassetmodels": ["AWSSupportServiceRolePolicy"], "iotsitewise:listassociatedassets": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:listdashboards": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:listgateways": ["AWSSupportServiceRolePolicy"], "iotsitewise:listportals": ["AWSSupportServiceRolePolicy"], "iotsitewise:listprojectassets": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "iotsitewise:listprojects": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess", "AWSSupportServiceRolePolicy"], "kafka:describecluster": ["AWSLambdaMSKExecutionRole", "AWSApplicationAutoscalingKafkaClusterPolicy", "AWSSupportServiceRolePolicy"], "kafka:getbootstrapbrokers": ["AWSLambdaMSKExecutionRole", "AWSSupportServiceRolePolicy"], "kafka:listclusters": ["AWSSupportServiceRolePolicy"], "kafka:listnodes": ["AWSSupportServiceRolePolicy"], "kendra:describedatasource": ["AWSSupportServiceRolePolicy"], "kendra:describefaq": ["AWSSupportServiceRolePolicy"], "kendra:describeindex": ["AWSSupportServiceRolePolicy"], "kendra:getdatasourcesyncjobhistory": ["AWSSupportServiceRolePolicy"], "kendra:listdatasources": ["AWSSupportServiceRolePolicy"], "kendra:listfaqs": ["AWSSupportServiceRolePolicy"], "kendra:listindices": ["AmazonLexFullAccess", "AWSSupportServiceRolePolicy"], "kms:listgrants": ["AccessAnalyzerServiceRolePolicy", "AmazonAppFlowFullAccess", "AWSSupportServiceRolePolicy"], "lambda:geteventsourcemapping": ["AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSSupportServiceRolePolicy"], "lambda:getfunctionconcurrency": ["AWSSupportServiceRolePolicy"], "lambda:getfunctioneventinvokeconfig": ["AWSSupportServiceRolePolicy"], "lambda:getlayerversion": ["CloudWatchSyntheticsFullAccess", "AWSSupportServiceRolePolicy"], "lambda:listfunctioneventinvokeconfigs": ["AWSSupportServiceRolePolicy"], "lambda:listlayerversions": ["AccessAnalyzerServiceRolePolicy", "AWSSupportServiceRolePolicy"], "lambda:listlayers": ["AccessAnalyzerServiceRolePolicy", "AWSSupportServiceRolePolicy"], "lambda:listprovisionedconcurrencyconfigs": ["AWSSupportServiceRolePolicy"], "lambda:listversionsbyfunction": ["AWSDeepLensServiceRolePolicy", "AccessAnalyzerServiceRolePolicy", "AWSSupportServiceRolePolicy", "AWSRoboMakerServicePolicy"], "launchwizard:describeprovisionedapp": ["AWSSupportServiceRolePolicy"], "launchwizard:describeprovisioningevents": ["AWSSupportServiceRolePolicy"], "launchwizard:listprovisionedapps": ["AWSSupportServiceRolePolicy"], "lex:getbotchannelassociation": ["AmazonLexReadOnly", "AWSSupportServiceRolePolicy"], "lex:getbuiltinintent": ["AmazonLexReadOnly", "AWSSupportServiceRolePolicy"], "lex:getbuiltinintents": ["AmazonLexReadOnly", "AWSSupportServiceRolePolicy"], "lex:getbuiltinslottypes": ["AmazonLexReadOnly", "AWSSupportServiceRolePolicy"], "license-manager:listassociationsforlicenseconfiguration": ["AWSSupportServiceRolePolicy"], "license-manager:listfailuresforlicenseconfigurationoperations": ["AWSSupportServiceRolePolicy"], "license-manager:listlicenseconfigurations": ["AWSImageBuilderFullAccess", "AWSSupportServiceRolePolicy"], "license-manager:listlicensespecificationsforresource": ["AWSImageBuilderFullAccess", "AWSSupportServiceRolePolicy"], "license-manager:listresourceinventory": ["AWSSupportServiceRolePolicy"], "logs:describedestinations": ["AWSSupportServiceRolePolicy"], "logs:describeexporttasks": ["AWSSupportServiceRolePolicy"], "logs:describemetricfilters": ["AWSLambdaReadOnlyAccess", "AWSSecurityHubServiceRolePolicy", "AWSSupportServiceRolePolicy"], "logs:describequeries": ["AWSSupportServiceRolePolicy"], "logs:describesubscriptionfilters": ["AWSSupportServiceRolePolicy"], "machinelearning:describedatasources": ["AWSSupportServiceRolePolicy"], "machinelearning:describeevaluations": ["AWSSupportServiceRolePolicy"], "machinelearning:getdatasource": ["AWSSupportServiceRolePolicy"], "machinelearning:getevaluation": ["AWSSupportServiceRolePolicy"], "machinelearning:getmlmodel": ["AWSSupportServiceRolePolicy"], "managedblockchain:getmember": ["AWSSupportServiceRolePolicy"], "managedblockchain:getnetwork": ["AWSSupportServiceRolePolicy"], "managedblockchain:getnode": ["AWSSupportServiceRolePolicy"], "managedblockchain:listmembers": ["AWSSupportServiceRolePolicy"], "managedblockchain:listnetworks": ["AWSSupportServiceRolePolicy"], "managedblockchain:listnodes": ["AWSSupportServiceRolePolicy"], "mediaconvert:getjob": ["AWSSupportServiceRolePolicy"], "mediaconvert:getjobtemplate": ["AWSSupportServiceRolePolicy"], "mediaconvert:getpreset": ["AWSSupportServiceRolePolicy"], "mediaconvert:getqueue": ["AWSSupportServiceRolePolicy"], "mediaconvert:listjobtemplates": ["AWSSupportServiceRolePolicy"], "mediaconvert:listjobs": ["AWSSupportServiceRolePolicy"], "medialive:describechannel": ["AWSSupportServiceRolePolicy"], "medialive:describeinput": ["AWSSupportServiceRolePolicy"], "medialive:describeinputsecuritygroup": ["AWSSupportServiceRolePolicy"], "medialive:describeoffering": ["AWSSupportServiceRolePolicy"], "medialive:describereservation": ["AWSSupportServiceRolePolicy"], "medialive:describeschedule": ["AWSSupportServiceRolePolicy"], "medialive:listchannels": ["AWSSupportServiceRolePolicy"], "medialive:listinputsecuritygroups": ["AWSSupportServiceRolePolicy"], "medialive:listinputs": ["AWSSupportServiceRolePolicy"], "medialive:listofferings": ["AWSSupportServiceRolePolicy"], "medialive:listreservations": ["AWSSupportServiceRolePolicy"], "mediapackage:describechannel": ["AWSSupportServiceRolePolicy"], "mediapackage:describeoriginendpoint": ["AWSSupportServiceRolePolicy"], "mediapackage:listchannels": ["AWSSupportServiceRolePolicy"], "mediapackage:listoriginendpoints": ["AWSSupportServiceRolePolicy"], "mediastore:describecontainer": ["AWSSupportServiceRolePolicy"], "mediastore:describeobject": ["AWSSupportServiceRolePolicy"], "mediastore:getcorspolicy": ["AWSSupportServiceRolePolicy"], "mediastore:listitems": ["AWSSupportServiceRolePolicy"], "mediatailor:getplaybackconfiguration": ["AWSSupportServiceRolePolicy"], "mediatailor:listplaybackconfigurations": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getadmchannel": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getapnschannel": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getapnssandboxchannel": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getapnsvoipchannel": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getapnsvoipsandboxchannel": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getapp": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getapps": ["AWSSupportServiceRolePolicy", "AmazonCognitoPowerUser"], "mobiletargeting:getbaiduchannel": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getcampaign": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getcampaignactivities": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getcampaignversion": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getcampaignversions": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getemailchannel": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getendpoint": ["AWSSupportServiceRolePolicy"], "mobiletargeting:geteventstream": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getexportjob": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getexportjobs": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getgcmchannel": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getimportjob": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getsegment": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getsegmentimportjobs": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getsegmentversion": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getsegmentversions": ["AWSSupportServiceRolePolicy"], "mobiletargeting:getsmschannel": ["AWSSupportServiceRolePolicy"], "mq:describebroker": ["AWSSupportServiceRolePolicy"], "mq:describeconfiguration": ["AWSSupportServiceRolePolicy"], "mq:describeconfigurationrevision": ["AWSSupportServiceRolePolicy"], "mq:describeuser": ["AWSSupportServiceRolePolicy"], "mq:listbrokers": ["AWSSupportServiceRolePolicy"], "mq:listconfigurationrevisions": ["AWSSupportServiceRolePolicy"], "mq:listconfigurations": ["AWSSupportServiceRolePolicy"], "mq:listusers": ["AWSSupportServiceRolePolicy"], "opsworks-cm:describeaccountattributes": ["AWSSupportServiceRolePolicy"], "opsworks-cm:describebackups": ["AWSSupportServiceRolePolicy"], "opsworks-cm:describeevents": ["AWSSupportServiceRolePolicy"], "opsworks-cm:describenodeassociationstatus": ["AWSSupportServiceRolePolicy"], "opsworks:describeagentversions": ["AWSSupportServiceRolePolicy"], "opsworks:describecommands": ["AWSSupportServiceRolePolicy"], "opsworks:describedeployments": ["AWSSupportServiceRolePolicy"], "opsworks:describeecsclusters": ["AWSSupportServiceRolePolicy"], "opsworks:describeelasticips": ["AWSSupportServiceRolePolicy"], "opsworks:describeelasticloadbalancers": ["AWSSupportServiceRolePolicy"], "opsworks:describeinstances": ["AWSOpsWorksRegisterCLI_EC2", "AWSOpsWorksRegisterCLI_OnPremises", "AWSSupportServiceRolePolicy"], "opsworks:describeloadbasedautoscaling": ["AWSSupportServiceRolePolicy"], "opsworks:describemyuserprofile": ["AWSSupportServiceRolePolicy"], "opsworks:describepermissions": ["AWSSupportServiceRolePolicy"], "opsworks:describeraidarrays": ["AWSSupportServiceRolePolicy"], "opsworks:describerdsdbinstances": ["AWSSupportServiceRolePolicy"], "opsworks:describeserviceerrors": ["AWSSupportServiceRolePolicy"], "opsworks:describestackprovisioningparameters": ["AWSOpsWorksInstanceRegistration", "AWSOpsWorksRegisterCLI_EC2", "AWSOpsWorksRegisterCLI_OnPremises", "AWSSupportServiceRolePolicy"], "opsworks:describestacksummary": ["AWSSupportServiceRolePolicy"], "opsworks:describetimebasedautoscaling": ["AWSSupportServiceRolePolicy"], "opsworks:describeuserprofiles": ["AWSSupportServiceRolePolicy"], "opsworks:describevolumes": ["AWSSupportServiceRolePolicy"], "opsworks:gethostnamesuggestion": ["AWSSupportServiceRolePolicy"], "personalize:describealgorithm": ["AWSSupportServiceRolePolicy"], "personalize:describecampaign": ["AWSSupportServiceRolePolicy"], "personalize:describedataset": ["AWSSupportServiceRolePolicy"], "personalize:describedatasetgroup": ["AWSSupportServiceRolePolicy"], "personalize:describedatasetimportjob": ["AWSSupportServiceRolePolicy"], "personalize:describeeventtracker": ["AWSSupportServiceRolePolicy"], "personalize:describefeaturetransformation": ["AWSSupportServiceRolePolicy"], "personalize:describerecipe": ["AWSSupportServiceRolePolicy"], "personalize:describeschema": ["AWSSupportServiceRolePolicy"], "personalize:describesolution": ["AWSSupportServiceRolePolicy"], "personalize:describesolutionversion": ["AWSSupportServiceRolePolicy"], "personalize:listcampaigns": ["AWSSupportServiceRolePolicy"], "personalize:listdatasetgroups": ["AWSSupportServiceRolePolicy"], "personalize:listdatasetimportjobs": ["AWSSupportServiceRolePolicy"], "personalize:listdatasets": ["AWSSupportServiceRolePolicy"], "personalize:listeventtrackers": ["AWSSupportServiceRolePolicy"], "personalize:listrecipes": ["AWSSupportServiceRolePolicy"], "personalize:listschemas": ["AWSSupportServiceRolePolicy"], "personalize:listsolutionversions": ["AWSSupportServiceRolePolicy"], "personalize:listsolutions": ["AWSSupportServiceRolePolicy"], "pricing:describeservices": ["AWSSupportServiceRolePolicy"], "pricing:getattributevalues": ["AWSSupportServiceRolePolicy"], "pricing:getproducts": ["AWSSupportServiceRolePolicy"], "rds:describeoptiongroupoptions": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "rds:describereserveddbinstances": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "rds:describereserveddbinstancesofferings": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "redshift:describeclusterversions": ["AWSSupportServiceRolePolicy"], "redshift:describedefaultclusterparameters": ["AWSSupportServiceRolePolicy"], "redshift:describeeventcategories": ["AWSSupportServiceRolePolicy"], "redshift:describehsmclientcertificates": ["AWSSupportServiceRolePolicy"], "redshift:describehsmconfigurations": ["AWSSupportServiceRolePolicy"], "redshift:describeorderableclusteroptions": ["AWSSupportServiceRolePolicy"], "redshift:describereservednodeofferings": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "redshift:describereservednodes": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "redshift:describeresize": ["AWSSupportServiceRolePolicy"], "redshift:describesnapshotcopygrants": ["AWSSupportServiceRolePolicy"], "redshift:describestorage": ["AWSSupportServiceRolePolicy"], "redshift:describetablerestorestatus": ["AWSSupportServiceRolePolicy"], "robomaker:batchdescribesimulationjob": ["AWSSupportServiceRolePolicy"], "robomaker:describedeploymentjob": ["AWSSupportServiceRolePolicy"], "robomaker:describefleet": ["AWSSupportServiceRolePolicy"], "robomaker:describerobot": ["AWSSupportServiceRolePolicy"], "robomaker:describerobotapplication": ["AWSSupportServiceRolePolicy"], "robomaker:describesimulationapplication": ["AmazonSageMakerFullAccess", "AWSDeepRacerCloudFormationAccessPolicy", "AWSSupportServiceRolePolicy"], "robomaker:describesimulationjob": ["AmazonSageMakerFullAccess", "AWSSupportServiceRolePolicy"], "robomaker:listdeploymentjobs": ["AWSSupportServiceRolePolicy"], "robomaker:listfleets": ["AWSSupportServiceRolePolicy"], "robomaker:listrobotapplications": ["AWSSupportServiceRolePolicy"], "robomaker:listrobots": ["AWSSupportServiceRolePolicy"], "robomaker:listsimulationapplications": ["AWSDeepRacerCloudFormationAccessPolicy", "AWSSupportServiceRolePolicy"], "robomaker:listsimulationjobs": ["AWSSupportServiceRolePolicy"], "route53:getchange": ["AmazonLaunchWizard_Fullaccess", "AWSSupportServiceRolePolicy"], "route53:getcheckeripranges": ["AWSSupportServiceRolePolicy"], "route53:getgeolocation": ["AWSSupportServiceRolePolicy"], "route53:gethealthcheckcount": ["AWSSupportServiceRolePolicy"], "route53:gethealthchecklastfailurereason": ["AWSSupportServiceRolePolicy"], "route53:gethealthcheckstatus": ["AWSSupportServiceRolePolicy"], "route53:gethostedzonecount": ["AWSSupportServiceRolePolicy"], "route53:getreusabledelegationset": ["AWSSupportServiceRolePolicy"], "route53:gettrafficpolicy": ["AWSSupportServiceRolePolicy"], "route53:gettrafficpolicyinstance": ["AWSSupportServiceRolePolicy"], "route53:gettrafficpolicyinstancecount": ["AWSSupportServiceRolePolicy"], "route53:listgeolocations": ["AWSSupportServiceRolePolicy"], "route53:listresourcerecordsets": ["AWSTrustedAdvisorServiceRolePolicy", "AmazonWorkMailFullAccess", "AmazonLaunchWizard_Fullaccess", "AWSSupportServiceRolePolicy"], "route53:listreusabledelegationsets": ["AWSSupportServiceRolePolicy"], "route53:listtagsforresources": ["AWSSupportServiceRolePolicy"], "route53:listtrafficpolicies": ["AWSSupportServiceRolePolicy"], "route53:listtrafficpolicyinstances": ["AWSSupportServiceRolePolicy"], "route53:listtrafficpolicyinstancesbyhostedzone": ["AWSSupportServiceRolePolicy"], "route53:listtrafficpolicyinstancesbypolicy": ["AWSSupportServiceRolePolicy"], "route53:listtrafficpolicyversions": ["AWSSupportServiceRolePolicy"], "route53domains:getcontactreachabilitystatus": ["AWSSupportServiceRolePolicy"], "route53domains:viewbilling": ["AWSSupportServiceRolePolicy"], "route53resolver:getresolverrulepolicy": ["AWSSupportServiceRolePolicy"], "route53resolver:listresolverendpointipaddresses": ["AWSSupportServiceRolePolicy"], "route53resolver:listresolverendpoints": ["AWSSupportServiceRolePolicy"], "route53resolver:listresolverruleassociations": ["AWSSupportServiceRolePolicy"], "route53resolver:listresolverrules": ["AWSSupportServiceRolePolicy"], "route53resolver:listtagsforresource": ["AWSSupportServiceRolePolicy"], "sagemaker:describealgorithm": ["AWSSupportServiceRolePolicy"], "sagemaker:describeapp": ["AWSSupportServiceRolePolicy"], "sagemaker:describeautomljob": ["AWSSupportServiceRolePolicy"], "sagemaker:describecompilationjob": ["AWSSupportServiceRolePolicy"], "sagemaker:describeexperiment": ["AWSSupportServiceRolePolicy"], "sagemaker:describehumantaskui": ["AWSSupportServiceRolePolicy"], "sagemaker:describehyperparametertuningjob": ["AWSSupportServiceRolePolicy"], "sagemaker:describelabelingjob": ["AWSSupportServiceRolePolicy"], "sagemaker:describemodel": ["AWSSupportServiceRolePolicy"], "sagemaker:describemodelpackage": ["AWSSupportServiceRolePolicy"], "sagemaker:describemonitoringschedule": ["AWSSupportServiceRolePolicy"], "sagemaker:describenotebookinstancelifecycleconfig": ["AmazonBraketFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSSupportServiceRolePolicy"], "sagemaker:describeprocessingjob": ["AWSSupportServiceRolePolicy"], "sagemaker:describesubscribedworkteam": ["AWSSupportServiceRolePolicy"], "sagemaker:describetrainingjob": ["AWSDeepLensServiceRolePolicy", "AWSGreengrassResourceAccessRolePolicy", "AWSSupportServiceRolePolicy"], "sagemaker:describetransformjob": ["AWSSupportServiceRolePolicy", "AWSQuickSightSageMakerPolicy"], "sagemaker:describetrial": ["AWSSupportServiceRolePolicy"], "sagemaker:describetrialcomponent": ["AWSSupportServiceRolePolicy"], "sagemaker:describeworkteam": ["AWSSupportServiceRolePolicy"], "sagemaker:listalgorithms": ["AWSSupportServiceRolePolicy"], "sagemaker:listautomljobs": ["AWSSupportServiceRolePolicy"], "sagemaker:listcandidatesforautomljob": ["AWSSupportServiceRolePolicy"], "sagemaker:listcoderepositories": ["AWSSupportServiceRolePolicy"], "sagemaker:listcompilationjobs": ["AWSSupportServiceRolePolicy"], "sagemaker:listendpoints": ["AmazonFraudDetectorFullAccessPolicy", "AWSSupportServiceRolePolicy"], "sagemaker:listexperiments": ["AWSSupportServiceRolePolicy"], "sagemaker:listflowdefinitions": ["AWSSupportServiceRolePolicy"], "sagemaker:listhumantaskuis": ["AWSSupportServiceRolePolicy"], "sagemaker:listhyperparametertuningjobs": ["AWSSupportServiceRolePolicy"], "sagemaker:listlabelingjobs": ["AWSSupportServiceRolePolicy"], "sagemaker:listlabelingjobsforworkteam": ["AWSSupportServiceRolePolicy"], "sagemaker:listmodelpackages": ["AWSSupportServiceRolePolicy"], "sagemaker:listmodels": ["AWSSupportServiceRolePolicy", "AWSQuickSightSageMakerPolicy"], "sagemaker:listmonitoringexecutions": ["AWSSupportServiceRolePolicy"], "sagemaker:listmonitoringschedules": ["AWSSupportServiceRolePolicy"], "sagemaker:listnotebookinstancelifecycleconfigs": ["AmazonBraketFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSSupportServiceRolePolicy"], "sagemaker:listprocessingjobs": ["AWSSupportServiceRolePolicy"], "sagemaker:listsubscribedworkteams": ["AWSSupportServiceRolePolicy"], "sagemaker:listtags": ["AmazonBraketFullAccess", "AWSGlueConsoleSageMakerNotebookFullAccess", "AWSSupportServiceRolePolicy"], "sagemaker:listtrainingjobs": ["AWSSupportServiceRolePolicy"], "sagemaker:listtrainingjobsforhyperparametertuningjob": ["AWSSupportServiceRolePolicy"], "sagemaker:listtransformjobs": ["AWSSupportServiceRolePolicy"], "sagemaker:listtrialcomponents": ["AWSSupportServiceRolePolicy"], "sagemaker:listtrials": ["AWSSupportServiceRolePolicy"], "sagemaker:listworkteams": ["AWSSupportServiceRolePolicy"], "securityhub:getenabledstandards": ["AWSSupportServiceRolePolicy"], "securityhub:getfindings": ["AWSSupportServiceRolePolicy"], "securityhub:getinsightresults": ["AWSSupportServiceRolePolicy"], "securityhub:getinsights": ["AWSSupportServiceRolePolicy"], "securityhub:getmasteraccount": ["AWSSupportServiceRolePolicy"], "securityhub:getmembers": ["AWSSupportServiceRolePolicy"], "securityhub:listenabledproductsforimport": ["AWSSupportServiceRolePolicy"], "securityhub:listinvitations": ["AWSSupportServiceRolePolicy"], "securityhub:listmembers": ["AWSSupportServiceRolePolicy"], "servicecatalog:describeconstraint": ["AWSSupportServiceRolePolicy"], "servicecatalog:describeportfolio": ["AWSSupportServiceRolePolicy"], "servicecatalog:describeproductasadmin": ["AWSSupportServiceRolePolicy"], "servicecatalog:describeprovisioningartifact": ["AWSSupportServiceRolePolicy"], "servicecatalog:listacceptedportfolioshares": ["AWSSupportServiceRolePolicy"], "servicecatalog:listconstraintsforportfolio": ["AWSSupportServiceRolePolicy"], "servicecatalog:listportfolioaccess": ["AWSSupportServiceRolePolicy"], "servicecatalog:listportfolios": ["AWSSupportServiceRolePolicy"], "servicecatalog:listportfoliosforproduct": ["AWSSupportServiceRolePolicy"], "servicecatalog:listprincipalsforportfolio": ["AWSSupportServiceRolePolicy"], "servicecatalog:listprovisioningartifacts": ["AWSSupportServiceRolePolicy"], "ses:describeactivereceiptruleset": ["AWSSupportServiceRolePolicy"], "ses:describereceiptrule": ["AWSSupportServiceRolePolicy"], "ses:describereceiptruleset": ["AWSSupportServiceRolePolicy"], "ses:getaccount": ["AWSSupportServiceRolePolicy"], "ses:getblacklistreports": ["AWSSupportServiceRolePolicy"], "ses:getconfigurationset": ["AWSSupportServiceRolePolicy"], "ses:getdedicatedip": ["AWSSupportServiceRolePolicy"], "ses:getdedicatedips": ["AWSSupportServiceRolePolicy"], "ses:getdeliverabilitydashboardoptions": ["AWSSupportServiceRolePolicy"], "ses:getdeliverabilitytestreport": ["AWSSupportServiceRolePolicy"], "ses:getdomaindeliverabilitycampaign": ["AWSSupportServiceRolePolicy"], "ses:getdomainstatisticsreport": ["AWSSupportServiceRolePolicy"], "ses:getemailidentity": ["AWSSupportServiceRolePolicy"], "ses:getidentitymailfromdomainattributes": ["AWSSupportServiceRolePolicy"], "ses:getidentitynotificationattributes": ["AWSSupportServiceRolePolicy"], "ses:getsendquota": ["AWSTrustedAdvisorServiceRolePolicy", "AWSSupportServiceRolePolicy"], "ses:getsendstatistics": ["AWSSupportServiceRolePolicy"], "ses:listconfigurationsets": ["AWSSupportServiceRolePolicy"], "ses:listdedicatedippools": ["AWSSupportServiceRolePolicy"], "ses:listdeliverabilitytestreports": ["AWSSupportServiceRolePolicy"], "ses:listdomaindeliverabilitycampaigns": ["AWSSupportServiceRolePolicy"], "ses:listemailidentities": ["AWSSupportServiceRolePolicy"], "ses:listreceiptfilters": ["AWSSupportServiceRolePolicy"], "ses:listreceiptrulesets": ["AWSSupportServiceRolePolicy"], "ses:listtagsforresource": ["AWSSupportServiceRolePolicy"], "shield:describeattack": ["AWSSupportServiceRolePolicy"], "sms-voice:getconfigurationseteventdestinations": ["AWSSupportServiceRolePolicy"], "sms:getconnectors": ["AWSSupportServiceRolePolicy"], "sms:getreplicationjobs": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSSupportServiceRolePolicy"], "sms:getreplicationruns": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSSupportServiceRolePolicy"], "sms:getservers": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS", "AWSSupportServiceRolePolicy"], "snowball:describeaddress": ["AWSSupportServiceRolePolicy"], "snowball:describeaddresses": ["AWSSupportServiceRolePolicy"], "snowball:describejob": ["AWSSupportServiceRolePolicy"], "snowball:getsnowballusage": ["AWSSupportServiceRolePolicy"], "sns:checkifphonenumberisoptedout": ["AWSSupportServiceRolePolicy"], "sns:getendpointattributes": ["AWSSupportServiceRolePolicy"], "sns:getplatformapplicationattributes": ["AWSSupportServiceRolePolicy"], "sns:getsmsattributes": ["AWSSupportServiceRolePolicy"], "sns:getsubscriptionattributes": ["AWSSupportServiceRolePolicy"], "sns:listendpointsbyplatformapplication": ["AWSSupportServiceRolePolicy"], "sns:listphonenumbersoptedout": ["AWSSupportServiceRolePolicy"], "sns:listplatformapplications": ["AmazonCognitoReadOnly", "AWSSupportServiceRolePolicy", "AmazonCognitoPowerUser"], "ssm:describeactivations": ["AWSSupportServiceRolePolicy"], "ssm:describeassociationexecutiontargets": ["AWSSupportServiceRolePolicy"], "ssm:describeassociationexecutions": ["AWSSupportServiceRolePolicy"], "ssm:describeautomationstepexecutions": ["AWSSupportServiceRolePolicy"], "ssm:describeavailablepatches": ["AWSSupportServiceRolePolicy"], "ssm:describedocumentpermission": ["AWSSupportServiceRolePolicy"], "ssm:describeeffectiveinstanceassociations": ["AWSSupportServiceRolePolicy"], "ssm:describeeffectivepatchesforpatchbaseline": ["AWSSupportServiceRolePolicy", "AmazonSSMPatchAssociation"], "ssm:describeinstanceassociationsstatus": ["AWSServiceRoleForImageBuilder", "AWSSupportServiceRolePolicy"], "ssm:describeinstanceinformation": ["AmazonLaunchWizard_Fullaccess", "AWSServiceRoleForImageBuilder", "AWSOpsWorksCMServiceRole", "AWSSupportServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:describeinstancepatchstates": ["AWSSupportServiceRolePolicy"], "ssm:describeinstancepatchstatesforpatchgroup": ["AWSSupportServiceRolePolicy"], "ssm:describeinstancepatches": ["AWSSupportServiceRolePolicy"], "ssm:describeinventorydeletions": ["AWSSupportServiceRolePolicy"], "ssm:describemaintenancewindowexecutiontaskinvocations": ["AWSSupportServiceRolePolicy"], "ssm:describemaintenancewindowexecutiontasks": ["AWSSupportServiceRolePolicy"], "ssm:describemaintenancewindowexecutions": ["AWSSupportServiceRolePolicy"], "ssm:describemaintenancewindowschedule": ["AWSSupportServiceRolePolicy"], "ssm:describemaintenancewindowtargets": ["AWSSupportServiceRolePolicy"], "ssm:describemaintenancewindowtasks": ["AWSSupportServiceRolePolicy"], "ssm:describemaintenancewindows": ["AWSSupportServiceRolePolicy"], "ssm:describemaintenancewindowsfortarget": ["AWSSupportServiceRolePolicy"], "ssm:describeparameters": ["AmazonLaunchWizard_Fullaccess", "AWSSupportServiceRolePolicy"], "ssm:describepatchbaselines": ["AWSSupportServiceRolePolicy", "AmazonSSMPatchAssociation"], "ssm:describepatchgroupstate": ["AWSSupportServiceRolePolicy"], "ssm:describepatchgroups": ["AWSSupportServiceRolePolicy"], "ssm:describepatchproperties": ["AWSSupportServiceRolePolicy"], "ssm:describesessions": ["AWSSupportServiceRolePolicy"], "ssm:getconnectionstatus": ["AmazonLaunchWizard_Fullaccess", "AWSSupportServiceRolePolicy"], "ssm:getdefaultpatchbaseline": ["AWSSupportServiceRolePolicy"], "ssm:getinventoryschema": ["AWSSupportServiceRolePolicy"], "ssm:getmaintenancewindow": ["AWSSupportServiceRolePolicy"], "ssm:getmaintenancewindowexecution": ["AWSSupportServiceRolePolicy"], "ssm:getmaintenancewindowexecutiontask": ["AWSSupportServiceRolePolicy"], "ssm:getmaintenancewindowexecutiontaskinvocation": ["AWSSupportServiceRolePolicy"], "ssm:getmaintenancewindowtask": ["AWSSupportServiceRolePolicy"], "ssm:getpatchbaseline": ["AWSSupportServiceRolePolicy", "AmazonSSMPatchAssociation"], "ssm:getpatchbaselineforpatchgroup": ["AWSSupportServiceRolePolicy"], "ssm:getservicesetting": ["AWSSupportServiceRolePolicy"], "ssm:labelparameterversion": ["AWSSupportServiceRolePolicy"], "ssm:listassociationversions": ["AWSSupportServiceRolePolicy"], "ssm:listcomplianceitems": ["AWSSupportServiceRolePolicy"], "ssm:listcompliancesummaries": ["AWSSupportServiceRolePolicy"], "ssm:listdocumentversions": ["AWSServiceCatalogAdminReadOnlyAccess", "AWSServiceCatalogAdminFullAccess", "AWSSupportServiceRolePolicy"], "ssm:listresourcecompliancesummaries": ["AWSSupportServiceRolePolicy"], "ssm:listresourcedatasync": ["AWSLicenseManagerMemberAccountRolePolicy", "AWSSupportServiceRolePolicy"], "states:describeactivity": ["AWSStepFunctionsReadOnlyAccess", "AWSSupportServiceRolePolicy"], "states:describestatemachine": ["AWSStepFunctionsReadOnlyAccess", "AWSSupportServiceRolePolicy", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "states:listexecutions": ["AWSStepFunctionsReadOnlyAccess", "AWSSupportServiceRolePolicy"], "storagegateway:describesmbfileshares": ["AWSSupportServiceRolePolicy"], "storagegateway:describesmbsettings": ["AWSSupportServiceRolePolicy"], "storagegateway:listfileshares": ["AWSSupportServiceRolePolicy"], "storagegateway:listtapes": ["AWSSupportServiceRolePolicy"], "storagegateway:listvolumeinitiators": ["AWSSupportServiceRolePolicy"], "swf:countclosedworkflowexecutions": ["AWSSupportServiceRolePolicy"], "swf:countopenworkflowexecutions": ["AWSSupportServiceRolePolicy"], "swf:countpendingactivitytasks": ["AWSSupportServiceRolePolicy"], "swf:countpendingdecisiontasks": ["AWSSupportServiceRolePolicy"], "swf:describeactivitytype": ["AWSSupportServiceRolePolicy"], "swf:describedomain": ["AWSSupportServiceRolePolicy"], "swf:describeworkflowexecution": ["AWSSupportServiceRolePolicy"], "swf:describeworkflowtype": ["AWSSupportServiceRolePolicy"], "swf:getworkflowexecutionhistory": ["AWSSupportServiceRolePolicy"], "swf:listactivitytypes": ["AWSSupportServiceRolePolicy"], "swf:listclosedworkflowexecutions": ["AWSSupportServiceRolePolicy"], "swf:listdomains": ["AWSSupportServiceRolePolicy"], "swf:listopenworkflowexecutions": ["AWSSupportServiceRolePolicy"], "swf:listworkflowtypes": ["AWSSupportServiceRolePolicy"], "transfer:describeserver": ["AWSSupportServiceRolePolicy", "AWSTransferReadOnlyAccess"], "transfer:describeuser": ["AWSSupportServiceRolePolicy", "AWSTransferReadOnlyAccess"], "transfer:listservers": ["AWSSupportServiceRolePolicy", "AWSTransferReadOnlyAccess"], "transfer:listtagsforresource": ["AWSSupportServiceRolePolicy", "AWSTransferReadOnlyAccess"], "transfer:listusers": ["AWSSupportServiceRolePolicy", "AWSTransferReadOnlyAccess"], "waf-regional:getbytematchset": ["AWSSupportServiceRolePolicy"], "waf-regional:getchangetokenstatus": ["AWSSupportServiceRolePolicy"], "waf-regional:getipset": ["AWSSupportServiceRolePolicy"], "waf-regional:getrule": ["AWSSupportServiceRolePolicy"], "waf-regional:getsqlinjectionmatchset": ["AWSSupportServiceRolePolicy"], "waf-regional:listbytematchsets": ["AWSSupportServiceRolePolicy"], "waf-regional:listipsets": ["AWSSupportServiceRolePolicy"], "waf-regional:listrules": ["AWSSupportServiceRolePolicy"], "waf-regional:listsqlinjectionmatchsets": ["AWSSupportServiceRolePolicy"], "waf:getbytematchset": ["AWSSupportServiceRolePolicy"], "waf:getchangetokenstatus": ["AWSSupportServiceRolePolicy"], "waf:getipset": ["AWSSupportServiceRolePolicy"], "waf:getrule": ["AWSSupportServiceRolePolicy"], "waf:getsampledrequests": ["AWSSupportServiceRolePolicy"], "waf:getsizeconstraintset": ["AWSSupportServiceRolePolicy"], "waf:getsqlinjectionmatchset": ["AWSSupportServiceRolePolicy"], "waf:getxssmatchset": ["AWSSupportServiceRolePolicy"], "waf:listbytematchsets": ["AWSSupportServiceRolePolicy"], "waf:listipsets": ["AWSSupportServiceRolePolicy"], "waf:listrules": ["AWSSupportServiceRolePolicy"], "waf:listsizeconstraintsets": ["AWSSupportServiceRolePolicy"], "waf:listsqlinjectionmatchsets": ["AWSSupportServiceRolePolicy"], "waf:listxssmatchsets": ["AWSSupportServiceRolePolicy"], "worklink:describeauditstreamconfiguration": ["AWSSupportServiceRolePolicy"], "worklink:describecompanynetworkconfiguration": ["AWSSupportServiceRolePolicy"], "worklink:describedevice": ["AWSSupportServiceRolePolicy"], "worklink:describedevicepolicyconfiguration": ["AWSSupportServiceRolePolicy"], "worklink:describedomain": ["AWSSupportServiceRolePolicy"], "worklink:describefleetmetadata": ["AWSSupportServiceRolePolicy"], "worklink:describeidentityproviderconfiguration": ["AWSSupportServiceRolePolicy"], "worklink:describewebsitecertificateauthority": ["AWSSupportServiceRolePolicy"], "worklink:listdevices": ["AWSSupportServiceRolePolicy"], "worklink:listdomains": ["AWSSupportServiceRolePolicy"], "worklink:listfleets": ["AWSSupportServiceRolePolicy"], "worklink:listwebsiteauthorizationproviders": ["AWSSupportServiceRolePolicy"], "worklink:listwebsitecertificateauthorities": ["AWSSupportServiceRolePolicy"], "workmail:describegroup": ["AWSSupportServiceRolePolicy"], "workmail:describeorganization": ["AWSSupportServiceRolePolicy"], "workmail:describeresource": ["AWSSupportServiceRolePolicy"], "workmail:describeuser": ["AWSSupportServiceRolePolicy"], "workmail:listaliases": ["AWSSupportServiceRolePolicy"], "workmail:listgroupmembers": ["AWSSupportServiceRolePolicy"], "workmail:listgroups": ["AWSSupportServiceRolePolicy"], "workmail:listmailboxpermissions": ["AWSSupportServiceRolePolicy"], "workmail:listorganizations": ["AWSSupportServiceRolePolicy"], "workmail:listresourcedelegates": ["AWSSupportServiceRolePolicy"], "workmail:listresources": ["AWSSupportServiceRolePolicy"], "workmail:listusers": ["AWSSupportServiceRolePolicy"], "workspaces:describeaccount": ["AWSSupportServiceRolePolicy"], "workspaces:describeaccountmodifications": ["AWSSupportServiceRolePolicy"], "workspaces:describeipgroups": ["AWSSupportServiceRolePolicy"], "workspaces:describeworkspaceimages": ["AWSSupportServiceRolePolicy"], "appmesh:describevirtualgateway": ["AmazonECS_FullAccess"], "appmesh:listvirtualgateways": ["AmazonECS_FullAccess"], "codedeploy:continuedeployment": ["AmazonECS_FullAccess"], "codedeploy:createapplication": ["AmazonECS_FullAccess"], "codedeploy:createdeployment": ["AWSCodeDeployDeployerAccess", "AmazonECS_FullAccess"], "codedeploy:createdeploymentgroup": ["AmazonECS_FullAccess"], "codedeploy:getdeploymenttarget": ["AmazonECS_FullAccess"], "codedeploy:listdeploymenttargets": ["AmazonECS_FullAccess"], "codedeploy:registerapplicationrevision": ["AWSCodeDeployDeployerAccess", "AmazonECS_FullAccess"], "codedeploy:stopdeployment": ["AmazonECS_FullAccess"], "ec2:associateroutetable": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:modifysubnetattribute": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess"], "ec2:modifyvpcattribute": ["AWSDeepRacerCloudFormationAccessPolicy", "AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonECS_FullAccess", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess", "AWSThinkboxAWSPortalAdminPolicy"], "elasticloadbalancing:createrule": ["AmazonECS_FullAccess"], "elasticloadbalancing:deleterule": ["AmazonECS_FullAccess"], "servicediscovery:createprivatednsnamespace": ["AmazonECS_FullAccess"], "servicediscovery:createservice": ["AmazonECS_FullAccess"], "servicediscovery:deleteservice": ["AmazonECS_FullAccess"], "servicediscovery:getnamespace": ["AmazonECS_FullAccess", "APIGatewayServiceRolePolicy"], "servicediscovery:getoperation": ["AmazonECS_FullAccess"], "servicediscovery:getservice": ["AmazonECS_FullAccess", "APIGatewayServiceRolePolicy"], "servicediscovery:listnamespaces": ["AmazonECS_FullAccess"], "servicediscovery:listservices": ["AmazonECS_FullAccess"], "servicediscovery:updateservice": ["AmazonECS_FullAccess"], "ssm:getparametersbypath": ["AmazonECS_FullAccess"], "acm-pca:listpermissions": ["AWSCertificateManagerPrivateCAAuditor", "AWSCertificateManagerPrivateCAReadOnly", "AWSCertificateManagerPrivateCAPrivilegedUser", "AWSCertificateManagerPrivateCAUser"], "fms:get*": ["AWSFMAdminReadOnlyAccess"], "fms:list*": ["AWSFMAdminReadOnlyAccess"], "ssm:*": ["AmazonSSMAutomationRole", "AmazonSSMFullAccess"], "ec2messages:*": ["AmazonSSMFullAccess"], "ecr:initiatelayerupload": ["AmazonEC2ContainerRegistryPowerUser", "AmazonSageMakerFullAccess"], "ecr:uploadlayerpart": ["AmazonEC2ContainerRegistryPowerUser", "AmazonSageMakerFullAccess"], "ecr:completelayerupload": ["AmazonEC2ContainerRegistryPowerUser", "AmazonSageMakerFullAccess"], "ecr:putimage": ["AmazonEC2ContainerRegistryPowerUser", "AmazonSageMakerFullAccess"], "cognito-identity:get*": ["AmazonCognitoReadOnly"], "dynamodb:putitem": ["DynamoDBReplicationServiceRolePolicy", "AWSBackupServiceRolePolicyForRestores", "AWSThinkboxDeadlineResourceTrackerAccessPolicy", "AWSElasticBeanstalkWorkerTier", "AWSIoTRuleActions"], "dynamodb:updateitem": ["DynamoDBReplicationServiceRolePolicy", "AWSElasticBeanstalkWorkerTier", "AWSBackupServiceRolePolicyForRestores", "AWSThinkboxDeadlineResourceTrackerAccessPolicy"], "dynamodb:deleteitem": ["DynamoDBReplicationServiceRolePolicy", "AWSElasticBeanstalkWorkerTier", "AWSBackupServiceRolePolicyForRestores", "AWSThinkboxDeadlineResourceTrackerAccessPolicy"], "dynamodb:updatetimetolive": ["DynamoDBReplicationServiceRolePolicy"], "freertos:*": ["AmazonFreeRTOSFullAccess"], "opsworks-cm:deleteserver": ["AWSOpsWorksCMServiceRole"], "opsworks-cm:startmaintenance": ["AWSOpsWorksCMServiceRole"], "acm:deletecertificate": ["AWSOpsWorksCMServiceRole", "AWSForWordPressPluginPolicy"], "acm:importcertificate": ["AWSOpsWorksCMServiceRole"], "ec2:acceptvpcendpointconnections": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:associatedhcpoptions": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCFullAccess"], "ec2:associatesubnetcidrblock": ["AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess"], "ec2:associatevpccidrblock": ["AmazonLaunchWizard_Fullaccess", "NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess"], "ec2:createdefaultsubnet": ["NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess"], "ec2:createdefaultvpc": ["NetworkAdministrator", "AmazonDocDBConsoleFullAccess", "NeptuneConsoleFullAccess", "AmazonVPCFullAccess"], "ec2:createegressonlyinternetgateway": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCFullAccess"], "ec2:createnetworkacl": ["NetworkAdministrator", "AmazonVPCFullAccess", "AWSDeepRacerCloudFormationAccessPolicy"], "ec2:createnetworkaclentry": ["NetworkAdministrator", "AmazonVPCFullAccess", "AWSDeepRacerCloudFormationAccessPolicy"], "ec2:createvpcendpointconnectionnotification": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:createvpcendpointserviceconfiguration": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:deleteegressonlyinternetgateway": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:deletenetworkacl": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCFullAccess", "AWSDeepRacerCloudFormationAccessPolicy"], "ec2:deletenetworkaclentry": ["NetworkAdministrator", "AmazonVPCFullAccess", "AWSDeepRacerCloudFormationAccessPolicy"], "ec2:deletevpcendpointconnectionnotifications": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:deletevpcendpointserviceconfigurations": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:disassociatesubnetcidrblock": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCFullAccess"], "ec2:disassociatevpccidrblock": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCFullAccess"], "ec2:modifyvpcendpointconnectionnotification": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:modifyvpcendpointserviceconfiguration": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:modifyvpcendpointservicepermissions": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:modifyvpcpeeringconnectionoptions": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:modifyvpctenancy": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:rejectvpcendpointconnections": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:replacenetworkaclassociation": ["NetworkAdministrator", "AmazonVPCFullAccess", "AWSDeepRacerCloudFormationAccessPolicy"], "ec2:replacenetworkaclentry": ["NetworkAdministrator", "AmazonVPCFullAccess"], "ec2:replaceroutetableassociation": ["NetworkAdministrator", "AmazonLaunchWizard_Fullaccess", "AmazonVPCFullAccess"], "ec2:resetnetworkinterfaceattribute": ["NetworkAdministrator", "AmazonVPCFullAccess"], "importexport:*": ["AWSImportExportFullAccess"], "mechanicalturk:*": ["AmazonMechanicalTurkFullAccess"], "kafka:*": ["AmazonMSKFullAccess"], "firehose:tagdeliverystream": ["AmazonMSKFullAccess"], "sso-directory:get*": ["AWSSSODirectoryReadOnly"], "eks:updateclusterversion": ["AmazonEKSServicePolicy"], "machinelearning:add*": ["AmazonMachineLearningCreateOnlyAccess"], "machinelearning:create*": ["AmazonMachineLearningCreateOnlyAccess"], "machinelearning:delete*": ["AmazonMachineLearningCreateOnlyAccess"], "batch:*": ["AWSBatchFullAccess"], "iot:publish": ["AWSIoTDataAccess", "AWSIoTRuleActions"], "sqs:sendmessage*": ["AWSIoTRuleActions"], "cloudwatch:setalarmstate": ["AWSIoTRuleActions"], "es:eshttpput": ["AWSIoTRuleActions"], "firehose:putrecord": ["WAFV2LoggingServiceRolePolicy", "APIGatewayServiceRolePolicy", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSServiceRoleForLogDeliveryPolicy", "WAFLoggingServiceRolePolicy", "WAFRegionalLoggingServiceRolePolicy", "AWSIoTRuleActions"], "iotevents:*": ["AWSIoTEventsFullAccess"], "clouddirectory:*": ["AmazonCloudDirectoryFullAccess"], "sagemaker:createpresignednotebookinstanceurl": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonBraketFullAccess"], "sagemaker:createnotebookinstance": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonBraketFullAccess"], "sagemaker:deletenotebookinstance": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonBraketFullAccess"], "sagemaker:startnotebookinstance": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonBraketFullAccess"], "sagemaker:stopnotebookinstance": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonBraketFullAccess"], "sagemaker:updatenotebookinstance": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonBraketFullAccess"], "sagemaker:createnotebookinstancelifecycleconfig": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonBraketFullAccess"], "sagemaker:deletenotebookinstancelifecycleconfig": ["AWSGlueConsoleSageMakerNotebookFullAccess", "AmazonBraketFullAccess"], "firehose:putrecordbatch": ["WAFV2LoggingServiceRolePolicy", "APIGatewayServiceRolePolicy", "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy", "AWSServiceRoleForLogDeliveryPolicy", "WAFLoggingServiceRolePolicy", "WAFRegionalLoggingServiceRolePolicy"], "opsworks:registerinstance": ["AWSOpsWorksInstanceRegistration"], "elasticloadbalancing:describeaccountlimits": ["AWSTrustedAdvisorServiceRolePolicy", "ServiceQuotasFullAccess", "ServiceQuotasReadOnlyAccess"], "kinesis:describelimits": ["AWSTrustedAdvisorServiceRolePolicy", "ServiceQuotasFullAccess", "ServiceQuotasReadOnlyAccess"], "route53:getaccountlimit": ["AWSTrustedAdvisorServiceRolePolicy", "ServiceQuotasFullAccess", "ServiceQuotasReadOnlyAccess"], "ce:getreservationpurchaserecommendation": ["AWSTrustedAdvisorServiceRolePolicy"], "ce:getsavingsplanspurchaserecommendation": ["AWSTrustedAdvisorServiceRolePolicy"], "codepipeline:putjobfailureresult": ["AWSCodePipelineCustomActionAccess"], "codepipeline:putjobsuccessresult": ["AWSCodePipelineCustomActionAccess"], "kinesisvideo:getmedia": ["AWSDeepRacerServiceRolePolicy", "AmazonRekognitionServiceRole"], "storagegateway:*": ["AWSStorageGatewayFullAccess"], "appsync:*": ["AWSAppSyncAdministrator"], "iotanalytics:listdatasets": ["AWSQuickSightIoTAnalyticsAccess"], "iotanalytics:describedataset": ["AWSQuickSightIoTAnalyticsAccess"], "iotanalytics:getdatasetcontent": ["AWSQuickSightIoTAnalyticsAccess"], "datasync:*": ["AWSDataSyncFullAccess"], "cloudwatch:putanomalydetector": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cloudwatch:deleteanomalydetector": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "cloudwatch:describeanomalydetectors": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:deleteparameter": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:addtagstoresource": ["AWSServiceRoleForImageBuilder", "AmazonLaunchWizard_Fullaccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:removetagsfromresource": ["AmazonLaunchWizard_Fullaccess", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:updateassociation": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:deleteassociation": ["AWSServiceRoleForImageBuilder", "CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:getopsitem": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:createopsitem": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:describeopsitems": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "ssm:updateopsitem": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "dynamodb:describecontributorinsights": ["CloudwatchApplicationInsightsServiceLinkedRolePolicy"], "chime:listaccounts": ["AmazonChimeUserManagement"], "chime:getaccount": ["AmazonChimeUserManagement"], "chime:getaccountsettings": ["AmazonChimeUserManagement"], "chime:updateaccountsettings": ["AmazonChimeUserManagement"], "chime:listusers": ["AmazonChimeUserManagement"], "chime:getuser": ["AmazonChimeUserManagement"], "chime:getuserbyemail": ["AmazonChimeUserManagement"], "chime:inviteusers": ["AmazonChimeUserManagement"], "chime:inviteusersfromprovider": ["AmazonChimeUserManagement"], "chime:suspendusers": ["AmazonChimeUserManagement"], "chime:activateusers": ["AmazonChimeUserManagement"], "chime:updateuserlicenses": ["AmazonChimeUserManagement"], "chime:resetpersonalpin": ["AmazonChimeUserManagement"], "chime:logoutuser": ["AmazonChimeUserManagement"], "chime:listdomains": ["AmazonChimeUserManagement"], "chime:getdomain": ["AmazonChimeUserManagement"], "chime:listdirectories": ["AmazonChimeUserManagement"], "chime:listgroups": ["AmazonChimeUserManagement"], "chime:submitsupportrequest": ["AmazonChimeUserManagement"], "chime:listdelegates": ["AmazonChimeUserManagement"], "chime:listaccountusagereportdata": ["AmazonChimeUserManagement"], "chime:getmeetingdetail": ["AmazonChimeUserManagement"], "chime:listmeetingevents": ["AmazonChimeUserManagement"], "chime:listmeetingsreportdata": ["AmazonChimeUserManagement"], "chime:getuseractivityreportdata": ["AmazonChimeUserManagement"], "chime:updateuser": ["AmazonChimeUserManagement"], "chime:batchupdateuser": ["AmazonChimeUserManagement"], "chime:batchsuspenduser": ["AmazonChimeUserManagement"], "chime:batchunsuspenduser": ["AmazonChimeUserManagement"], "chime:associatephonenumberwithuser": ["AmazonChimeUserManagement"], "chime:disassociatephonenumberfromuser": ["AmazonChimeUserManagement"], "chime:getphonenumber": ["AmazonChimeUserManagement"], "chime:listphonenumbers": ["AmazonChimeUserManagement"], "chime:getusersettings": ["AmazonChimeUserManagement"], "chime:updateusersettings": ["AmazonChimeUserManagement"], "chime:createuser": ["AmazonChimeUserManagement"], "chime:associatesignindelegategroupswithaccount": ["AmazonChimeUserManagement"], "chime:disassociatesignindelegategroupsfromaccount": ["AmazonChimeUserManagement"], "mobileanalytics:getfinancialreports": ["AmazonMobileAnalyticsFinancialReportAccess"], "comprehend:batchdetectdominantlanguage": ["ComprehendReadOnly"], "comprehend:detectentities": ["ComprehendReadOnly"], "comprehend:batchdetectentities": ["ComprehendReadOnly"], "comprehend:detectkeyphrases": ["ComprehendReadOnly"], "comprehend:batchdetectkeyphrases": ["ComprehendReadOnly"], "comprehend:detectpiientities": ["ComprehendReadOnly"], "comprehend:detectsentiment": ["ComprehendReadOnly", "LexBotPolicy"], "comprehend:batchdetectsentiment": ["ComprehendReadOnly"], "comprehend:detectsyntax": ["ComprehendReadOnly"], "comprehend:batchdetectsyntax": ["ComprehendReadOnly"], "comprehend:classifydocument": ["ComprehendReadOnly"], "comprehend:describetopicsdetectionjob": ["ComprehendReadOnly"], "comprehend:listtopicsdetectionjobs": ["ComprehendReadOnly"], "comprehend:describedominantlanguagedetectionjob": ["ComprehendReadOnly"], "comprehend:listdominantlanguagedetectionjobs": ["ComprehendReadOnly"], "comprehend:describeentitiesdetectionjob": ["ComprehendReadOnly"], "comprehend:listentitiesdetectionjobs": ["ComprehendReadOnly"], "comprehend:describekeyphrasesdetectionjob": ["ComprehendReadOnly"], "comprehend:listkeyphrasesdetectionjobs": ["ComprehendReadOnly"], "comprehend:describepiientitiesdetectionjob": ["ComprehendReadOnly"], "comprehend:listpiientitiesdetectionjobs": ["ComprehendReadOnly"], "comprehend:describesentimentdetectionjob": ["ComprehendReadOnly"], "comprehend:listsentimentdetectionjobs": ["ComprehendReadOnly"], "comprehend:describedocumentclassifier": ["ComprehendReadOnly"], "comprehend:listdocumentclassifiers": ["ComprehendReadOnly"], "comprehend:describedocumentclassificationjob": ["ComprehendReadOnly"], "comprehend:listdocumentclassificationjobs": ["ComprehendReadOnly"], "comprehend:describeentityrecognizer": ["ComprehendReadOnly"], "comprehend:listentityrecognizers": ["ComprehendReadOnly"], "comprehend:listtagsforresource": ["ComprehendReadOnly"], "comprehend:describeendpoint": ["ComprehendReadOnly", "AWSApplicationAutoscalingComprehendEndpointPolicy"], "comprehend:listendpoints": ["ComprehendReadOnly"], "states:*": ["AWSStepFunctionsConsoleFullAccess", "AWSStepFunctionsFullAccess"], "iot:deletethingshadow": ["AWSDeepLensServiceRolePolicy", "AWSGreengrassResourceAccessRolePolicy", "AWSIoTDataAccess"], "iot:getthingshadow": ["AWSDeepLensServiceRolePolicy", "AWSGreengrassResourceAccessRolePolicy", "AWSIoTSiteWiseConsoleFullAccess", "AWSIoTDataAccess"], "iot:updatethingshadow": ["AWSDeepLensServiceRolePolicy", "AWSGreengrassResourceAccessRolePolicy", "AWSIoTDataAccess"], "greengrass:associateroletogroup": ["AWSDeepLensServiceRolePolicy"], "greengrass:associateserviceroletoaccount": ["AWSDeepLensServiceRolePolicy"], "greengrass:createresourcedefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:createresourcedefinitionversion": ["AWSDeepLensServiceRolePolicy"], "greengrass:createcoredefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:createcoredefinitionversion": ["AWSDeepLensServiceRolePolicy"], "greengrass:creategroup": ["AWSDeepLensServiceRolePolicy"], "greengrass:creategroupcertificateauthority": ["AWSDeepLensServiceRolePolicy"], "greengrass:createloggerdefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:createloggerdefinitionversion": ["AWSDeepLensServiceRolePolicy"], "greengrass:createsubscriptiondefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:createsubscriptiondefinitionversion": ["AWSDeepLensServiceRolePolicy"], "greengrass:deletecoredefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:deletefunctiondefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:deletegroup": ["AWSDeepLensServiceRolePolicy"], "greengrass:deleteloggerdefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:deletesubscriptiondefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:disassociaterolefromgroup": ["AWSDeepLensServiceRolePolicy"], "greengrass:disassociateservicerolefromaccount": ["AWSDeepLensServiceRolePolicy"], "greengrass:getgroupcertificateconfiguration": ["AWSDeepLensServiceRolePolicy"], "greengrass:getresourcedefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:listgroupcertificateauthorities": ["AWSDeepLensServiceRolePolicy"], "greengrass:resetdeployments": ["AWSDeepLensServiceRolePolicy"], "greengrass:updateconnectivityinfo": ["AWSDeepLensServiceRolePolicy"], "greengrass:updatecoredefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:updatedevicedefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:updatefunctiondefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:updategroup": ["AWSDeepLensServiceRolePolicy"], "greengrass:updategroupcertificateconfiguration": ["AWSDeepLensServiceRolePolicy"], "greengrass:updateloggerdefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:updatesubscriptiondefinition": ["AWSDeepLensServiceRolePolicy"], "greengrass:updateresourcedefinition": ["AWSDeepLensServiceRolePolicy"], "sagemaker:createtrainingjob": ["AWSDeepLensServiceRolePolicy"], "sagemaker:stoptrainingjob": ["AWSDeepLensServiceRolePolicy"], "kinesisvideo:deletestream": ["AWSDeepLensServiceRolePolicy", "AWSDeepRacerServiceRolePolicy"], "cognito-identity:*": ["AmazonCognitoPowerUser"], "cognito-idp:*": ["AmazonCognitoPowerUser"], "cognito-sync:*": ["AmazonCognitoPowerUser"], "lambda:getpolicy2*": ["AmazonCognitoPowerUser"], "lambda:listfunctions2*": ["AmazonCognitoPowerUser"], "cognito-idp:createuserpoolclient": ["AmazonSageMakerFullAccess", "AmazonESCognitoAccess"], "cognito-idp:deleteuserpoolclient": ["AmazonESCognitoAccess"], "cognito-idp:admininitiateauth": ["AmazonESCognitoAccess"], "cognito-idp:adminuserglobalsignout": ["AmazonESCognitoAccess"], "cognito-identity:updateidentitypool": ["AmazonESCognitoAccess"], "cognito-identity:setidentitypoolroles": ["AmazonESCognitoAccess"], "machinelearning:createrealtimeendpoint": ["AmazonMachineLearningManageRealTimeEndpointOnlyAccess"], "machinelearning:deleterealtimeendpoint": ["AmazonMachineLearningManageRealTimeEndpointOnlyAccess"], "directconnect:describedirectconnectgateways": ["AmazonInspectorServiceRolePolicy"], "directconnect:describedirectconnectgatewayassociations": ["AmazonInspectorServiceRolePolicy"], "directconnect:describedirectconnectgatewayattachments": ["AWSNetworkManagerServiceRolePolicy", "AmazonInspectorServiceRolePolicy"], "directconnect:describetags": ["AmazonInspectorServiceRolePolicy"], "ec2:describemanagedprefixlists": ["AmazonInspectorServiceRolePolicy"], "ec2:getmanagedprefixlistentries": ["AmazonInspectorServiceRolePolicy"], "ec2:describetransitgatewaypeeringattachments": ["AWSNetworkManagerServiceRolePolicy", "AmazonInspectorServiceRolePolicy"], "elasticfilesystem:createfilesystem": ["AmazonLaunchWizard_Fullaccess", "AWSBackupServiceRolePolicyForRestores", "AmazonElasticFileSystemFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy"], "elasticfilesystem:createmounttarget": ["AmazonLaunchWizard_Fullaccess", "AmazonElasticFileSystemFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy"], "elasticfilesystem:createtags": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:createaccesspoint": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:deletefilesystem": ["AmazonLaunchWizard_Fullaccess", "AWSBackupServiceRolePolicyForRestores", "AmazonElasticFileSystemFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy"], "elasticfilesystem:deletemounttarget": ["AmazonLaunchWizard_Fullaccess", "AmazonElasticFileSystemFullAccess", "AmazonSageMakerNotebooksServiceRolePolicy"], "elasticfilesystem:deletetags": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:deleteaccesspoint": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:deletefilesystempolicy": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:modifymounttargetsecuritygroups": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:putbackuppolicy": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:putlifecycleconfiguration": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:putfilesystempolicy": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:updatefilesystem": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:tagresource": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:untagresource": ["AmazonElasticFileSystemFullAccess"], "elasticfilesystem:restore": ["AWSBackupServiceRolePolicyForRestores", "AmazonElasticFileSystemFullAccess"], "macie:*": ["AmazonMacieFullAccess"], "macie2:*": ["AmazonMacieFullAccess"], "iam:getservicelastaccesseddetails": ["AWSIoTDeviceDefenderAudit", "IAMAccessAdvisorReadOnly"], "lex:posttext": ["AmazonLexRunBotsOnly", "LexChannelPolicy"], "sms:sendmessage": ["ServerMigrationConnector"], "sms:getmessages": ["ServerMigrationConnector"], "awsconnector:*": ["ServerMigrationConnector"], "kinesis:describestreamsummary": ["AWSLambdaKinesisExecutionRole"], "kinesis:listshards": ["AWSLambdaKinesisExecutionRole"], "kinesis:subscribetoshard": ["AWSLambdaKinesisExecutionRole"], "aws-marketplace:getentitlements": ["AWSMarketplaceGetEntitlements"], "chime:searchavailablephonenumbers": ["AmazonChimeReadOnly"], "resource-groups:*": ["ResourceGroupsandTagEditorFullAccess"], "s3:*multipartupload*": ["AmazonElasticTranscoderRole"], "worklink:*": ["AmazonWorkLinkFullAccess"], "zocalo:*": ["AmazonZocaloFullAccess"], "firehose:createdeliverystream": ["ApplicationDiscoveryServiceContinuousExportServiceRolePolicy"], "firehose:deletedeliverystream": ["ApplicationDiscoveryServiceContinuousExportServiceRolePolicy"], "firehose:updatedestination": ["ApplicationDiscoveryServiceContinuousExportServiceRolePolicy"], "sumerian:*": ["AmazonSumerianFullAccess"], "waf:*": ["AWSShieldDRTAccessPolicy", "AWSWAFConsoleFullAccess", "AWSFMAdminFullAccess", "AWSWAFFullAccess"], "waf-regional:*": ["AWSShieldDRTAccessPolicy", "AWSWAFConsoleFullAccess", "AWSFMAdminFullAccess", "AWSWAFFullAccess"], "wafv2:*": ["AWSShieldDRTAccessPolicy", "AWSWAFConsoleFullAccess", "AWSWAFFullAccess"], "states:describestatemachineforexecution": ["AWSStepFunctionsReadOnlyAccess"], "greengrass:*": ["AWSGreengrassFullAccess", "AWSGreengrassResourceAccessRolePolicy"], "aws-portal:viewusage": ["AWSAccountUsageReportAccess"], "appstream:*": ["AmazonAppStreamFullAccess"], "application-autoscaling:putscheduledaction": ["AmazonKeyspacesFullAccess", "AmazonMCSFullAccess", "AmazonSageMakerFullAccess", "AmazonAppStreamFullAccess"], "application-autoscaling:deletescheduledaction": ["AmazonKeyspacesFullAccess", "AmazonMCSFullAccess", "AmazonSageMakerFullAccess", "AmazonAppStreamFullAccess"], "iot:connect": ["AWSIoTDataAccess"], "iot:subscribe": ["AWSIoTDataAccess"], "iot:receive": ["AWSIoTDataAccess"], "directconnect:*": ["NetworkAdministrator", "AWSDirectConnectFullAccess"], "codecommit:putrepositorytriggers": ["AWSCodePipelineFullAccess"], "codecommit:getreferences": ["AWSCodePipelineFullAccess"], "autoscaling:attachinstances": ["AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AmazonLaunchWizard_Fullaccess", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkService"], "autoscaling:deletescheduledaction": ["AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkService"], "autoscaling:detachinstances": ["GameLiftGameServerGroupPolicy", "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSElasticBeanstalkRoleCore", "AWSElasticBeanstalkService"], "cloud9:createenvironmentssh": ["AWSCloud9User"], "cloud9:getuserpublickey": ["AWSCloud9User"], "xray:*": ["AWSXrayFullAccess"], "kms:tagresource": ["AWSKeyManagementServicePowerUser"], "kms:untagresource": ["AWSKeyManagementServicePowerUser"], "devicefarm:*": ["AWSDeviceFarmFullAccess"], "sqs:changemessagevisibility": ["AWSElasticBeanstalkWorkerTier"], "dynamodb:batchwriteitem": ["AWSElasticBeanstalkWorkerTier", "AWSBackupServiceRolePolicyForRestores", "AWSThinkboxDeadlineResourceTrackerAdminPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy"], "acm-pca:getpolicy": ["AWSCertificateManagerPrivateCAAuditor", "AWSCertificateManagerPrivateCAReadOnly"], "wam:authenticatepackager": ["AmazonWorkSpacesApplicationManagerAdminAccess"], "ds:checkalias": ["AmazonWorkMailFullAccess"], "ds:createdirectory": ["AmazonWorkMailFullAccess"], "workmail:*": ["AmazonWorkMailFullAccess"], "glacier:*": ["AmazonGlacierFullAccess"], "iot1click:*": ["AWSIoT1ClickFullAccess"], "ec2:createcarriergateway": ["NetworkAdministrator"], "ec2:deletecarriergateway": ["NetworkAdministrator"], "ec2:describecarriergateways": ["NetworkAdministrator"], "networkmanager:*": ["NetworkAdministrator", "AWSNetworkManagerFullAccess"], "ec2:accepttransitgatewayvpcattachment": ["NetworkAdministrator"], "ec2:associatetransitgatewayroutetable": ["NetworkAdministrator"], "ec2:createtransitgateway": ["NetworkAdministrator"], "ec2:createtransitgatewayroute": ["NetworkAdministrator"], "ec2:createtransitgatewayroutetable": ["NetworkAdministrator"], "ec2:createtransitgatewayvpcattachment": ["NetworkAdministrator"], "ec2:deletetransitgateway": ["NetworkAdministrator"], "ec2:deletetransitgatewayroute": ["NetworkAdministrator"], "ec2:deletetransitgatewayroutetable": ["NetworkAdministrator"], "ec2:deletetransitgatewayvpcattachment": ["NetworkAdministrator"], "ec2:disabletransitgatewayroutetablepropagation": ["NetworkAdministrator"], "ec2:disassociatetransitgatewayroutetable": ["NetworkAdministrator"], "ec2:enabletransitgatewayroutetablepropagation": ["NetworkAdministrator"], "ec2:exporttransitgatewayroutes": ["NetworkAdministrator"], "ec2:modifytransitgatewayvpcattachment": ["NetworkAdministrator"], "ec2:rejecttransitgatewayvpcattachment": ["NetworkAdministrator"], "ec2:replacetransitgatewayroute": ["NetworkAdministrator"], "iot:*": ["AWSIoTFullAccess"], "kinesisanalytics:*": ["AmazonKinesisAnalyticsFullAccess"], "fms:*": ["AWSFMAdminFullAccess"], "acm-pca:createcertificateauthorityauditreport": ["AWSCertificateManagerPrivateCAAuditor"], "sagemaker:batchgetmetrics": ["AmazonSageMakerReadOnly"], "cognito-idp:listusers": ["AmazonSageMakerReadOnly"], "cognito-idp:listusersingroup": ["AmazonSageMakerReadOnly"], "aws-portal:viewbilling": ["AWSBillingReadOnlyAccess", "AWSAccountActivityAccess"], "aws-marketplace:subscribe": ["AWSDataExchangeFullAccess", "AWSMarketplaceManageSubscriptions", "AWSIQContractServiceRolePolicy", "AWSDataExchangeSubscriberFullAccess"], "aws-marketplace:unsubscribe": ["AWSDataExchangeFullAccess", "AWSMarketplaceManageSubscriptions", "AWSDataExchangeSubscriberFullAccess"], "aws-marketplace:createprivatemarketplacerequests": ["AWSMarketplaceManageSubscriptions"], "ecs:updatecontainerinstancesstate": ["AmazonEC2ContainerServiceforEC2Role"], "deepracer:*": ["AWSDeepRacerServiceRolePolicy"], "cloudformation:detectstackdrift": ["AWSDeepRacerServiceRolePolicy"], "cloudformation:describestackdriftdetectionstatus": ["AWSDeepRacerServiceRolePolicy", "AmazonLaunchWizard_Fullaccess"], "cloudformation:describestackresourcedrifts": ["AWSDeepRacerServiceRolePolicy"], "kinesisvideo:gethlsstreamingsessionurl": ["AWSDeepRacerServiceRolePolicy"], "lex:postcontent": ["AmazonLexRunBotsOnly"], "lex:putsession": ["AmazonLexRunBotsOnly"], "lex:getsession": ["AmazonLexRunBotsOnly"], "lex:deletesession": ["AmazonLexRunBotsOnly"], "lambda:tagresource": ["AWSDeepRacerCloudFormationAccessPolicy"], "robomaker:createsimulationapplication": ["AmazonSageMakerFullAccess", "AWSDeepRacerCloudFormationAccessPolicy"], "robomaker:createsimulationapplicationversion": ["AWSDeepRacerCloudFormationAccessPolicy"], "robomaker:deletesimulationapplication": ["AmazonSageMakerFullAccess", "AWSDeepRacerCloudFormationAccessPolicy"], "robomaker:tagresource": ["AWSDeepRacerCloudFormationAccessPolicy", "AWSRoboMakerServicePolicy"], "robomaker:updatesimulationapplication": ["AWSDeepRacerCloudFormationAccessPolicy"], "cloudformation:validatetemplate": ["ServerMigration_ServiceRole", "AWSServiceCatalogAdminFullAccess", "AWSServiceRoleForSMS", "ConfigConformsServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess", "AWSCloudFormationReadOnlyAccess"], "polly:*": ["AmazonPollyFullAccess"], "elasticloadbalancing:list*": ["AWSShieldDRTAccessPolicy"], "cloudfront:describe*": ["AWSShieldDRTAccessPolicy"], "route53:describe*": ["AWSShieldDRTAccessPolicy"], "cloudfront:getdistribution*": ["AWSShieldDRTAccessPolicy"], "shield:*": ["AWSShieldDRTAccessPolicy"], "translate:translatetext": ["TranslateReadOnly", "AWSForWordPressPluginPolicy"], "translate:getterminology": ["TranslateReadOnly"], "translate:listterminologies": ["TranslateReadOnly"], "translate:listtexttranslationjobs": ["TranslateReadOnly"], "translate:describetexttranslationjob": ["TranslateReadOnly"], "secretsmanager:deleteresourcepolicy": ["KafkaServiceRolePolicy"], "acm:*": ["AWSCertificateManagerFullAccess"], "cloudformation:setstackpolicy": ["ConfigConformsServiceRolePolicy", "AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:tagresource": ["AmazonLaunchWizard_Fullaccess", "AWSServiceCatalogAdminFullAccess", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:createstackset": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:createstackinstances": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:updatestackset": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:updatestackinstances": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:deletestackset": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:deletestackinstances": ["AWSServiceCatalogAdminFullAccess", "AWSControlTowerServiceRolePolicy", "AWSServiceCatalogEndUserFullAccess"], "cloudformation:createuploadbucket": ["AWSServiceCatalogAdminFullAccess"], "servicecatalog:*": ["AWSServiceCatalogAdminFullAccess"], "lex:*": ["AmazonLexFullAccess"], "lambda:removepermission": ["AmazonLexFullAccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "frauddetector:*": ["AmazonFraudDetectorFullAccessPolicy"], "dynamodb:restoretablefrombackup": ["AWSBackupServiceRolePolicyForRestores"], "storagegateway:deletevolume": ["AWSBackupServiceRolePolicyForRestores"], "storagegateway:createstorediscsivolume": ["AWSBackupServiceRolePolicyForRestores"], "storagegateway:createcachediscsivolume": ["AWSBackupServiceRolePolicyForRestores"], "rds:restoredbinstancefromdbsnapshot": ["AWSBackupServiceRolePolicyForRestores"], "kms:decrypt": ["AWSServiceRoleForImageBuilder", "AWSBackupServiceRolePolicyForRestores"], "kms:generatedatakey": ["AWSThinkboxAWSPortalAdminPolicy", "AWSBackupServiceRolePolicyForRestores", "AWSBackupFullAccess"], "kms:reencryptto": ["AWSServiceRoleForImageBuilder", "AWSBackupServiceRolePolicyForRestores"], "kms:reencryptfrom": ["AWSServiceRoleForImageBuilder", "AWSBackupServiceRolePolicyForRestores"], "mediastore:*": ["AWSElementalMediaStoreFullAccess"], "ec2:describeinstancetypes": ["AmazonEKS_CNI_Policy", "AWSServiceRoleForImageBuilder", "AWSBackupFullAccess", "AWSBackupOperatorAccess"], "s3:getobjecttagging": ["AmazonRekognitionCustomLabelsFullAccess", "AmazonMacieServiceRolePolicy"], "events:describeeventsource": ["AmazonEventBridgeReadOnlyAccess"], "events:listeventbuses": ["AmazonEventBridgeReadOnlyAccess"], "events:listeventsources": ["AmazonEventBridgeReadOnlyAccess"], "sagemaker:*humanloop": ["AmazonAugmentedAIFullAccess", "AmazonAugmentedAIIntegratedAPIAccess", "AmazonAugmentedAIHumanLoopFullAccess"], "sagemaker:*humanloops": ["AmazonAugmentedAIFullAccess", "AmazonAugmentedAIIntegratedAPIAccess", "AmazonAugmentedAIHumanLoopFullAccess"], "sagemaker:*humantaskui": ["AmazonAugmentedAIIntegratedAPIAccess", "AmazonAugmentedAIFullAccess"], "sagemaker:*humantaskuis": ["AmazonAugmentedAIIntegratedAPIAccess", "AmazonAugmentedAIFullAccess"], "textract:analyzedocument": ["AmazonAugmentedAIIntegratedAPIAccess"], "signer:listsigningjobs": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "freertos:listhardwareplatforms": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "signer:listsigningplatforms": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "iot-device-tester:sendmetrics": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "iot-device-tester:supportedversion": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "iot-device-tester:latestidt": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "iot-device-tester:checkversion": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "iot-device-tester:downloadtestsuite": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "signer:cancelsigningprofile": ["AWSIoTDeviceTesterForFreeRTOSFullAccess"], "organizations:listdelegatedservicesforaccount": ["AWSSystemsManagerAccountDiscoveryServicePolicy"], "organizations:listdelegatedadministrators": ["AccessAnalyzerServiceRolePolicy", "IAMAccessAnalyzerFullAccess", "AWSSystemsManagerAccountDiscoveryServicePolicy"], "codestar-connections:createconnection": ["AWSCodeBuildAdminAccess"], "codestar-connections:deleteconnection": ["AWSCodeBuildAdminAccess"], "codestar-connections:updateconnectioninstallation": ["AWSCodeBuildAdminAccess"], "codestar-connections:tagresource": ["AWSCodeBuildAdminAccess", "AmazonCodeGuruReviewerFullAccess"], "codestar-connections:untagresource": ["AWSCodeBuildAdminAccess", "AmazonCodeGuruReviewerFullAccess"], "codestar-connections:listinstallationtargets": ["AWSCodeBuildAdminAccess"], "codestar-connections:listtagsforresource": ["AWSCodeBuildAdminAccess", "AmazonCodeGuruReviewerFullAccess"], "codestar-connections:getindividualaccesstoken": ["AWSCodeBuildAdminAccess"], "codestar-connections:getinstallationurl": ["AWSCodeBuildAdminAccess"], "codestar-connections:passconnection": ["AWSCodeBuildAdminAccess", "AmazonCodeGuruReviewerFullAccess"], "codestar-connections:startoauthhandshake": ["AWSCodeBuildAdminAccess"], "codestar-connections:useconnection": ["AmazonCodeGuruReviewerServiceRolePolicy", "AWSCodeBuildAdminAccess", "AmazonCodeGuruReviewerFullAccess"], "chime:createmeeting": ["AmazonChimeSDK"], "chime:createmeetingwithattendees": ["AmazonChimeSDK"], "chime:deletemeeting": ["AmazonChimeSDK"], "chime:getmeeting": ["AmazonChimeSDK"], "chime:listmeetings": ["AmazonChimeSDK"], "chime:createattendee": ["AmazonChimeSDK"], "chime:batchcreateattendee": ["AmazonChimeSDK"], "chime:deleteattendee": ["AmazonChimeSDK"], "chime:getattendee": ["AmazonChimeSDK"], "chime:listattendees": ["AmazonChimeSDK"], "chime:listattendeetags": ["AmazonChimeSDK"], "chime:listmeetingtags": ["AmazonChimeSDK"], "chime:listtagsforresource": ["AmazonChimeSDK"], "chime:tagattendee": ["AmazonChimeSDK"], "chime:tagmeeting": ["AmazonChimeSDK"], "chime:tagresource": ["AmazonChimeSDK"], "chime:untagattendee": ["AmazonChimeSDK"], "chime:untagmeeting": ["AmazonChimeSDK"], "chime:untagresource": ["AmazonChimeSDK"], "config:describeremediationconfigurations": ["ConfigConformsServiceRolePolicy"], "config:deleteremediationconfiguration": ["ConfigConformsServiceRolePolicy"], "config:putremediationconfigurations": ["ConfigConformsServiceRolePolicy"], "cloudformation:updateterminationprotection": ["AWSThinkboxAWSPortalAdminPolicy", "ConfigConformsServiceRolePolicy", "AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "robomaker:createsimulationjob": ["AmazonSageMakerFullAccess", "AWSRoboMakerServicePolicy"], "robomaker:cancelsimulationjob": ["AmazonSageMakerFullAccess", "AWSRoboMakerServicePolicy"], "lambda:createalias": ["AWSRoboMakerServicePolicy"], "lambda:deletealias": ["AWSRoboMakerServicePolicy"], "managedblockchain:*": ["AmazonManagedBlockchainConsoleFullAccess", "AmazonManagedBlockchainFullAccess"], "honeycode:list*": ["AmazonHoneycodeReadOnlyAccess"], "honeycode:get*": ["AmazonHoneycodeReadOnlyAccess"], "comprehendmedical:*": ["ComprehendMedicalFullAccess"], "cassandra:alter": ["AWSApplicationAutoscalingCassandraTablePolicy"], "cognito-idp:adminaddusertogroup": ["AmazonSageMakerFullAccess"], "cognito-idp:admincreateuser": ["AmazonSageMakerFullAccess"], "cognito-idp:admindeleteuser": ["AmazonSageMakerFullAccess"], "cognito-idp:admindisableuser": ["AmazonSageMakerFullAccess"], "cognito-idp:adminenableuser": ["AmazonSageMakerFullAccess"], "cognito-idp:adminremoveuserfromgroup": ["AmazonSageMakerFullAccess"], "cognito-idp:creategroup": ["AmazonSageMakerFullAccess"], "cognito-idp:createuserpool": ["AmazonSageMakerFullAccess"], "cognito-idp:createuserpooldomain": ["AmazonSageMakerFullAccess"], "cognito-idp:updateuserpool": ["AmazonSageMakerFullAccess"], "cognito-idp:updateuserpoolclient": ["AmazonSageMakerFullAccess"], "ecr:createrepository": ["AmazonSageMakerFullAccess"], "ecr:startimagescan": ["AmazonSageMakerFullAccess"], "elastic-inference:connect": ["AmazonSageMakerFullAccess"], "glue:resetjobbookmark": ["AmazonSageMakerFullAccess"], "glue:startjobrun": ["AmazonSageMakerFullAccess"], "groundtruthlabeling:*": ["AmazonSageMakerFullAccess"], "ecr:setrepositorypolicy": ["AmazonSageMakerFullAccess"], "ecr:batchdeleteimage": ["AmazonSageMakerFullAccess"], "ecr:deleterepositorypolicy": ["AmazonSageMakerFullAccess"], "ecr:deleterepository": ["AmazonSageMakerFullAccess"], "honeycode:*": ["AmazonHoneycodeFullAccess"], "organizations:*": ["AWSOrganizationsFullAccess"], "aws-marketplace:getagreementrequest": ["AWSDataExchangeFullAccess", "AWSDataExchangeSubscriberFullAccess", "AWSDataExchangeReadOnly"], "aws-marketplace:listagreementrequests": ["AWSDataExchangeFullAccess", "AWSDataExchangeSubscriberFullAccess", "AWSDataExchangeReadOnly"], "aws-marketplace:getagreementapprovalrequest": ["AWSDataExchangeProviderFullAccess", "AWSDataExchangeFullAccess", "AWSDataExchangeReadOnly"], "aws-marketplace:listagreementapprovalrequests": ["AWSDataExchangeProviderFullAccess", "AWSDataExchangeFullAccess", "AWSDataExchangeReadOnly"], "aws-marketplace:describeentity": ["AWSDataExchangeReadOnly", "AWSMarketplaceSellerProductsFullAccess", "AWSDataExchangeFullAccess", "AWSMarketplaceSellerFullAccess", "AWSMarketplaceSellerProductsReadOnly", "AWSDataExchangeProviderFullAccess"], "aws-marketplace:listentities": ["AWSDataExchangeReadOnly", "AWSMarketplaceSellerProductsFullAccess", "AWSDataExchangeFullAccess", "AWSMarketplaceSellerFullAccess", "AWSMarketplaceSellerProductsReadOnly", "AWSDataExchangeProviderFullAccess"], "aws-marketplace:describechangeset": ["AWSDataExchangeReadOnly", "AWSMarketplaceSellerProductsFullAccess", "AWSDataExchangeFullAccess", "AWSMarketplaceSellerFullAccess", "AWSMarketplaceSellerProductsReadOnly", "AWSDataExchangeProviderFullAccess"], "aws-marketplace:listchangesets": ["AWSDataExchangeReadOnly", "AWSMarketplaceSellerProductsFullAccess", "AWSDataExchangeFullAccess", "AWSMarketplaceSellerFullAccess", "AWSMarketplaceSellerProductsReadOnly", "AWSDataExchangeProviderFullAccess"], "iotsitewise:createproject": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:updateproject": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:deleteproject": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:batchassociateprojectassets": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:batchdisassociateprojectassets": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:createdashboard": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:updatedashboard": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:deletedashboard": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:createaccesspolicy": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:updateaccesspolicy": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:deleteaccesspolicy": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:listassets": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:getassetpropertyvalue": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:getassetpropertyvaluehistory": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "iotsitewise:getassetpropertyaggregates": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "sso-directory:describeusers": ["AWSIoTSiteWiseMonitorServiceRolePolicy", "AWSIoTSiteWiseMonitorPortalAccess"], "servicecatalog:provisionproduct": ["AWSServiceCatalogEndUserFullAccess"], "servicecatalog:describeprovisionedproduct": ["AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogEndUserFullAccess"], "servicecatalog:liststackinstancesforprovisionedproduct": ["AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogEndUserFullAccess"], "servicecatalog:terminateprovisionedproduct": ["AWSServiceCatalogEndUserFullAccess"], "servicecatalog:updateprovisionedproduct": ["AWSServiceCatalogEndUserFullAccess"], "servicecatalog:searchprovisionedproducts": ["AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogEndUserFullAccess"], "servicecatalog:createprovisionedproductplan": ["AWSServiceCatalogEndUserFullAccess"], "servicecatalog:describeprovisionedproductplan": ["AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogEndUserFullAccess"], "servicecatalog:executeprovisionedproductplan": ["AWSServiceCatalogEndUserFullAccess"], "servicecatalog:deleteprovisionedproductplan": ["AWSServiceCatalogEndUserFullAccess"], "servicecatalog:listprovisionedproductplans": ["AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogEndUserFullAccess"], "servicecatalog:listserviceactionsforprovisioningartifact": ["AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogEndUserFullAccess"], "servicecatalog:executeprovisionedproductserviceaction": ["AWSServiceCatalogEndUserFullAccess"], "servicecatalog:describeserviceactionexecutionparameters": ["AWSServiceCatalogEndUserReadOnlyAccess", "AWSServiceCatalogEndUserFullAccess"], "appflow:describeconnectors": ["AmazonAppFlowReadOnlyAccess"], "appflow:describeconnectorprofiles": ["AmazonAppFlowReadOnlyAccess"], "appflow:describeflows": ["AmazonAppFlowReadOnlyAccess"], "appflow:describeflowexecution": ["AmazonAppFlowReadOnlyAccess"], "appflow:describeconnectorfields": ["AmazonAppFlowReadOnlyAccess"], "appflow:listconnectorfields": ["AmazonAppFlowReadOnlyAccess"], "appflow:listtagsforresource": ["AmazonAppFlowReadOnlyAccess"], "opsworks:assigninstance": ["AWSOpsWorksRegisterCLI_EC2", "AWSOpsWorksRegisterCLI_OnPremises"], "opsworks:createlayer": ["AWSOpsWorksRegisterCLI_EC2", "AWSOpsWorksRegisterCLI_OnPremises"], "opsworks:deregisterinstance": ["AWSOpsWorksRegisterCLI_EC2", "AWSOpsWorksRegisterCLI_OnPremises"], "opsworks:unassigninstance": ["AWSOpsWorksRegisterCLI_EC2", "AWSOpsWorksRegisterCLI_OnPremises"], "iam:creategroup": ["AWSOpsWorksRegisterCLI_OnPremises"], "iam:addusertogroup": ["AWSOpsWorksRegisterCLI_OnPremises"], "iam:createuser": ["AWSCompromisedKeyQuarantine", "AWSOpsWorksRegisterCLI_OnPremises"], "iam:createaccesskey": ["AWSCompromisedKeyQuarantine", "AWSOpsWorksRegisterCLI_OnPremises"], "ec2:describeinstancetypeofferings": ["AWSServiceRoleForImageBuilder", "AWSThinkboxAWSPortalAdminPolicy"], "ec2:deletefleets": ["AWSThinkboxAWSPortalAdminPolicy", "AWSThinkboxDeadlineResourceTrackerAccessPolicy"], "ec2:modifyfleet": ["AWSThinkboxAWSPortalAdminPolicy"], "s3:putbucketacl": ["AWSThinkboxAWSPortalAdminPolicy"], "logs:deleteretentionpolicy": ["AWSThinkboxAWSPortalAdminPolicy"], "codeguru-reviewer:*": ["AmazonCodeGuruReviewerFullAccess"], "codeguru:*": ["AmazonCodeGuruProfilerFullAccess", "AmazonCodeGuruReviewerFullAccess"], "applicationinsights:*": ["AmazonLaunchWizard_Fullaccess"], "s3:listobjects": ["AmazonLaunchWizard_Fullaccess", "AmazonLambdaRolePolicyForLaunchWizardSAP"], "s3:listobjectsv2": ["AmazonLaunchWizard_Fullaccess", "AmazonLambdaRolePolicyForLaunchWizardSAP"], "ec2:allocatehosts": ["AmazonLaunchWizard_Fullaccess"], "ec2:modifyvolumeattribute": ["AmazonLaunchWizard_Fullaccess"], "ds:addiproutes": ["AmazonLaunchWizard_Fullaccess"], "ds:createmicrosoftad": ["AmazonLaunchWizard_Fullaccess"], "logs:describelog*": ["AmazonLaunchWizard_Fullaccess"], "ssm:deletedocument": ["AmazonLaunchWizard_Fullaccess"], "ssm:deleteparameter*": ["AmazonLaunchWizard_Fullaccess"], "ssm:describedocument*": ["AmazonLaunchWizard_Fullaccess"], "logs:getlogrecord": ["AmazonLaunchWizard_Fullaccess"], "ssm:describeautomation*": ["AmazonLaunchWizard_Fullaccess"], "ssm:getparameter*": ["AmazonLaunchWizard_Fullaccess"], "ssm:listcommand*": ["AmazonLaunchWizard_Fullaccess"], "ssm:listdocument*": ["AmazonLaunchWizard_Fullaccess"], "ssm:stopautomationexecution": ["AWSServiceRoleForImageBuilder", "AmazonLaunchWizard_Fullaccess"], "logs:getlog*": ["AmazonLaunchWizard_Fullaccess"], "launchwizard:*": ["AmazonLaunchWizard_Fullaccess"], "sqs:tagqueue": ["AmazonLaunchWizard_Fullaccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "sqs:addpermission": ["AmazonLaunchWizard_Fullaccess"], "sqs:deletequeue": ["AmazonLaunchWizard_Fullaccess", "AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "sqs:setqueueattributes": ["AmazonSageMakerGroundTruthExecution", "AmazonLaunchWizard_Fullaccess"], "kendra:*": ["AmazonKendraFullAccess"], "firehose:listtagsfordeliverystream": ["AWSServiceRoleForLogDeliveryPolicy"], "kafka:describeclusteroperation": ["AWSApplicationAutoscalingKafkaClusterPolicy"], "kafka:updatebrokerstorage": ["AWSApplicationAutoscalingKafkaClusterPolicy"], "imagebuilder:*": ["AWSImageBuilderFullAccess"], "aws-marketplace:putprocurementsystemconfiguration": ["AWSMarketplaceProcurementSystemAdminFullAccess"], "aws-marketplace:describeprocurementsystemconfiguration": ["AWSMarketplaceProcurementSystemAdminFullAccess"], "access-analyzer:get*": ["IAMAccessAnalyzerReadOnlyAccess"], "access-analyzer:list*": ["IAMAccessAnalyzerReadOnlyAccess"], "ram:*": ["AWSResourceAccessManagerFullAccess"], "servicequotas:*": ["ServiceQuotasFullAccess"], "elemental-appliances-software:*": ["ElementalAppliancesSoftwareFullAccess"], "organizations:attachpolicy": ["AWSBackupOrganizationAdminAccess"], "organizations:detachpolicy": ["AWSBackupOrganizationAdminAccess"], "organizations:disablepolicytype": ["AWSBackupOrganizationAdminAccess"], "organizations:describeeffectivepolicy": ["AWSBackupOrganizationAdminAccess"], "organizations:enablepolicytype": ["AWSBackupOrganizationAdminAccess"], "organizations:createpolicy": ["AWSBackupOrganizationAdminAccess"], "organizations:updatepolicy": ["AWSBackupOrganizationAdminAccess"], "organizations:deletepolicy": ["AWSBackupOrganizationAdminAccess"], "iotevents:describe*": ["AWSIoTEventsReadOnlyAccess"], "iotevents:list*": ["AWSIoTEventsReadOnlyAccess"], "comprehend:updateendpoint": ["AWSApplicationAutoscalingComprehendEndpointPolicy"], "rds:createdbsecuritygroup": ["AWSElasticBeanstalkRoleRDS"], "rds:deletedbsecuritygroup": ["AWSElasticBeanstalkRoleRDS"], "rds:authorizedbsecuritygroupingress": ["AWSElasticBeanstalkRoleRDS"], "backup-storage:mountcapsule": ["AmazonElasticFileSystemServiceRolePolicy"], "backup:createbackupvault": ["AmazonElasticFileSystemServiceRolePolicy"], "backup:putbackupvaultaccesspolicy": ["AmazonElasticFileSystemServiceRolePolicy"], "backup:createbackupplan": ["AmazonElasticFileSystemServiceRolePolicy"], "backup:createbackupselection": ["AmazonElasticFileSystemServiceRolePolicy", "AWSBackupOperatorAccess"], "aws-marketplace:startchangeset": ["AWSMarketplaceSellerFullAccess", "AWSDataExchangeProviderFullAccess", "AWSDataExchangeFullAccess", "AWSMarketplaceSellerProductsFullAccess"], "aws-marketplace:cancelchangeset": ["AWSMarketplaceSellerFullAccess", "AWSDataExchangeProviderFullAccess", "AWSDataExchangeFullAccess", "AWSMarketplaceSellerProductsFullAccess"], "aws-marketplace:listtasks": ["AWSMarketplaceSellerFullAccess", "AWSMarketplaceSellerProductsReadOnly", "AWSMarketplaceSellerProductsFullAccess"], "aws-marketplace:describetask": ["AWSMarketplaceSellerFullAccess", "AWSMarketplaceSellerProductsReadOnly", "AWSMarketplaceSellerProductsFullAccess"], "aws-marketplace:updatetask": ["AWSMarketplaceSellerFullAccess", "AWSMarketplaceSellerProductsFullAccess"], "aws-marketplace:completetask": ["AWSMarketplaceSellerFullAccess", "AWSMarketplaceSellerProductsFullAccess"], "sms:*": ["ServerMigrationServiceConsoleFullAccess"], "ssm:createresourcedatasync": ["AWSLicenseManagerMemberAccountRolePolicy"], "ssm:deleteresourcedatasync": ["AWSLicenseManagerMemberAccountRolePolicy"], "ram:acceptresourceshareinvitation": ["AWSLicenseManagerMemberAccountRolePolicy", "AWSResourceAccessManagerResourceShareParticipantAccess"], "ram:getresourceshareinvitations": ["AWSLicenseManagerMemberAccountRolePolicy", "AWSResourceAccessManagerResourceShareParticipantAccess"], "elasticfilesystem:clientmount": ["AmazonElasticFileSystemClientFullAccess", "AmazonElasticFileSystemClientReadOnlyAccess", "AmazonElasticFileSystemClientReadWriteAccess"], "elasticfilesystem:clientwrite": ["AmazonElasticFileSystemClientFullAccess", "AmazonElasticFileSystemClientReadWriteAccess"], "cassandra:*": ["AmazonKeyspacesFullAccess", "AmazonMCSFullAccess"], "workdocs:*": ["AmazonWorkDocsFullAccess"], "acm:exportcertificate": ["AWSVPCS2SVpnServiceRolePolicy"], "cloudformation:cancelupdatestack": ["AWSElasticBeanstalkManagedUpdatesServiceRolePolicy", "AWSElasticBeanstalkRoleCore"], "s3:putobjectversionacl": ["AWSElasticBeanstalkManagedUpdatesServiceRolePolicy"], "a4b:disassociatedevicefromroom": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:deletedevice": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:updatedevice": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:registeravsdevice": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:associatedevicewithroom": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:createroom": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:disassociateskillgroupfromroom": ["AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:associateskillgroupwithroom": ["AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:getaddressbook": ["AlexaForBusinessLifesizeDelegatedAccessPolicy", "AlexaForBusinessPolyDelegatedAccessPolicy"], "a4b:updateroom": ["AlexaForBusinessPolyDelegatedAccessPolicy"], "iam:generateorganizationsaccessreport": ["IAMAccessAdvisorReadOnly"], "iam:getservicelastaccesseddetailswithentities": ["IAMAccessAdvisorReadOnly"], "iam:getorganizationsaccessreport": ["IAMAccessAdvisorReadOnly"], "sagemaker:updatenotebookinstancelifecycleconfig": ["AmazonBraketFullAccess"], "braket:*": ["AmazonBraketFullAccess"], "qldb:createledger": ["AmazonQLDBFullAccess"], "qldb:updateledger": ["AmazonQLDBFullAccess"], "qldb:deleteledger": ["AmazonQLDBFullAccess"], "qldb:exportjournaltos3": ["AmazonQLDBFullAccess"], "qldb:canceljournalkinesisstream": ["AmazonQLDBFullAccess"], "qldb:describejournalkinesisstream": ["AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:listjournalkinesisstreamsforledger": ["AmazonQLDBFullAccess", "AmazonQLDBReadOnly"], "qldb:streamjournaltokinesis": ["AmazonQLDBFullAccess"], "qldb:tagresource": ["AmazonQLDBFullAccess"], "qldb:untagresource": ["AmazonQLDBFullAccess"], "qldb:sendcommand": ["AmazonQLDBFullAccess"], "detective:*": ["AmazonDetectiveFullAccess"], "guardduty:archivefindings": ["AmazonDetectiveFullAccess"], "sqs:sendmessagebatch": ["AmazonSageMakerGroundTruthExecution"], "codecommit:getcommentsforpullrequest": ["AWSCodeStarNotificationsServiceRolePolicy", "AmazonCodeGuruReviewerServiceRolePolicy"], "codecommit:getcommentsforcomparedcommit": ["AWSCodeStarNotificationsServiceRolePolicy"], "chatbot:updateslackchannelconfiguration": ["AWSCodeStarNotificationsServiceRolePolicy"], "codecommit:getdifferences": ["AWSCodeStarNotificationsServiceRolePolicy", "AmazonCodeGuruReviewerServiceRolePolicy"], "codecommit:getfile": ["AWSCodeStarNotificationsServiceRolePolicy"], "elemental-activations:get*": ["ElementalActivationsDownloadSoftwareAccess", "ElementalActivationsGenerateLicenses", "ElementalActivationsReadOnlyAccess"], "elemental-activations:download*": ["ElementalActivationsDownloadSoftwareAccess"], "codeguru-profiler:*": ["AmazonCodeGuruProfilerFullAccess"], "chime:getvoiceconnector*": ["AmazonChimeVoiceConnectorServiceLinkedRolePolicy"], "l": ["AWSElementalMediaLiveFullAccess"], "v": ["AWSElementalMediaLiveFullAccess"], "honeycode:getscreendata": ["AmazonHoneycodeWorkbookReadOnlyAccess", "AmazonHoneycodeWorkbookFullAccess"], "elasticfilesystem:clientrootaccess": ["AmazonElasticFileSystemClientFullAccess"], "compute-optimizer:*": ["ComputeOptimizerServiceRolePolicy"], "schemas:*": ["AmazonEventBridgeSchemasFullAccess"], "autoscaling:enterstandby": ["GameLiftGameServerGroupPolicy"], "lambda:putprovisionedconcurrencyconfig": ["AWSApplicationAutoscalingLambdaConcurrencyPolicy"], "lambda:deleteprovisionedconcurrencyconfig": ["AWSApplicationAutoscalingLambdaConcurrencyPolicy"], "honeycode:listteamassociations": ["AmazonHoneycodeTeamAssociationReadOnlyAccess", "AmazonHoneycodeTeamAssociationFullAccess"], "appmesh:*": ["AWSAppMeshFullAccess"], "a4b:createcontact": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:updatecontact": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:listconferenceproviders": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:deleteroom": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:createaddressbook": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:disassociatecontactfromaddressbook": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:createconferenceprovider": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:putconferencepreference": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:deleteaddressbook": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:associatecontactwithaddressbook": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:deletecontact": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:updateprofile": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "a4b:getcontact": ["AlexaForBusinessLifesizeDelegatedAccessPolicy"], "backup:deletebackupselection": ["AWSBackupOperatorAccess"], "backup:startbackupjob": ["AWSBackupOperatorAccess"], "backup:startrestorejob": ["AWSBackupOperatorAccess"], "backup:startcopyjob": ["AWSBackupOperatorAccess"], "ram:getresourcepolicies": ["AWSResourceAccessManagerResourceShareParticipantAccess"], "ram:listpendinginvitationresources": ["AWSResourceAccessManagerResourceShareParticipantAccess"], "ram:listprincipals": ["AWSResourceAccessManagerResourceShareParticipantAccess"], "ram:listresources": ["AWSResourceAccessManagerResourceShareParticipantAccess"], "ram:rejectresourceshareinvitation": ["AWSResourceAccessManagerResourceShareParticipantAccess"], "codeartifact:*": ["AWSCodeArtifactAdminAccess"], "sts:getservicebearertoken": ["AWSCodeArtifactReadOnlyAccess", "AWSCodeArtifactAdminAccess"], "medialive:list*": ["AWSElementalMediaLiveReadOnly"], "medialive:describe*": ["AWSElementalMediaLiveReadOnly"], "elemental-activations:generatelicenses": ["ElementalActivationsGenerateLicenses"], "elemental-activations:startfileupload": ["ElementalActivationsGenerateLicenses"], "elemental-activations:completefileupload": ["ElementalActivationsGenerateLicenses"], "access-analyzer:*": ["IAMAccessAnalyzerFullAccess"], "schemas:listdiscoverers": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:describediscoverer": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:listregistries": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:describeregistry": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:searchschemas": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:listschemas": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:listschemaversions": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:describeschema": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:getdiscoveredschema": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:describecodebinding": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:getcodebindingsource": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:listtagsforresource": ["AmazonEventBridgeSchemasReadOnlyAccess"], "schemas:getresourcepolicy": ["AmazonEventBridgeSchemasReadOnlyAccess"], "route53resolver:*": ["AmazonRoute53ResolverFullAccess"], "sts:assumerole": ["CloudFormationStackSetsOrgAdminServiceRolePolicy", "AWSServiceRoleForImageBuilder", "CloudWatch-CrossAccountAccess", "AWSControlTowerServiceRolePolicy"], "codeguru:get*": ["AmazonCodeGuruProfilerReadOnlyAccess"], "codeguru-profiler:batchget*": ["AmazonCodeGuruProfilerReadOnlyAccess"], "sso:createmanagedapplicationinstance": ["AmazonSageMakerNotebooksServiceRolePolicy"], "sso:deletemanagedapplicationinstance": ["AmazonSageMakerNotebooksServiceRolePolicy"], "sso:getmanagedapplicationinstance": ["AmazonSageMakerNotebooksServiceRolePolicy"], "sagemaker:createuserprofile": ["AmazonSageMakerNotebooksServiceRolePolicy"], "acm:addtagstocertificate": ["AWSForWordPressPluginPolicy"], "acm:requestcertificate": ["AWSForWordPressPluginPolicy"], "cloudfront:createdistribution": ["AWSForWordPressPluginPolicy"], "cloudfront:createinvalidation": ["AWSForWordPressPluginPolicy"], "cloudfront:deletedistribution": ["AWSForWordPressPluginPolicy"], "cloudfront:tagresource": ["AWSForWordPressPluginPolicy"], "sms:createreplicationjob": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS"], "sms:deletereplicationjob": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS"], "sms:importservercatalog": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS"], "sms:startondemandreplicationrun": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS"], "sms:updatereplicationjob": ["ServerMigration_ServiceRole", "AWSServiceRoleForSMS"], "synthetics:*": ["CloudWatchSyntheticsFullAccess"], "s3:putbucketencryption": ["CloudWatchSyntheticsFullAccess"], "lambda:getlayerversionbyarn": ["CloudWatchSyntheticsFullAccess"], "lambda:publishlayerversion": ["CloudWatchSyntheticsFullAccess"], "codecommit:describepullrequestevents": ["AmazonCodeGuruReviewerServiceRolePolicy"], "codecommit:getpullrequest": ["AmazonCodeGuruReviewerServiceRolePolicy"], "codecommit:listpullrequests": ["AmazonCodeGuruReviewerServiceRolePolicy"], "codecommit:postcommentforpullrequest": ["AmazonCodeGuruReviewerServiceRolePolicy"], "dynamodb:createtable": ["AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "dynamodb:deletetable": ["AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "dynamodb:tagresource": ["AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "dynamodb:untagresource": ["AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "sqs:untagqueue": ["AWSThinkboxDeadlineResourceTrackerAdminPolicy"], "aws-marketplace-management:uploadfiles": ["AWSMarketplaceSellerFullAccess"], "aws-marketplace-management:viewmarketing": ["AWSMarketplaceSellerFullAccess"], "aws-marketplace-management:viewreports": ["AWSMarketplaceSellerFullAccess"], "aws-marketplace-management:viewsupport": ["AWSMarketplaceSellerFullAccess"], "aws-marketplace-management:viewsettings": ["AWSMarketplaceSellerFullAccess"], "aws-marketplace:searchagreements": ["AWSMarketplaceSellerFullAccess"], "aws-marketplace:describeagreement": ["AWSMarketplaceSellerFullAccess"], "aws-marketplace:getagreementterms": ["AWSMarketplaceSellerFullAccess"], "dataexchange:createdataset": ["AWSDataExchangeProviderFullAccess"], "dataexchange:createrevision": ["AWSDataExchangeProviderFullAccess"], "dataexchange:createasset": ["AWSDataExchangeProviderFullAccess"], "dataexchange:update*": ["AWSDataExchangeProviderFullAccess"], "dataexchange:delete*": ["AWSDataExchangeProviderFullAccess"], "dataexchange:tagresource": ["AWSDataExchangeProviderFullAccess"], "dataexchange:untagresource": ["AWSDataExchangeProviderFullAccess"], "dataexchange:createjob": ["AWSDataExchangeSubscriberFullAccess", "AWSDataExchangeProviderFullAccess"], "dataexchange:startjob": ["AWSDataExchangeSubscriberFullAccess", "AWSDataExchangeProviderFullAccess"], "dataexchange:canceljob": ["AWSDataExchangeSubscriberFullAccess", "AWSDataExchangeProviderFullAccess"], "aws-marketplace:acceptagreementapprovalrequest": ["AWSDataExchangeFullAccess", "AWSDataExchangeProviderFullAccess"], "aws-marketplace:rejectagreementapprovalrequest": ["AWSDataExchangeFullAccess", "AWSDataExchangeProviderFullAccess"], "aws-marketplace:updateagreementapprovalrequest": ["AWSDataExchangeFullAccess", "AWSDataExchangeProviderFullAccess"], "iotanalytics:create*": ["AWSIoTSiteWiseConsoleFullAccess"], "backup:*": ["AWSBackupFullAccess"], "backup-storage:*": ["AWSBackupFullAccess"], "networkmanager:describe*": ["AWSNetworkManagerReadOnlyAccess"], "networkmanager:get*": ["AWSNetworkManagerReadOnlyAccess"], "networkmanager:list*": ["AWSNetworkManagerReadOnlyAccess"], "ec2:authorizesecuritygroup*": ["AWSElasticBeanstalkRoleCore"], "ec2:revokesecuritygroup*": ["AWSElasticBeanstalkRoleCore"], "ec2:createlaunchtemplate*": ["AWSElasticBeanstalkRoleCore"], "ec2:deletelaunchtemplate*": ["AWSElasticBeanstalkRoleCore"], "autoscaling:*loadbalancer*": ["AWSElasticBeanstalkRoleCore"], "autoscaling:*autoscalinggroup": ["AWSElasticBeanstalkRoleCore"], "autoscaling:*launchconfiguration": ["AWSElasticBeanstalkRoleCore"], "autoscaling:*tags": ["AWSElasticBeanstalkRoleCore"], "s3:delete*": ["AWSElasticBeanstalkRoleCore"], "cloudformation:continueupdaterollback": ["AWSElasticBeanstalkRoleCore"], "elasticloadbalancing:create*": ["AWSElasticBeanstalkRoleCore"], "elasticloadbalancing:delete*": ["AWSElasticBeanstalkRoleCore"], "elasticloadbalancing:modify*": ["AWSElasticBeanstalkRoleCore"], "elasticloadbalancing:*tags": ["AWSElasticBeanstalkRoleCore"], "elasticloadbalancing:setrulepriorities": ["AWSElasticBeanstalkRoleCore"], "sagemaker:stoptransformjob": ["AWSQuickSightSageMakerPolicy"], "sagemaker:createtransformjob": ["AWSQuickSightSageMakerPolicy"], "awsbillingconsole:*billing": ["AWSPurchaseOrdersServiceRolePolicy"], "kendra:describe*": ["AmazonKendraReadOnlyAccess"], "kendra:list*": ["AmazonKendraReadOnlyAccess"], "kendra:query": ["AmazonKendraReadOnlyAccess"], "managedblockchain:get*": ["AmazonManagedBlockchainReadOnlyAccess"], "managedblockchain:list*": ["AmazonManagedBlockchainReadOnlyAccess"], "dataexchange:*": ["AWSDataExchangeFullAccess"], "aws-marketplace:cancelagreementrequest": ["AWSDataExchangeFullAccess", "AWSDataExchangeSubscriberFullAccess"], "appmesh:streamaggregatedresources": ["AWSAppMeshEnvoyAccess"], "savingsplans:*": ["AWSSavingsPlansFullAccess"], "s3:listobjectversions": ["AmazonLambdaRolePolicyForLaunchWizardSAP"], "s3:putobjecttagging": ["AmazonLambdaRolePolicyForLaunchWizardSAP"], "ec2-instance-connect:sendsshpublickey": ["EC2InstanceConnect"], "aws-marketplace:registerusage": ["AWSMarketplaceMeteringRegisterUsage"], "elemental-activations:*": ["ElementalActivationsFullAccess"], "events:putevents": ["AWSThinkboxDeadlineResourceTrackerAccessPolicy"], "honeycode:invokescreenautomation": ["AmazonHoneycodeWorkbookFullAccess"], "appflow:*": ["AmazonAppFlowFullAccess"], "honeycode:approveteamassociation": ["AmazonHoneycodeTeamAssociationFullAccess"], "honeycode:rejectteamassociation": ["AmazonHoneycodeTeamAssociationFullAccess"], "organizations:createaccount": ["AWSCompromisedKeyQuarantine", "AWSControlTowerServiceRolePolicy"], "organizations:describecreateaccountstatus": ["AWSControlTowerServiceRolePolicy"], "organizations:moveaccount": ["AWSControlTowerServiceRolePolicy"], "servicecatalog:associateprincipalwithportfolio": ["AWSControlTowerServiceRolePolicy"], "config:deleteconfigurationaggregator": ["AWSControlTowerServiceRolePolicy"], "config:putconfigurationaggregator": ["AWSControlTowerServiceRolePolicy"], "config:tagresource": ["AWSControlTowerServiceRolePolicy"], "codeartifact:describe*": ["AWSCodeArtifactReadOnlyAccess"], "codeartifact:get*": ["AWSCodeArtifactReadOnlyAccess"], "codeartifact:list*": ["AWSCodeArtifactReadOnlyAccess"], "codeartifact:readfromrepository": ["AWSCodeArtifactReadOnlyAccess"], "rekognition:createproject": ["AmazonRekognitionCustomLabelsFullAccess"], "rekognition:createprojectversion": ["AmazonRekognitionCustomLabelsFullAccess"], "rekognition:startprojectversion": ["AmazonRekognitionCustomLabelsFullAccess"], "rekognition:stopprojectversion": ["AmazonRekognitionCustomLabelsFullAccess"], "rekognition:deleteproject": ["AmazonRekognitionCustomLabelsFullAccess"], "rekognition:deleteprojectversion": ["AmazonRekognitionCustomLabelsFullAccess"], "sms:notifyappvalidationoutput": ["ServerMigrationServiceRoleForInstanceValidation"], "lakeformation:*": ["AWSLakeFormationDataAdmin"], "glue:searchtables": ["AWSLakeFormationDataAdmin"], "glue:deleteworkflow": ["AWSLakeFormationDataAdmin"], "glue:startworkflowrun": ["AWSLakeFormationDataAdmin"], "lakeformation:putdatalakesettings": ["AWSLakeFormationDataAdmin"], "iam:attachgrouppolicy": ["AWSCompromisedKeyQuarantine"], "iam:createloginprofile": ["AWSCompromisedKeyQuarantine"], "iam:putuserpermissionsboundary": ["AWSCompromisedKeyQuarantine"], "iam:putuserpolicy": ["AWSCompromisedKeyQuarantine"], "iam:updateaccesskey": ["AWSCompromisedKeyQuarantine"], "iam:updateaccountpasswordpolicy": ["AWSCompromisedKeyQuarantine"], "iam:updateuser": ["AWSCompromisedKeyQuarantine"], "organizations:createorganization": ["AWSCompromisedKeyQuarantine"], "organizations:inviteaccounttoorganization": ["AWSCompromisedKeyQuarantine"], "lightsail:create*": ["AWSCompromisedKeyQuarantine"], "lightsail:start*": ["AWSCompromisedKeyQuarantine"], "lightsail:delete*": ["AWSCompromisedKeyQuarantine"], "lightsail:update*": ["AWSCompromisedKeyQuarantine"], "lightsail:getinstanceaccessdetails": ["AWSCompromisedKeyQuarantine"], "lightsail:downloaddefaultkeypair": ["AWSCompromisedKeyQuarantine"], "servicecatalog:get*": ["AWSServiceCatalogAdminReadOnlyAccess"], "appmesh-preview:streamaggregatedresources": ["AWSAppMeshPreviewEnvoyAccess"], "savingsplans:describe*": ["AWSSavingsPlansReadOnlyAccess"], "savingsplans:list*": ["AWSSavingsPlansReadOnlyAccess"], "iq:*": ["AWSIQFullAccess"], "iq-permission:*": ["AWSIQFullAccess"]}